<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>高斯混合模型GMM</title>
    <url>/2019/11/28/%E9%AB%98%E6%96%AF%E6%B7%B7%E5%90%88%E6%A8%A1%E5%9E%8BGMM/</url>
    <content><![CDATA[<h1 id="1-高斯混合模型概念"><a href="#1-高斯混合模型概念" class="headerlink" title="1.高斯混合模型概念"></a>1.高斯混合模型概念</h1><p>高斯混合模型（Gaussian Mixture Model）是一种聚类算法，它是多个高斯分布函数的线性组合，通常用于解决同一集合下的数据包含多种不同的分布情况。<br>高斯混合模型是指具有如下形式的概率分布模型：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191126203555590.png"  width="40%" >
 </center>

<p>其中K为高斯混合模型中成分的个数，g为高斯分布密度，均值是$\mu$协方差矩阵是$\sum{_k}$,另外$\omega$是每个成分的权重。<br>例如如图下所示，是两个高斯分量叠加而成的一维GMM：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/2019112620425469.png"  width="60%" >
 </center>
则上图中红色的曲线其表达式就为;
<center>
 <img  src="https://img-blog.csdnimg.cn/20191126204803304.png"  width="50%" >
 </center>

<p>以下图片左边部分展示的是两个二维高斯分布的平面图，那么其对应的高斯混合模型在三维视图中，就像下图中的右半部分，有着两个峰。<br>    <figure>
         <img  src="https://img-blog.csdnimg.cn/20191126204959305.png"  width="49%" >
         <img  src="https://img-blog.csdnimg.cn/20191126210926617.png"  width="49%" >
    </figure></p>
<p>又或者三个高斯混合模型其叠加后的三维展示图如下所示：</p>
<center>
      <img  src="https://img-blog.csdnimg.cn/20191126211154931.png"  width="60%" >
 </center>

<h1 id="2-高斯混合模型的一个例子"><a href="#2-高斯混合模型的一个例子" class="headerlink" title="2.高斯混合模型的一个例子"></a>2.高斯混合模型的一个例子</h1><p>在校园里随机抽取2000个学生，其中有男生也有女生，已知男女生的身高都服从高斯分布，这两个高斯分布的均值和方差我们不知道，另外，由于某种原因，我们也不知道这2000个人中有多少个男生有多少个女生，现在我们要求出这两个分布的均值和标准差，还有其权重。</p>
<h2 id="2-0-注意事项"><a href="#2-0-注意事项" class="headerlink" title="2.0 注意事项"></a>2.0 注意事项</h2><p>根据题目的需求，我们需要产生两个高斯分布序列，分别代表男女生的身高。需要注意的是，我们在产生序列的时候必须要在知道男女生各占多少的情况下进行随机生成。但是在求解的过程中，我们必须遵照题意，假设不知道男女生的人数和其各自的均值和方差。然后再对这混合后的2000人序列数据，进行不断地迭代，直到得到的均值和方差趋于平稳。<br>对于混合前和混合后的数据分别如下图所示：<br><img src="https://img-blog.csdnimg.cn/20191127213638939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="项目">     | <img src="https://img-blog.csdnimg.cn/2019112721365539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="Value"><br>———— | ——-<br>在图中我们也可以看到，我们生成的女生身高$female$服从于$N(160，16)$,男生身高$male$服从于$N(180,30)$。并且其matlab生成该随机序列的代码如下：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">%绘制男女生身高的例子</span><br><span class="line">clc</span><br><span class="line"><span class="built_in">clear</span> all</span><br><span class="line">%男女生共取<span class="number">2000</span>人，女生平均身高<span class="number">160</span>，男生平均身高<span class="number">180</span></span><br><span class="line">female=<span class="number">160</span>+randn(<span class="number">1</span>,<span class="number">821</span>)*<span class="built_in">sqrt</span>(<span class="number">16</span>);</span><br><span class="line">male=<span class="number">180</span>+randn(<span class="number">1</span>,<span class="number">1179</span>)*<span class="built_in">sqrt</span>(<span class="number">30</span>);</span><br><span class="line">people=[female male];</span><br><span class="line">figure(<span class="number">1</span>)</span><br><span class="line">hist(people,<span class="number">150</span>);%画出混合后的频率分布直方图</span><br><span class="line">N=<span class="number">100</span>;</span><br><span class="line">figure(<span class="number">2</span>)</span><br><span class="line">hist(female,N);%画出生成的女性的频率分布直方图</span><br><span class="line">h=findobj(gca,'Type','patch');</span><br><span class="line">set(h,'facecolor','r');hold on;%设置柱形图颜色</span><br><span class="line">hist(male,N);%画出生成的男性的频率分布直方图</span><br><span class="line">title('某校男女生身高的分布直方图');</span><br><span class="line">xlabel('身高/cm');ylabel('人数');hold off ;%坐标轴设置</span><br></pre></td></tr></table></figure><br>接下来我们就需要对数据进行不断地迭代，从而使其得到两类分布的最优解。</p>
<h2 id="2-1-Step-1-初始化参数"><a href="#2-1-Step-1-初始化参数" class="headerlink" title="2.1 Step 1. 初始化参数"></a>2.1 Step 1. 初始化参数</h2><p>对于首次迭代，我们需要提供一下，对于男女的均值方差以及权值之间的初始值设定，否则无法启动迭代。这里我们的初始值的设定，我们只需要我们生活中的常识对其进行一下赋初值即可。无需考虑太多。</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/2019112721474373.png"  width="70%" >
 </center>

<p>正如图上所画的，在以后的介绍中，$\mu$,$sigma$的颜色不同，代表了性别不同，此处我们以蓝色代表男生的，粉色代表女生的。<br>例如我们在这里的，我假设男女生人数一样多，于是我就对初值进行了如下赋值：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%前提是不知道男女生分布的均值和方差的。</span><br><span class="line">g_mu1=<span class="number">170</span>;g_sigma1=<span class="number">10</span>;g_w1=<span class="number">0.5</span>;%男生的</span><br><span class="line">g_mu2=<span class="number">160</span>;g_sigma2=<span class="number">5</span>;g_w2=<span class="number">0.5</span>;%女生的</span><br></pre></td></tr></table></figure></p>
<h2 id="2-2-计算每个身高-h-i-在男分布中的响应-R"><a href="#2-2-计算每个身高-h-i-在男分布中的响应-R" class="headerlink" title="2.2 计算每个身高$h_i$在男分布中的响应$R$"></a>2.2 计算每个身高$h_i$在男分布中的响应$R$</h2><p>通过下面的公式，我们要对我们的2000个混合后的身高数据，利用我们刚刚赋的初值来计算一下每个身高$h_i$在男分布中的响应$R$。所以此处也就一共有2000个响应值。</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191127215606275.png"  width="35%" >
 </center>

<p>在这里或许大家会疑惑，公式中的$g(h_i|\mu,\sigma)$代表的是啥，其实这是一维高斯函数的密度函数，对于我们的这个例子而言，其详细的表达式如下：</p>
<script type="math/tex; mode=display">
g(h_i|\mu,\sigma)=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(h_i-\mu)^2}{2\sigma^2}}</script><p>好了计算完身高男生的身高$h_i$在男分布中的响应$R$，我们再来计算一下女生的$h_i$在男分布中的响应$R$，其求解公式类比于前边介绍到的男生的求解：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191127221408820.png"  width="35%" >
 </center>
同样，也是得到2000个响应值。

## 2.3 更新男女生分布的期望值$\mu$
由于之前的男女生的期望值$\mu$都是我们凭着主观经验猜测的，所以我们需要对该值进行迭代更新，下面我先介绍男生身高期望值的更新公式。
<center>
 <img  src="https://img-blog.csdnimg.cn/20191127221808586.png"  width="35%" >
 </center>

<p>这里的$R_i$值和$h_i$值都是我们已知的数据，其中$R_i$是我们上一步所求，$h_i$是我们已知的混合后的2000个身高序列中的一个。<br>如果我们对于上式不是特别理解的话，我们可以将其一步不拆解开来，方便我们理解。详见下图：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191127222101183.png"  width="50%" >
 </center>

<p>通过上式的拆解展示，我们可以看到，新更新的均值是和之前的均值有关系的。<br>通过此方式更新完均值之后，我们便可同理求得女生身高的更新后的数据，具体其表达式如下所示：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191127222252363.png"  width="30%" >
 </center>

<p>最后我们求得的均值很明显是一个值。</p>
<h2 id="2-4-更新男女生分布的方差-sigma-2"><a href="#2-4-更新男女生分布的方差-sigma-2" class="headerlink" title="2.4 更新男女生分布的方差$\sigma^2$"></a>2.4 更新男女生分布的方差$\sigma^2$</h2><p>原因同上边一样，我们要通过如下公式更新一下男生分布的方差，其求解公式如下所示：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191128124844664.png"  width="35%" >
 </center>

<p>需要注意的是，我们在这里求得的是更新后的<strong>方差</strong>，而别的地方使用的是<strong>标准差</strong>，所以在这里编程的时候要注意一下。另外，女生的更新方式类似：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191128125003133.png"  width="35%" >
 </center>

<h2 id="2-5-更新权值-omega-1-omega-2"><a href="#2-5-更新权值-omega-1-omega-2" class="headerlink" title="2.5 更新权值$\omega_1,\omega_2$"></a>2.5 更新权值$\omega_1,\omega_2$</h2><p>男生分布的权值的更新如下：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191127222942756.png"  width="35%" >
 </center>

<p>类似的，女生分布的权值的更新如下：</p>
<center>
 <img  src="https://img-blog.csdnimg.cn/20191127222959165.png"  width="35%" >
 </center>

<h2 id="2-6-仿真效果"><a href="#2-6-仿真效果" class="headerlink" title="2.6 仿真效果"></a>2.6 仿真效果</h2><p>在迭代十次之后，我们就可以看到，其迭代结果已趋于稳定，效果显示如下：<br>  <img src="https://img-blog.csdnimg.cn/20191127235722796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">   | <img src="https://img-blog.csdnimg.cn/20191127235738532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="Value"><br>———— | ——-<br>在上图中我们可以看到，随着迭代次数的增加，我们的男女的权重系数也都趋于稳定，并且我们取最后一次迭代的结果，做出男女身高的高斯概率曲线。我们 可以拿该曲线迭代出的结果与之前的结果进行比较，可知其迭代精度还是可以的。</p>
<h2 id="2-7-高斯混合模型不同权值的比较"><a href="#2-7-高斯混合模型不同权值的比较" class="headerlink" title="2.7 高斯混合模型不同权值的比较"></a>2.7 高斯混合模型不同权值的比较</h2><p>对于不同的迭代结果，我以动图的形式来展示如下，在不同的权值下，其叠加后的高斯混合模型图样也是不一样的，如下所示：<br><img src="https://img-blog.csdnimg.cn/2019112800054120.gif#pic_center" alt="在这里插入图片描述"></p>
<h1 id="3-matlab源码"><a href="#3-matlab源码" class="headerlink" title="3.matlab源码"></a>3.matlab源码</h1><h2 id="3-1-迭代更新的函数封装（matlab）"><a href="#3-1-迭代更新的函数封装（matlab）" class="headerlink" title="3.1 迭代更新的函数封装（matlab）"></a>3.1 迭代更新的函数封装（matlab）</h2><p>由于要使用不断迭代的方式来不断求取新的均值方差权值，以期使得迭代的结果更加接近真实值，于是我对于这部分的代码进行了一下封装，将其封装为一个loop.m文件。其内容具体如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">文件名称：loop.m</span><br><span class="line">function [ mu1_new,sigma1_new,w1_new,mu2_new,sigma2_new,w2_new ] = loop(male,female,g_mu1,g_sigma1,g_w1,g_mu2,g_sigma2,g_w2 )</span><br><span class="line">%UNTITLED 此处显示有关此函数的摘要</span><br><span class="line">%   此处显示详细说明</span><br><span class="line">%Step <span class="number">1.</span>首先根据经验来分别设置男女生的均值、方差和权值</span><br><span class="line">% g_mu1=<span class="number">175</span>;g_sigma1=<span class="number">10</span>;g_w1=<span class="number">0.5</span>;%男生的</span><br><span class="line">% g_mu2=<span class="number">158</span>;g_sigma2=<span class="number">10</span>;g_w2=<span class="number">0.5</span>;%女生的</span><br><span class="line"></span><br><span class="line">%Step <span class="number">2.</span> </span><br><span class="line">%计算男的身高在男分布中的响应R1i</span><br><span class="line">%计算女的身高在男分布中的响应R2i</span><br><span class="line">people=[female male];</span><br><span class="line">R1=zeros(<span class="number">1</span>,<span class="number">2000</span>);</span><br><span class="line">R2=zeros(<span class="number">1</span>,<span class="number">2000</span>);</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">2000</span></span><br><span class="line">    px1=g_w1*pdf('norm',people(i),g_mu1,g_sigma1);</span><br><span class="line">    px2=g_w2*pdf('norm',people(i),g_mu2,g_sigma2);</span><br><span class="line">    R1(i)=px1/(px1+px2);</span><br><span class="line">    R2(i)=px2/(px1+px2);</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line"></span><br><span class="line">%Step <span class="number">3.</span></span><br><span class="line">%更新男、女生身高分布的期望mu</span><br><span class="line"></span><br><span class="line">sum1=<span class="number">0</span>;</span><br><span class="line">sum2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">2000</span></span><br><span class="line">    sum1=sum1+R1(i)*people(i);</span><br><span class="line">    sum2=sum2+R2(i)*people(i);</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">sum11=sum(R1);</span><br><span class="line">sum22=sum(R2);</span><br><span class="line">mu1_new=sum1/sum11;%得出男生的新均值</span><br><span class="line">mu2_new=sum2/sum22;%得出女生的新均值</span><br><span class="line"></span><br><span class="line">%Step <span class="number">4.</span></span><br><span class="line">%更新男、女生身高分布的标准差sigma</span><br><span class="line">sum1=<span class="number">0</span>;</span><br><span class="line">sum2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">2000</span></span><br><span class="line">    sum1=sum1+R1(i)*(people(i)-mu1_new)^<span class="number">2</span>;</span><br><span class="line">    sum2=sum2+R2(i)*(people(i)-mu2_new)^<span class="number">2</span>;</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">sigma1_new=(sum1/sum11)^<span class="number">0.5</span>;%得出男生的新标准差</span><br><span class="line">sigma2_new=(sum2/sum22)^<span class="number">0.5</span>;%得出女生的新标准差</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%Step <span class="number">5.</span></span><br><span class="line">%更新权值</span><br><span class="line">w1_new=sum11/<span class="number">2000</span>;</span><br><span class="line">w2_new=sum22/<span class="number">2000</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-2-主函数实现高斯混合模型GMM"><a href="#3-2-主函数实现高斯混合模型GMM" class="headerlink" title="3.2 主函数实现高斯混合模型GMM"></a>3.2 主函数实现高斯混合模型GMM</h2><p>该函数是实现整个这个实例的matlab代码主函数，其内容如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">文件名称：GMM.m</span><br><span class="line">%绘制男女生身高的例子</span><br><span class="line">clc</span><br><span class="line"><span class="built_in">clear</span> all</span><br><span class="line">%男女生各取<span class="number">2000</span>人，女生平均身高<span class="number">163</span>，男声平均身高<span class="number">180</span></span><br><span class="line">female=<span class="number">160</span>+randn(<span class="number">1</span>,<span class="number">821</span>)*<span class="built_in">sqrt</span>(<span class="number">16</span>);</span><br><span class="line">male=<span class="number">180</span>+randn(<span class="number">1</span>,<span class="number">1179</span>)*<span class="built_in">sqrt</span>(<span class="number">30</span>);</span><br><span class="line">people=[female male];</span><br><span class="line">figure(<span class="number">1</span>)</span><br><span class="line">hist(people,<span class="number">150</span>);%画出混合后的频率分布直方图</span><br><span class="line">N=<span class="number">100</span>;</span><br><span class="line">figure(<span class="number">2</span>)</span><br><span class="line">hist(female,N);%画出生成的女性的频率分布直方图</span><br><span class="line">h=findobj(gca,'Type','patch');</span><br><span class="line">set(h,'facecolor','r');hold on;%设置柱形图颜色</span><br><span class="line">hist(male,N);%画出生成的男性的频率分布直方图</span><br><span class="line">title('某校男女生身高的分布直方图');</span><br><span class="line">xlabel('身高/cm');ylabel('人数');hold off ;%坐标轴设置</span><br><span class="line"></span><br><span class="line">%以下通过五个步骤开始构建高斯混合模型</span><br><span class="line"></span><br><span class="line">%Step <span class="number">1.</span>首先根据经验来分别设置男女生的均值、方差和权值</span><br><span class="line">%前提是不知道男女生分布的均值和方差的。</span><br><span class="line">g_mu1=<span class="number">170</span>;g_sigma1=<span class="number">10</span>;g_w1=<span class="number">0.5</span>;%男生的</span><br><span class="line">g_mu2=<span class="number">160</span>;g_sigma2=<span class="number">5</span>;g_w2=<span class="number">0.5</span>;%女生的</span><br><span class="line"></span><br><span class="line">times=<span class="number">10</span>;%设置迭代次数</span><br><span class="line">result=zeros(times,<span class="number">6</span>);%定义一个数组来存储每次的迭代结果</span><br><span class="line">result(<span class="number">1</span>,<span class="number">1</span>)=g_mu1;result(<span class="number">1</span>,<span class="number">2</span>)=g_sigma1;%以下</span><br><span class="line">result(<span class="number">1</span>,<span class="number">3</span>)=g_w1;result(<span class="number">1</span>,<span class="number">4</span>)=g_mu2;</span><br><span class="line">result(<span class="number">1</span>,<span class="number">5</span>)=g_sigma2;result(<span class="number">1</span>,<span class="number">6</span>)=g_w2;%以上将result的第一行设置为初始值</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:times<span class="number">-1</span></span><br><span class="line">    %调用自己的迭代函数loop来实现迭代计算</span><br><span class="line">   [ mu11_new,sigma11_new,w11_new,mu22_new,sigma22_new,w22_new ]=loop(male,female,result(i,<span class="number">1</span>),result(i,<span class="number">2</span>),result(i,<span class="number">3</span>),result(i,<span class="number">4</span>),result(i,<span class="number">5</span>),result(i,<span class="number">6</span>));</span><br><span class="line">    result(i+<span class="number">1</span>,<span class="number">1</span>)=mu11_new;result(i+<span class="number">1</span>,<span class="number">2</span>)=sigma11_new;result(i+<span class="number">1</span>,<span class="number">3</span>)=w11_new;%将每次迭代的结果存入result</span><br><span class="line">    result(i+<span class="number">1</span>,<span class="number">4</span>)=mu22_new;result(i+<span class="number">1</span>,<span class="number">5</span>)=sigma22_new;result(i+<span class="number">1</span>,<span class="number">6</span>)=w22_new ;%当前迭代完成</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">result    % 输出每次迭代结果</span><br><span class="line">figure(<span class="number">3</span>)</span><br><span class="line">%plot(result(:,3),'linewidth',1.5);%画出男生的权重迭代历史</span><br><span class="line">xi=<span class="number">1</span>:<span class="number">0.4</span>:times;</span><br><span class="line">xx=interp1(result(:,3),xi, 'spline');</span><br><span class="line">plot(xx,'linewidth',1.5);%画出男生的权重迭代历史</span><br><span class="line">hold on ;grid on;</span><br><span class="line">yy=interp1(result(:,6),xi, 'spline');</span><br><span class="line">plot(yy,'r','linewidth',1.5);%画出女生权重迭代历史</span><br><span class="line">legend('男生权重变化','女生权重变化','location','northeast');%坐标轴设置</span><br><span class="line">title('男女生权重随迭代次数的变化');</span><br><span class="line">xlabel('迭代次数');ylabel('权重值');axis([1 times 0 1]);%坐标轴设置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%开始分别求取出男女生的概率密度函数</span><br><span class="line">%在刚刚的迭代结果中取出男女生的分别的mu和sigma</span><br><span class="line">%男生而言需要求出mu1,sigma1,w1</span><br><span class="line">%女生而言需要求取mu2,sigma2,w2</span><br><span class="line">mu1=result(times,<span class="number">1</span>);</span><br><span class="line">sigma1=result(times,<span class="number">2</span>);</span><br><span class="line">mu2=result(times,<span class="number">4</span>);</span><br><span class="line">sigma2=result(times,<span class="number">5</span>);</span><br><span class="line">figure(<span class="number">4</span>);</span><br><span class="line">%画出男生的概率密度曲线</span><br><span class="line">inter_x=linspace(<span class="number">140</span>,<span class="number">210</span>,<span class="number">500</span>)<span class="string">';</span></span><br><span class="line">inter_y=normpdf(inter_x,mu1,sigma1);</span><br><span class="line">plot(inter_x,inter_y,'linewidth',1.5);</span><br><span class="line">hold on;</span><br><span class="line">%画出女生的概率密度曲线</span><br><span class="line">inter_yy=normpdf(inter_x,mu2,sigma2);</span><br><span class="line">plot(inter_x,inter_yy,'m','linewidth',1.5)</span><br><span class="line">grid on;</span><br><span class="line">legend('男生','女生');title('男女生身高的概率密度曲线');</span><br><span class="line">xlabel('身高/cm');ylabel('概率');hold off;%坐标轴设置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%%此部分开始画高斯混合模型的图像</span><br><span class="line">x =<span class="number">140</span>:<span class="number">0.1</span>:<span class="number">210</span> ;</span><br><span class="line">y1 = normpdf(x,mu1,sigma1);%定义第<span class="number">1</span>个高斯密度曲线</span><br><span class="line">y2 = normpdf(x,mu2,sigma2);%定义第<span class="number">2</span>个高斯密度曲线</span><br><span class="line">figure(<span class="number">5</span>)</span><br><span class="line">plot(x,y1,'--b','linewidth',1.5);%画出第1个高斯概率密度曲线的图像</span><br><span class="line">hold on;</span><br><span class="line">plot(x,y2,'--g','linewidth',1.5);%画出第2个高斯概率密度曲线的图像</span><br><span class="line">title('两个一维高斯分布HMM模型');xlabel('X');ylabel('概率密度');</span><br><span class="line">% axis([<span class="number">-8</span> <span class="number">10</span> <span class="number">0</span> <span class="number">0.5</span>]);</span><br><span class="line">grid on;%坐标轴设置</span><br><span class="line">tex=text(180,0.1,'当前W1数值为：','FontSize',14,'FontWeight','demi');%图中显示权重</span><br><span class="line">rate=result(:,<span class="number">3</span>)%定义一个权重</span><br><span class="line">c=colormap(lines(times));%定义times条不同颜色的线条</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:times</span><br><span class="line">   pause(<span class="number">0.1</span>);%延时函数</span><br><span class="line">   y3=rate(i)*y1+(<span class="number">1</span>-rate(i))*y2%对两个高斯概率密度图像进行加权</span><br><span class="line">   p2=plot(x,y3,'color',c(i,:),'linewidth',1.5);%绘画加权后的图像</span><br><span class="line">   num=num2str(rate(i));%将当前第一个高斯概率所用的权重值转为字符串类型</span><br><span class="line">   tex1=text(203,0.1,num,'FontSize',14,'FontWeight','demi','color','r');%显示当前权重值</span><br><span class="line">   pause(<span class="number">0.3</span>);%延时函数</span><br><span class="line">   <span class="keyword">if</span>(i&lt;times)</span><br><span class="line">       <span class="keyword">delete</span>(tex1);%删除当前权重</span><br><span class="line">       <span class="keyword">delete</span>(p2);  %删除当前加权后图像</span><br><span class="line">   <span class="built_in">end</span></span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">hold off</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>语音识别</category>
      </categories>
  </entry>
  <entry>
    <title>Python3.X版本Turtle库安装失败原因及解决办法</title>
    <url>/2019/11/25/python3.X%E7%89%88%E6%9C%ACTurtle%E5%BA%93%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>在我的上一个教师节对于老师祝福的一个博客中提及到了python库turtle的使用，由于当时时间不太够用，就没有说明turtle库的安装方法。<br>如果你使用的python版本为3.X那么你在命令行窗口输入==pip install turtle==的时候多半会出现如下错误：</p>
<p><img src="https://img-blog.csdnimg.cn/20190912220329122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>原因很简单，是因为这个库是基于python 2.X的一个库，在3.X的版本中，因为一些语法不一样，而导致的与python 3.X版本不兼容.<br>我们通过对上边错误信息的查看，发现在turtle安装包里的 <strong>setup.py</strong> 文件出错，也就是以下错误：<br><img src="https://img-blog.csdnimg.cn/20190912220534956.png#pic_center" alt="在这里插入图片描述"><br>于是我们就想着能不能在在网上把turtle的安装文件下载下来，尝试改正一下<strong>setup.py</strong>文件的第40行。<br>说干就干，我们找到turtle的官方下载网址：<a href="https://pypi.org/project/turtle/0.0.2/#files" target="_blank" rel="noopener">https://pypi.org/project/turtle/0.0.2/#files</a><br>下载之后，找到对应的setup.py文件，并且使用IDE软件打开，我们可以看到如下所示在40行报错。<br><img src="https://img-blog.csdnimg.cn/20190912220852729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>如果以前编辑过3.X的python程序的话，就会发现其实那里只是少了一个括号，于是我们尝试改正，添加之后，果然不再报错：<br><img src="https://img-blog.csdnimg.cn/20190912221255436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后再在电脑上对这个文件进行本地安装，其操作如下演示。<br><img src="https://img-blog.csdnimg.cn/20190912221520248.gif#pic_center" alt="在这里插入图片描述"><br>到了这里我们就可以愉快的进行如下操作了。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python调用turtle包来祝老师教师节快乐</title>
    <url>/2019/11/25/%E8%AE%BA%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%A5%9D%E7%A6%8F%E8%80%81%E5%B8%88%E6%95%99%E5%B8%88%E8%8A%82%E5%BF%AB%E4%B9%90/</url>
    <content><![CDATA[<p>作为一个技术小白，在教师节之际，既想表明信息学人的身份，又要表达对于 老师的祝福，我感觉，以下技能应该是每个搞IT得人都应该具备得一项技能。</p>
<h1 id="1-祝福新技能"><a href="#1-祝福新技能" class="headerlink" title="1.祝福新技能"></a>1.祝福新技能</h1><p>新技能get1:使用turtle使用计算机绘画出字体“教师节快乐”，其效果图如下所示;<br><img src="https://img-blog.csdnimg.cn/20190910220328348.gif" alt="在这里插入图片描述"><br>新技能get2:使用tkinter创建不同的弹窗，显示“教师节快乐“，其效果图如下：<br><img src="https://img-blog.csdnimg.cn/20190910222024879.gif" alt="在这里插入图片描述"></p>
<h1 id="2-新技能，请接住"><a href="#2-新技能，请接住" class="headerlink" title="2.新技能，请接住"></a>2.新技能，请接住</h1><h2 id="第一式：神龙摆尾"><a href="#第一式：神龙摆尾" class="headerlink" title="第一式：神龙摆尾"></a>第一式：神龙摆尾</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># @Time : 2019/9/10 11:11 </span><br><span class="line"># @Author : kingback</span><br><span class="line"># @File : teachers_day_happy.py </span><br><span class="line"># @Software: PyCharm</span><br><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">x = <span class="number">-350</span></span><br><span class="line">y = <span class="number">50</span></span><br><span class="line"></span><br><span class="line">t1 = (x, y)</span><br><span class="line">t2 = (x + <span class="number">12</span>, y - <span class="number">12</span>)</span><br><span class="line">penSize = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">t.screensize(<span class="number">400</span>, <span class="number">400</span>, <span class="string">"#fff"</span>)</span><br><span class="line">t.pensize(penSize)</span><br><span class="line">t.pencolor(<span class="string">"#ff0000"</span>)</span><br><span class="line">t.speed(<span class="number">8</span>)</span><br><span class="line">t.hideturtle()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 教</span><br><span class="line">def jiao():</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 横 -</span><br><span class="line">    x1 = x - <span class="number">18</span></span><br><span class="line">    y1 = y - <span class="number">22</span></span><br><span class="line">    t3 = (x1, y1)</span><br><span class="line">    t4 = (x1 + <span class="number">60</span>, y1)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t3)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t4)</span><br><span class="line"></span><br><span class="line">    # 竖 |</span><br><span class="line">    x2 = x + <span class="number">12</span></span><br><span class="line">    y2 = y</span><br><span class="line">    t5 = (x2, y2)</span><br><span class="line">    t6 = (x2, y2 - <span class="number">40</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t5)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t6)</span><br><span class="line"></span><br><span class="line">    # 长横-</span><br><span class="line">    x3 = x1 - <span class="number">20</span></span><br><span class="line">    y3 = y2 - <span class="number">40</span></span><br><span class="line">    t7 = (x3, y3)</span><br><span class="line">    t8 = (x3 + <span class="number">90</span>, y3)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t7)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t8)</span><br><span class="line"></span><br><span class="line">    # 撇</span><br><span class="line">    x4 = x + <span class="number">60</span></span><br><span class="line">    y4 = y - <span class="number">10</span></span><br><span class="line">    t9 = (x4, y4)</span><br><span class="line">    t10 = (x4 - <span class="number">80</span>, y4 - <span class="number">70</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t9)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t10)</span><br><span class="line"></span><br><span class="line">    # 横 -</span><br><span class="line">    x5 = x4 - <span class="number">55</span></span><br><span class="line">    y5 = y4 - <span class="number">50</span></span><br><span class="line">    t11 = (x5, y5)</span><br><span class="line">    t12 = (x5 + <span class="number">30</span>, y5)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t11)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t12)</span><br><span class="line"></span><br><span class="line">    # 左拐</span><br><span class="line">    x6 = x5+<span class="number">30</span></span><br><span class="line">    y6 = y5</span><br><span class="line">    t13 = (x6, y6)</span><br><span class="line">    t14 = (x6<span class="number">-20</span>, y6<span class="number">-20</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t13)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t14)</span><br><span class="line"></span><br><span class="line">    # 右拐</span><br><span class="line">    x7 = x6<span class="number">-20</span></span><br><span class="line">    y7 = y6<span class="number">-20</span></span><br><span class="line">    t15 = (x7, y7)</span><br><span class="line">    t16 = (x7+<span class="number">10</span>, y7 - <span class="number">10</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t15)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t16)</span><br><span class="line"></span><br><span class="line">    # 左拐</span><br><span class="line">    x8 = x7+<span class="number">10</span></span><br><span class="line">    y8 = y7<span class="number">-10</span></span><br><span class="line">    t15 = (x8, y8)</span><br><span class="line">    t16 = (x8 <span class="number">-20</span>, y8 - <span class="number">20</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t15)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t16)</span><br><span class="line"></span><br><span class="line">    # 上钩</span><br><span class="line">    x9 = x8 - <span class="number">20</span></span><br><span class="line">    y9 = y8 - <span class="number">20</span></span><br><span class="line">    t17 = (x9, y9)</span><br><span class="line">    t18 = (x9<span class="number">-5</span>,y9+<span class="number">5</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t17)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t18)</span><br><span class="line"></span><br><span class="line">    # 横</span><br><span class="line">    x10 = x6 - <span class="number">35</span></span><br><span class="line">    y10 = y6 - <span class="number">20</span></span><br><span class="line">    t19 = (x10, y10)</span><br><span class="line">    t20 = (x10 +<span class="number">40</span>, y10)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t19)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t20)</span><br><span class="line"></span><br><span class="line">    #小恒</span><br><span class="line">    x11 = x3 +<span class="number">110</span></span><br><span class="line">    y11 = y3</span><br><span class="line">    t21 = (x11, y11)</span><br><span class="line">    t22 = (x11 + <span class="number">50</span>, y11)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t21)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t22)</span><br><span class="line"></span><br><span class="line">    #上撇</span><br><span class="line">    x12 = x11 + <span class="number">20</span></span><br><span class="line">    y12 = y3+<span class="number">20</span></span><br><span class="line">    t23 = (x12, y12)</span><br><span class="line">    t24 = (x12 <span class="number">-30</span>, y12<span class="number">-30</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t23)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t24)</span><br><span class="line"></span><br><span class="line">    # 下撇</span><br><span class="line">    x13 = x11 + <span class="number">40</span></span><br><span class="line">    y13 = y3</span><br><span class="line">    t25 = (x13, y13)</span><br><span class="line">    t26 = (x13 - <span class="number">60</span>, y13 - <span class="number">70</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t25)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t26)</span><br><span class="line"></span><br><span class="line">    # 下纳</span><br><span class="line">    x14 = x11<span class="number">-10</span></span><br><span class="line">    y14 = y3<span class="number">-20</span></span><br><span class="line">    t27 = (x14, y14)</span><br><span class="line">    t28 = (x14+<span class="number">60</span>, y14 - <span class="number">50</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t27)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t28)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 师</span><br><span class="line">def shi():</span><br><span class="line">    #竖</span><br><span class="line">    x1 = x + <span class="number">160</span></span><br><span class="line">    y1 = y<span class="number">-30</span></span><br><span class="line">    t1 = (x1, y1)</span><br><span class="line">    t2 = (x1, y1 - <span class="number">30</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t1)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t2)</span><br><span class="line"></span><br><span class="line">    # 长竖</span><br><span class="line">    x2 = x1 + <span class="number">20</span></span><br><span class="line">    y2 = y1 + <span class="number">30</span></span><br><span class="line">    t3 = (x2, y2)</span><br><span class="line">    t4 = (x2, y2 - <span class="number">100</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t3)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t4)</span><br><span class="line"></span><br><span class="line">    # 左拐</span><br><span class="line">    x3 = x2</span><br><span class="line">    y3 = y2<span class="number">-100</span></span><br><span class="line">    t5 = (x3, y3)</span><br><span class="line">    t6 = (x3<span class="number">-6</span>, y3 - <span class="number">10</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t5)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t6)</span><br><span class="line"></span><br><span class="line">    # 小恒</span><br><span class="line">    x4 = x2+<span class="number">25</span></span><br><span class="line">    y4 = y2 - <span class="number">15</span></span><br><span class="line">    t7 = (x4, y4)</span><br><span class="line">    t8 = (x4+<span class="number">40</span>, y4)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t7)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t8)</span><br><span class="line"></span><br><span class="line">    # 小竖</span><br><span class="line">    x5 = x4</span><br><span class="line">    y5 = y4 - <span class="number">25</span></span><br><span class="line">    t9 = (x5, y5)</span><br><span class="line">    t10 = (x5, y5<span class="number">-40</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t9)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t10)</span><br><span class="line"></span><br><span class="line">    # 小横</span><br><span class="line">    x6 = x5</span><br><span class="line">    y6 = y5</span><br><span class="line">    t11 = (x6, y6)</span><br><span class="line">    t12 = (x6+<span class="number">50</span>, y6)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t11)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t12)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 小竖</span><br><span class="line">    x7 = x5+<span class="number">50</span></span><br><span class="line">    y7 = y5</span><br><span class="line">    t13 = (x7, y7)</span><br><span class="line">    t14 = (x7, y7 - <span class="number">40</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t13)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t14)</span><br><span class="line"></span><br><span class="line">    # 竖钩</span><br><span class="line">    x8 = x7</span><br><span class="line">    y8 = y7 - <span class="number">45</span></span><br><span class="line">    t15 = (x8, y8)</span><br><span class="line">    t16 = (x8<span class="number">-6</span>, y8 +<span class="number">8</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t15)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t16)</span><br><span class="line"></span><br><span class="line">    # 大竖</span><br><span class="line">    x9 = x6+<span class="number">20</span></span><br><span class="line">    y9 = y6+<span class="number">20</span></span><br><span class="line">    t17 = (x9, y9)</span><br><span class="line">    t18 = (x9, y9<span class="number">-100</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t17)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t18)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 节</span><br><span class="line">def jie():</span><br><span class="line"></span><br><span class="line">    # 横</span><br><span class="line">    x1 = x + <span class="number">280</span></span><br><span class="line">    y1 = y+<span class="number">20</span></span><br><span class="line">    t1 = (x1, y1)</span><br><span class="line">    t2 = (x1+<span class="number">70</span>, y1)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t1)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t2)</span><br><span class="line"></span><br><span class="line">    # 竖</span><br><span class="line">    x2 = x1 + <span class="number">25</span></span><br><span class="line">    y2 = y1 + <span class="number">20</span></span><br><span class="line">    t3 = (x2, y2)</span><br><span class="line">    t4 = (x2, y2<span class="number">-40</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t3)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t4)</span><br><span class="line"></span><br><span class="line">    # →竖</span><br><span class="line">    x3 = x2 + <span class="number">25</span></span><br><span class="line">    y3 = y2</span><br><span class="line">    t5 = (x3, y3)</span><br><span class="line">    t6 = (x3, y3- <span class="number">40</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t5)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t6)</span><br><span class="line"></span><br><span class="line">    # 横</span><br><span class="line">    x4 = x2 <span class="number">-25</span></span><br><span class="line">    y4 = y2<span class="number">-60</span></span><br><span class="line">    t7 = (x4, y4)</span><br><span class="line">    t8 = (x4+<span class="number">75</span>, y4)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t7)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t8)</span><br><span class="line"></span><br><span class="line">    # 竖</span><br><span class="line">    x5 = x4 +<span class="number">75</span></span><br><span class="line">    y5 = y4</span><br><span class="line">    t9 = (x5, y5)</span><br><span class="line">    t10 = (x5, y5<span class="number">-50</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t9)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t10)</span><br><span class="line"></span><br><span class="line">    # 竖钩</span><br><span class="line">    x6 = x5</span><br><span class="line">    y6 = y5<span class="number">-50</span></span><br><span class="line">    t11 = (x6, y6)</span><br><span class="line">    t12 = (x6<span class="number">-9</span>, y6+<span class="number">7</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t11)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t12)</span><br><span class="line"></span><br><span class="line">    # 大竖</span><br><span class="line">    x7 = x4 + <span class="number">32</span></span><br><span class="line">    y7 = y4</span><br><span class="line">    t13 = (x7, y7)</span><br><span class="line">    t14 = (x7, y7 - <span class="number">80</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t13)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t14)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 快</span><br><span class="line">def kuai():</span><br><span class="line">    # 点</span><br><span class="line">    x1 =x+<span class="number">400</span></span><br><span class="line">    y1 =y<span class="number">-65</span></span><br><span class="line">    t1 = (x1, y1)</span><br><span class="line">    t2 = (x1 - <span class="number">6</span>, y1 - <span class="number">25</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t1)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t2)</span><br><span class="line"></span><br><span class="line">    # 竖</span><br><span class="line">    x2 = x1 + <span class="number">10</span></span><br><span class="line">    y2 = y - <span class="number">15</span></span><br><span class="line">    t3 = (x2, y2)</span><br><span class="line">    t4 = (x2, y2 - <span class="number">130</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t3)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t4)</span><br><span class="line"></span><br><span class="line">    # 点</span><br><span class="line">    x3 = x2 + <span class="number">10</span></span><br><span class="line">    y3 = y1 - <span class="number">8</span></span><br><span class="line">    t5 = (x3, y3)</span><br><span class="line">    t6 = (x3 + <span class="number">6</span>, y3 - <span class="number">10</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t5)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t6)</span><br><span class="line"></span><br><span class="line">    # 横</span><br><span class="line">    x4 = x3 + <span class="number">25</span></span><br><span class="line">    y4 = y - <span class="number">60</span></span><br><span class="line">    t7 = (x4, y4)</span><br><span class="line">    t8 = (x4 + <span class="number">60</span>, y4)</span><br><span class="line">    t9 = (x4 + <span class="number">60</span>, y4 - <span class="number">28</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t7)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t8)</span><br><span class="line">    t.goto(t9)</span><br><span class="line"></span><br><span class="line">    # 长横</span><br><span class="line">    x5 = x4 - <span class="number">10</span></span><br><span class="line">    y5 = y4 - <span class="number">28</span></span><br><span class="line">    t10 = (x5, y5)</span><br><span class="line">    t11 = (x5 + <span class="number">90</span>, y5)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t10)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t11)</span><br><span class="line"></span><br><span class="line">    # 撇</span><br><span class="line">    x6 = x4 + <span class="number">30</span></span><br><span class="line">    y6 = y2 - <span class="number">5</span></span><br><span class="line">    t12 = (x6, y6)</span><br><span class="line">    t13 = (x6 - <span class="number">18</span>, y6 - <span class="number">125</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t12)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t13)</span><br><span class="line"></span><br><span class="line">    # 捺</span><br><span class="line">    x7 = x6 + <span class="number">8</span></span><br><span class="line">    y7 = y5 - <span class="number">20</span></span><br><span class="line">    t14 = (x7, y7)</span><br><span class="line">    t15 = (x7 + <span class="number">12</span>, y7 - <span class="number">38</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t14)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t15)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 乐</span><br><span class="line">def le():</span><br><span class="line">    # 撇</span><br><span class="line">    x1 = x + <span class="number">600</span></span><br><span class="line">    y1 = y - <span class="number">20</span></span><br><span class="line">    t1 = (x1, y1)</span><br><span class="line">    t2 = (x1 - <span class="number">65</span>, y1 - <span class="number">20</span>)</span><br><span class="line">    t3 = (x1 - <span class="number">68</span>, y1 - <span class="number">60</span>)</span><br><span class="line">    t4 = (x1 + <span class="number">10</span>, y1 - <span class="number">60</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t1)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t2)</span><br><span class="line">    t.goto(t3)</span><br><span class="line">    t.goto(t4)</span><br><span class="line"></span><br><span class="line">    # 竖</span><br><span class="line">    x2 = x1 - <span class="number">30</span></span><br><span class="line">    y2 = y1 - <span class="number">35</span></span><br><span class="line">    t5 = (x2, y2)</span><br><span class="line">    t6 = (x2, y2 - <span class="number">92</span>)</span><br><span class="line">    t7 = (x2 - <span class="number">12</span>, y2 - <span class="number">85</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t5)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t6)</span><br><span class="line">    t.goto(t7)</span><br><span class="line"></span><br><span class="line">    # 点、、</span><br><span class="line">    x3 = x2 - <span class="number">20</span></span><br><span class="line">    y3 = y2 - <span class="number">50</span></span><br><span class="line">    t8 = (x3, y3)</span><br><span class="line">    t9 = (x3 - <span class="number">8</span>, y3 - <span class="number">20</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t8)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t9)</span><br><span class="line">    t10 = (x3 + <span class="number">40</span>, y3 - <span class="number">5</span>)</span><br><span class="line">    t11 = (x3 + <span class="number">46</span>, y3 - <span class="number">16</span>)</span><br><span class="line">    t.up()</span><br><span class="line">    t.goto(t10)</span><br><span class="line">    t.down()</span><br><span class="line">    t.goto(t11)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 开始调用函数进行绘画</span><br><span class="line"></span><br><span class="line">jiao()</span><br><span class="line">shi()</span><br><span class="line">jie()</span><br><span class="line">kuai()</span><br><span class="line">le()</span><br><span class="line"></span><br><span class="line">t.end_fill()  # 结束填充，显示填充效果</span><br><span class="line"></span><br><span class="line">t.done()</span><br></pre></td></tr></table></figure>
<h2 id="第二式：乾坤大挪移"><a href="#第二式：乾坤大挪移" class="headerlink" title="第二式：乾坤大挪移"></a>第二式：乾坤大挪移</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># @Time : 2019/9/10 22:10 </span><br><span class="line"># @Author : kingback</span><br><span class="line"># @File : teachers_day2.py </span><br><span class="line"># @Software: PyCharm</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def dow():</span><br><span class="line">    <span class="built_in">window</span> = tk.Tk()</span><br><span class="line">    width = <span class="built_in">window</span>.winfo_screenwidth()</span><br><span class="line">    height = <span class="built_in">window</span>.winfo_screenheight()</span><br><span class="line">    a = random.randrange(<span class="number">0</span>, width)</span><br><span class="line">    b = random.randrange(<span class="number">0</span>, height)</span><br><span class="line">    <span class="built_in">window</span>.title(<span class="string">'教师节快乐'</span>)</span><br><span class="line">    <span class="built_in">window</span>.geometry(<span class="string">"200x50"</span> + <span class="string">"+"</span> + str(a) + <span class="string">"+"</span> + str(b))</span><br><span class="line">    tk.Label(<span class="built_in">window</span>,</span><br><span class="line">             text='教师节快乐！',  # 标签的文字</span><br><span class="line">             bg='Red',  # 背景颜色</span><br><span class="line">             font=('楷体', 17),  # 字体和字体大小</span><br><span class="line">             width=15, height=2  # 标签长宽</span><br><span class="line">             ).pack()  # 固定窗口位置</span><br><span class="line">    <span class="built_in">window</span>.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">threads = []</span><br><span class="line">for i in range(100):  # 需要的弹框数量</span><br><span class="line">    t = threading.Thread(target=dow)</span><br><span class="line">    threads.append(t)</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    threads[i].start()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Java统计中英文的字数和信息熵</title>
    <url>/2019/11/25/%E4%B8%AD%E8%8B%B1%E6%96%87%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E4%BB%A5%E5%8F%8A%E4%BF%A1%E6%81%AF%E7%86%B5%E7%9A%84%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<h1 id="一、实验要求"><a href="#一、实验要求" class="headerlink" title="一、实验要求"></a>一、实验要求</h1><ol>
<li>使用Java对任意一部中英文小说进行字符统计，中文小说统计各个中文字符使用的频率，并且计算出中文小说西游记中共使用了多少个汉字。 </li>
<li>英文小说统计26个英文字母的使用频率。</li>
<li>计算中文小说西游记的各个汉字的信息熵。</li>
<li>计算英文小说26个英文字母各自的信息熵。<h1 id="二、功能实现"><a href="#二、功能实现" class="headerlink" title="二、功能实现"></a>二、功能实现</h1><h2 id="2-1实验环境"><a href="#2-1实验环境" class="headerlink" title="2.1实验环境"></a>2.1实验环境</h2></li>
<li>java 1.8.0._171</li>
<li>idea 2017.2<h2 id="2-2统计中文小说的使用频率"><a href="#2-2统计中文小说的使用频率" class="headerlink" title="2.2统计中文小说的使用频率"></a>2.2统计中文小说的使用频率</h2><h3 id="2-2-1代码部分"><a href="#2-2-1代码部分" class="headerlink" title="2.2.1代码部分"></a>2.2.1代码部分</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">package main.java.demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> * User: kingback</span></span><br><span class="line"><span class="comment"> * Author:king@王延凯</span></span><br><span class="line"><span class="comment"> * Date: 2019/7/5</span></span><br><span class="line"><span class="comment"> * Time: 23:28</span></span><br><span class="line"><span class="comment"> * Description: No Description</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;<span class="comment">//导入java.io包中的所有类</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;<span class="comment">//导入java.util包中的所有类</span></span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Journey_to_West</span> </span>&#123;</span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;<span class="comment">//try代码块，当发生异常时会转到catch代码块中</span></span><br><span class="line">            <span class="comment">//所要查询的中文txt文件路径</span></span><br><span class="line">            <span class="built_in">String</span> input=<span class="string">"C:\\Users\\kingback\\Desktop\\龙华老师资料\\上交资料\\第九次上交材料\\西游记\\西游记中文版.txt"</span>;</span><br><span class="line">            <span class="comment">//创建类进行文件的读取，并指定编码格式为utf-8</span></span><br><span class="line">            InputStreamReader read = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(input),<span class="string">"GBK"</span>);</span><br><span class="line">            BufferedReader <span class="keyword">in</span> = <span class="keyword">new</span> BufferedReader(read);<span class="comment">//可用于读取指定文件</span></span><br><span class="line">            StringBuffer b = <span class="keyword">new</span> StringBuffer();<span class="comment">//定义一个字符串变量b，便于后续进行内容追加的操作</span></span><br><span class="line">            <span class="built_in">String</span> str = <span class="literal">null</span>;<span class="comment">//定义一个字符串类型变量str</span></span><br><span class="line">            int i = <span class="number">0</span>;<span class="comment">//定义一个整型变量，用于统计字符串的出现次数</span></span><br><span class="line">            <span class="keyword">while</span>((str = <span class="keyword">in</span>.readLine()) != <span class="literal">null</span>) &#123;<span class="comment">//readLine()方法, 用于读取一行,只要读取内容不为空就一直执行</span></span><br><span class="line">                b.append(str);<span class="comment">//将该行内容追加到字符串b的后面</span></span><br><span class="line">            &#125;</span><br><span class="line">            TreeMap&lt;Character,Integer&gt;tm =Pross(b.toString());<span class="comment">//调用TreeMap函数</span></span><br><span class="line">            List&lt;<span class="built_in">Map</span>.Entry&lt;Character,Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;<span class="built_in">Map</span>.Entry&lt;Character,Integer&gt;&gt;(tm.entrySet());<span class="comment">//将map转换为list便于进行排序</span></span><br><span class="line">            <span class="comment">/* 写入Txt文件 */</span></span><br><span class="line">            <span class="comment">//所要存储结果的文件路径</span></span><br><span class="line">            File writename = <span class="keyword">new</span> File(<span class="string">"C:\\Users\\kingback\\Desktop\\龙华老师资料\\上交资料\\第九次上交材料\\西游记\\result.txt"</span>); <span class="comment">// 相对路径，如果没有则要建立一个新的output。txt文件</span></span><br><span class="line">            writename.createNewFile(); <span class="comment">// 创建新文件</span></span><br><span class="line">            BufferedWriter out = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(writename));</span><br><span class="line"></span><br><span class="line">            <span class="built_in">String</span> hh=tm.toString();</span><br><span class="line">            <span class="built_in">String</span>[] sourceStrArray = hh.split(<span class="string">"\\,|\\&#123;|\\&#125;"</span>);<span class="comment">//分割出来的字符数组,多字符分割</span></span><br><span class="line">            <span class="keyword">for</span> (int ii = <span class="number">0</span>; ii &lt; sourceStrArray.length; ii++) &#123;</span><br><span class="line">                System.out.println(sourceStrArray[ii]);<span class="comment">//屏幕输出，查看结果</span></span><br><span class="line">                out.write(sourceStrArray[ii]+<span class="string">"\n"</span>);<span class="comment">//写入txt文件</span></span><br><span class="line">                out.flush(); <span class="comment">// 把缓存区内容压入文件</span></span><br><span class="line">            &#125;</span><br><span class="line">            out.close(); <span class="comment">// 最后记得关闭文件</span></span><br><span class="line">            Iterator&lt;Integer&gt;it = tm.values().iterator();<span class="comment">//获取tm中value值并迭代</span></span><br><span class="line">            <span class="keyword">while</span>(it.hasNext()) &#123;<span class="comment">//检查序列中是否含有元素，若有则为true</span></span><br><span class="line">                Integer j=(Integer)it.next();<span class="comment">//定义变量获取元素</span></span><br><span class="line">                i+=j;<span class="comment">//迭代求总字符数</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">in</span>.close();<span class="comment">//关闭流</span></span><br><span class="line">            System.out.println(<span class="string">"总汉字数为"</span>+i);<span class="comment">//输出总的汉字数</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;<span class="comment">//当try代码块有异常时转到catch代码块</span></span><br><span class="line">            e.printStackTrace();<span class="comment">//printStackTrace()方法是打印异常信息在程序中出错的位置及原因</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">static</span> TreeMap&lt;Character,Integer&gt;Pross(<span class="built_in">String</span> str) &#123;<span class="comment">//构造TreeMap统计方法</span></span><br><span class="line">        <span class="built_in">String</span> d = <span class="literal">null</span>;<span class="comment">//定义一个字符串类型变量</span></span><br><span class="line">        char[] charArray = str.toCharArray();<span class="comment">//将字符串转换为字符数组</span></span><br><span class="line">        TreeMap&lt;Character,Integer&gt; tm = <span class="keyword">new</span> TreeMap&lt;Character,Integer&gt;();<span class="comment">//定义一个TreeMap集合</span></span><br><span class="line">        <span class="keyword">for</span>(int x = <span class="number">0</span>;x &lt; charArray.length;x++) &#123;<span class="comment">//循环遍历字符数组</span></span><br><span class="line">            d=Character.toString(charArray[x]);<span class="comment">//返回一个字符串对象</span></span><br><span class="line">            <span class="keyword">if</span> (d.matches(<span class="string">"[\\u4e00-\\u9fa5]"</span>)) &#123;<span class="comment">//if语句的条件，判断是否为汉字</span></span><br><span class="line">                <span class="keyword">if</span>(!tm.containsKey(charArray[x])) &#123;<span class="comment">//if语句的条件，判断该汉字是否在tem中</span></span><br><span class="line">                    tm.put(charArray[x], <span class="number">1</span>);<span class="comment">//若该汉字不在tem中则初始化其value值为1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;<span class="comment">//若该汉字在tem中</span></span><br><span class="line">                    int count = tm.get(charArray[x])+<span class="number">1</span>;<span class="comment">//其出现次数增加1</span></span><br><span class="line">                    tm.put(charArray[x],count);<span class="comment">//若汉字在tem中则其value值为count</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tm;<span class="comment">//返回</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-2-2运行结果"><a href="#2-2-2运行结果" class="headerlink" title="2.2.2运行结果"></a>2.2.2运行结果</h3><img src="https://img-blog.csdnimg.cn/20190903215203335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h2 id="2-3统计英文小说26个英文字母的使用频率"><a href="#2-3统计英文小说26个英文字母的使用频率" class="headerlink" title="2.3统计英文小说26个英文字母的使用频率"></a>2.3统计英文小说26个英文字母的使用频率</h2><h3 id="2-3-1代码部分"><a href="#2-3-1代码部分" class="headerlink" title="2.3.1代码部分"></a>2.3.1代码部分</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">package main.java.demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> * User: kingback</span></span><br><span class="line"><span class="comment"> * Author:king@王延凯</span></span><br><span class="line"><span class="comment"> * Date: 2019/7/6</span></span><br><span class="line"><span class="comment"> * Time: 9:49</span></span><br><span class="line"><span class="comment"> * Description: No Description</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Jane_Eyre</span> </span>&#123;</span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 该程序主要完成从硬盘上读取一个文件里的内容，然后统计26个英文字母分别出现的频率</span></span><br><span class="line"><span class="comment">         * 首先需要读取我们存放在桌面的英文小说Jane_Eyre.txt文件，里面限定只能输入小写的字母，接着运行程序即可看到结果</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="built_in">String</span> Filename=<span class="string">"C:\\Users\\kingback\\Desktop\\龙华老师资料\\上交资料\\第九次上交材料\\简爱英文版\\Jane_Eyre_048\\Jane Eyre - Charlotte Bronte.txt"</span>;</span><br><span class="line">        File file = <span class="keyword">new</span> File(Filename);</span><br><span class="line">        InputStream ips = <span class="literal">null</span>;</span><br><span class="line">        ArrayList&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        char[] lower = &#123; <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>, <span class="string">'u'</span>, <span class="string">'v'</span>, <span class="string">'w'</span>,</span><br><span class="line">                <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span> &#125;;<span class="comment">//存放26个英文字母</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//System.out.println("以字节为单位读取文件内容，一次读一个字节：");</span></span><br><span class="line">            ips = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">            int tempbyte;</span><br><span class="line">            <span class="keyword">while</span> ((tempbyte = ips.read()) != <span class="number">-1</span>) &#123;</span><br><span class="line">                arr.add(tempbyte);</span><br><span class="line">            &#125;</span><br><span class="line">            ips.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"从文件读出的内容，按照从a到z的字母出现频率如下："</span>);</span><br><span class="line">        int nums=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(int arr1:tongjipinlv(arr,lower))&#123;</span><br><span class="line">            System.out.print(arr1+<span class="string">","</span>);</span><br><span class="line">            nums+=arr1;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"\n该小说中所有小写字母的个数为："</span>+nums);</span><br><span class="line">        int[] result=tongjipinlv(arr,lower);<span class="comment">//用来获取英文字母的个数</span></span><br><span class="line">        <span class="comment">//计算英文字母的信息熵</span></span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">            double p = (double)result[i]/nums;<span class="comment">//定义一个double型变量,计算该汉字在文章中的出现概率</span></span><br><span class="line">            double H = -p * (<span class="built_in">Math</span>.log(p) / <span class="built_in">Math</span>.log(<span class="number">2</span>));<span class="comment">//定义一个double型变量,计算该汉字的信息熵</span></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"字母"</span>+lower[i]+<span class="string">"    "</span>+<span class="string">"个数为："</span>+result[i]+<span class="string">"     信息熵为："</span>+H);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//统计字母出现频率</span></span><br><span class="line">    public <span class="keyword">static</span> int[] tongjipinlv(ArrayList&lt;Integer&gt; arr,char[] lower) &#123;</span><br><span class="line"></span><br><span class="line">        int[] count =&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="comment">//遍历查询出结果</span></span><br><span class="line">        <span class="keyword">for</span> (int i=<span class="number">0</span>;i&lt;lower.length;i++)</span><br><span class="line">            <span class="keyword">for</span>(int j=<span class="number">0</span>;j&lt;arr.size();j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (arr.get(j) == lower[i]) &#123;</span><br><span class="line">                    ++count[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> count;<span class="comment">//返回26个字母的结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-3-2运行结果"><a href="#2-3-2运行结果" class="headerlink" title="2.3.2运行结果"></a>2.3.2运行结果</h3><img src="https://img-blog.csdnimg.cn/2019090321514050.png#pic_center" alt="在这里插入图片描述"><h2 id="2-4计算中文小说西游记的各个汉字的信息熵"><a href="#2-4计算中文小说西游记的各个汉字的信息熵" class="headerlink" title="2.4计算中文小说西游记的各个汉字的信息熵"></a>2.4计算中文小说西游记的各个汉字的信息熵</h2>对于汉字信息熵的求解是在上边求出各个汉字的使用频率后继续进行的计算。以下为该计算实现的代码部分：<h3 id="2-4-1代码部分"><a href="#2-4-1代码部分" class="headerlink" title="2.4.1代码部分"></a>2.4.1代码部分</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//            计算信息熵</span></span><br><span class="line"><span class="comment">//            根据数学公式来进行计算</span></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">Map</span>.Entry&lt;Character,Integer&gt; mapping:list) &#123;<span class="comment">//遍历list</span></span><br><span class="line">    int f = mapping.getValue();</span><br><span class="line">    double p = (double)f/i;<span class="comment">//定义一个double型变量,计算该汉字在文章中的出现概率</span></span><br><span class="line">    double H = -p * (<span class="built_in">Math</span>.log(p) / <span class="built_in">Math</span>.log(<span class="number">2</span>));<span class="comment">//定义一个double型变量,计算该汉字的信息熵</span></span><br><span class="line">    System.out.println(mapping.getKey()+<span class="string">"："</span>+mapping.getValue()+<span class="string">"   信息熵为："</span>+H+<span class="string">"比特/符号"</span>); <span class="comment">//输出降序排序的结果</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-4-2运行结果"><a href="#2-4-2运行结果" class="headerlink" title="2.4.2运行结果"></a>2.4.2运行结果</h3><img src="https://img-blog.csdnimg.cn/20190903215124732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h2 id="2-5计算英文小说26个字母各自的信息熵"><a href="#2-5计算英文小说26个字母各自的信息熵" class="headerlink" title="2.5计算英文小说26个字母各自的信息熵"></a>2.5计算英文小说26个字母各自的信息熵</h2><h3 id="2-5-1代码部分"><a href="#2-5-1代码部分" class="headerlink" title="2.5.1代码部分"></a>2.5.1代码部分</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">int[] result=tongjipinlv(arr,lower);<span class="comment">//用来获取英文字母的个数</span></span><br><span class="line"><span class="comment">//计算英文字母的信息熵</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">    double p = (double)result[i]/nums;<span class="comment">//定义一个double型变量,计算该汉字在文章中的出现概率</span></span><br><span class="line">    double H = -p * (<span class="built_in">Math</span>.log(p) / <span class="built_in">Math</span>.log(<span class="number">2</span>));<span class="comment">//定义一个double型变量,计算该汉字的信息熵</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"字母"</span>+lower[i]+<span class="string">"    "</span>+<span class="string">"个数为："</span>+result[i]+<span class="string">"     信息熵为："</span>+H);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-5-2运行结果"><a href="#2-5-2运行结果" class="headerlink" title="2.5.2运行结果"></a>2.5.2运行结果</h3><img src="https://img-blog.csdnimg.cn/20190903215110410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h2 id="2-6-过程截图"><a href="#2-6-过程截图" class="headerlink" title="2.6 过程截图"></a>2.6 过程截图</h2><h3 id="2-6-1-英文字母的"><a href="#2-6-1-英文字母的" class="headerlink" title="2.6.1 英文字母的"></a>2.6.1 英文字母的</h3><img src="https://img-blog.csdnimg.cn/20190903220530788.gif#pic_center" alt="在这里插入图片描述"><h3 id="2-6-2-中文小说的"><a href="#2-6-2-中文小说的" class="headerlink" title="2.6.2 中文小说的"></a>2.6.2 中文小说的</h3><img src="https://img-blog.csdnimg.cn/2019090322062517.gif#pic_center" alt="在这里插入图片描述"><h2 id="2-7-实验总结"><a href="#2-7-实验总结" class="headerlink" title="2.7 实验总结"></a>2.7 实验总结</h2>该实验主要考察了使用Java对于文本的写入和读取，以及对于信息熵概念的理解。最后说明一下，如果有人需要实验中所用到的《西游记》和《简爱》的txt版本，可以给我留言，看到必免费赠送。</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java加密解密练习</title>
    <url>/2019/11/25/java%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="1-实验要求"><a href="#1-实验要求" class="headerlink" title="1.    实验要求"></a>1.    实验要求</h1><ol>
<li>设有一段英文文章，为简单起见，仅由26个小写字母、空格、标点符号（引号和逗号）组成，符号集合共29个。现在自定义一种一一映射规则，将这29个符号映射（替代）为同集合中的符号，比如b用k替代、u用v替代、t用s替代、空格用空格替代等等。这样but就被替换为kvs,从而实现了简单加密。试编写一java程序，实现上述替代规则（规则自己定义），从一个txt文件中 读取明文，将加密后的密文重新写到一个新文件中。</li>
<li>对任务1中加密的密文进行解密，看看解密后的文件是否与明文相同。<h1 id="2-实验代码及结果"><a href="#2-实验代码及结果" class="headerlink" title="2. 实验代码及结果"></a>2. 实验代码及结果</h1>对于这个问题我认为首先考察的就是java对于文本的操作，包括读取以及写入。其次才是对于加密解密功能的实现。<h2 id="2-1-加密"><a href="#2-1-加密" class="headerlink" title="2.1 加密"></a>2.1 加密</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">package main.java.demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> * User: kingback</span></span><br><span class="line"><span class="comment"> * Author:king@王延凯</span></span><br><span class="line"><span class="comment"> * Date: 2019/7/25</span></span><br><span class="line"><span class="comment"> * Time: 18:08</span></span><br><span class="line"><span class="comment"> * Description: No Description</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;<span class="comment">//导入java.io包中的所有类</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;<span class="comment">//导入java.util包中的所有类</span></span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">encryption</span> </span>&#123;</span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">String</span> wen = <span class="string">"abcd.def zyz"</span>;</span><br><span class="line">        <span class="built_in">String</span> pass = <span class="string">"123456789"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用ArrayList来存储每行读取到的字符串</span></span><br><span class="line">        ArrayList&lt;<span class="built_in">String</span>&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">"C:\\Users\\kingback\\Desktop\\龙华老师资料\\上交资料\\第十次上交材料\\英文.txt"</span>);</span><br><span class="line">            BufferedReader bf = <span class="keyword">new</span> BufferedReader(fr);</span><br><span class="line">            <span class="built_in">String</span> str;</span><br><span class="line">            <span class="comment">// 按行读取字符串</span></span><br><span class="line">            <span class="keyword">while</span> ((str = bf.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                arrayList.add(str);</span><br><span class="line">            &#125;</span><br><span class="line">            bf.close();</span><br><span class="line">            fr.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 对ArrayList中存储的字符串进行处理</span></span><br><span class="line">        int length = arrayList.size();</span><br><span class="line">        int[] array = <span class="keyword">new</span> int[length];</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="comment">//逐行进行加密</span></span><br><span class="line">            <span class="built_in">String</span> s = arrayList.get(i);</span><br><span class="line">            <span class="comment">//对数据进行加密</span></span><br><span class="line">            <span class="built_in">String</span> result=encrypt(s,pass);</span><br><span class="line">            System.out.println(<span class="string">"加密后的结果为："</span>+result);</span><br><span class="line"><span class="comment">//            System.out.println(encrypt(s, pass));</span></span><br><span class="line">            <span class="comment">//将加密后的数据存储到txt文件中。</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                result=result+<span class="string">"\n"</span>;</span><br><span class="line">                <span class="comment">//重新设置字符串</span></span><br><span class="line">                FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">"C:\\Users\\kingback\\Desktop\\龙华老师资料\\上交资料\\第十次上交材料\\result.txt"</span>,<span class="literal">true</span>);</span><br><span class="line">               <span class="comment">//fw的第二个参数，设置为true,则为追加模式</span></span><br><span class="line">                fw.write(result,<span class="number">0</span>,result.length());</span><br><span class="line">                <span class="comment">//执行写入操作</span></span><br><span class="line">                fw.flush();</span><br><span class="line">                fw.close();</span><br><span class="line">                <span class="comment">//关闭写入，关闭文件</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取解密结果</span></span><br><span class="line">            <span class="built_in">String</span> deResult=decrypt(encrypt(s, pass), pass);</span><br><span class="line">            System.out.println(<span class="string">"解密后的结果为："</span>+deResult);</span><br><span class="line">            <span class="comment">//输出解密结果</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param sourceString</span></span><br><span class="line"><span class="comment">     * @param password</span></span><br><span class="line"><span class="comment">     * @return 明文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public <span class="keyword">static</span> <span class="built_in">String</span> decrypt(<span class="built_in">String</span> sourceString,<span class="built_in">String</span> password) &#123;</span><br><span class="line">        char[] p = password.toCharArray(); <span class="comment">// 字符串转字符数组</span></span><br><span class="line">        int n = p.length; <span class="comment">// 密码长度</span></span><br><span class="line">        char[] c = sourceString.toCharArray();</span><br><span class="line">        int m = c.length; <span class="comment">// 字符串长度</span></span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            char resultDeChar=Change(c[i]);</span><br><span class="line">            c[i] = (char) resultDeChar;</span><br><span class="line">            <span class="comment">//类型转换</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">String</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param sourceString</span></span><br><span class="line"><span class="comment">     * @param password</span></span><br><span class="line"><span class="comment">     * @return 密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public <span class="keyword">static</span> <span class="built_in">String</span> encrypt(<span class="built_in">String</span> sourceString,<span class="built_in">String</span> password) &#123;</span><br><span class="line">        char[] p = password.toCharArray(); <span class="comment">// 字符串转字符数组</span></span><br><span class="line">        int n = p.length; <span class="comment">// 密码长度</span></span><br><span class="line">        char[] c = sourceString.toCharArray();</span><br><span class="line">        int m = c.length; <span class="comment">// 字符串长度</span></span><br><span class="line">        <span class="comment">//在此处进行加密</span></span><br><span class="line">        <span class="keyword">for</span> (int k = <span class="number">0</span>; k &lt; m; k++) &#123;</span><br><span class="line">            char resultChar=deChange(c[k]);</span><br><span class="line">            c[k] = (char) resultChar;</span><br><span class="line">            <span class="comment">//类型转换</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">String</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param sourceChar</span></span><br><span class="line"><span class="comment">     * @return 加密后的字符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> char Change(char sourceChar) &#123;</span><br><span class="line">        char c = sourceChar;</span><br><span class="line">        int result=(int)sourceChar;</span><br><span class="line">        <span class="comment">//获取字符的ASCII码值，用数字表示</span></span><br><span class="line">        <span class="comment">//执行加密操作</span></span><br><span class="line">        <span class="comment">///如果a-y则数值加一</span></span><br><span class="line">        <span class="keyword">if</span> (result&lt;=<span class="number">121</span> &amp;&amp;<span class="number">97</span>&lt;=result)&#123;</span><br><span class="line">            result++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果z则数值不变</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (result==<span class="number">122</span>)&#123;</span><br><span class="line">            result=<span class="number">97</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//类型转换为字符</span></span><br><span class="line">        c=(char)result;</span><br><span class="line">        <span class="comment">//返回字符型结果</span></span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param sourceChar</span></span><br><span class="line"><span class="comment">     * @return 解密后的字符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public <span class="keyword">static</span> char deChange(char sourceChar) &#123;</span><br><span class="line">        char c = sourceChar;</span><br><span class="line">        int result=(int)sourceChar;</span><br><span class="line">        <span class="comment">//获取字符的ASCII码值，用数字表示</span></span><br><span class="line">        <span class="comment">//执行解密操作</span></span><br><span class="line">        <span class="keyword">if</span> (result&lt;=<span class="number">122</span> &amp;&amp;<span class="number">98</span>&lt;=result)&#123;</span><br><span class="line">            result--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果是b-z则数值减一</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (result==<span class="number">97</span>)&#123;</span><br><span class="line">            result=<span class="number">122</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果是a则不变</span></span><br><span class="line">        c=(char)result;</span><br><span class="line">        <span class="comment">//将数字类型强转为字符类型</span></span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20190903221931396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h2 id="2-2-解密"><a href="#2-2-解密" class="headerlink" title="2.2 解密"></a>2.2 解密</h2>对于解密部分的代码，我封装了一个decrypt的方法，当我们需要进行解密验证的时候，只需要调用即可。<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">public <span class="keyword">static</span> <span class="built_in">String</span> decrypt(<span class="built_in">String</span> sourceString,<span class="built_in">String</span> password) &#123;</span><br><span class="line">    char[] p = password.toCharArray(); <span class="comment">// 字符串转字符数组</span></span><br><span class="line">    int n = p.length; <span class="comment">// 密码长度</span></span><br><span class="line">    char[] c = sourceString.toCharArray();</span><br><span class="line">    int m = c.length; <span class="comment">// 字符串长度</span></span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        char resultDeChar=Change(c[i]);</span><br><span class="line">        c[i] = (char) resultDeChar;</span><br><span class="line">        <span class="comment">//类型转换</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">String</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param sourceString</span></span><br><span class="line"><span class="comment"> * @param password</span></span><br><span class="line"><span class="comment"> * @return 密文</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">public <span class="keyword">static</span> char deChange(char sourceChar) &#123;</span><br><span class="line">    char c = sourceChar;</span><br><span class="line">    int result=(int)sourceChar;</span><br><span class="line">    <span class="comment">//获取字符的ASCII码值，用数字表示</span></span><br><span class="line">    <span class="comment">//执行解密操作</span></span><br><span class="line">    <span class="keyword">if</span> (result&lt;=<span class="number">122</span> &amp;&amp;<span class="number">98</span>&lt;=result)&#123;</span><br><span class="line">        result--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果是b-z则数值减一</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (result==<span class="number">97</span>)&#123;</span><br><span class="line">        result=<span class="number">122</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果是a则不变</span></span><br><span class="line">    c=(char)result;</span><br><span class="line">    <span class="comment">//将数字类型强转为字符类型</span></span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20190903221949110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h2 id="2-3整体运行过程"><a href="#2-3整体运行过程" class="headerlink" title="2.3整体运行过程"></a>2.3整体运行过程</h2><img src="https://img-blog.csdnimg.cn/20190903222349489.gif#pic_center" alt="在这里插入图片描述"></li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>使用IDEA部署一个Tomcat服务器</title>
    <url>/2019/11/25/%E4%BD%BF%E7%94%A8IDea%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0Tomcat%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="0-搭建环境准备"><a href="#0-搭建环境准备" class="headerlink" title="0. 搭建环境准备"></a>0. 搭建环境准备</h1><ol>
<li>windows10</li>
<li>IDEA 2017.2.6  官方下载地址：<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/</a></li>
<li>java 1.8.0._171  官方下载地址： <a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></li>
<li>mysql 8.0.11  官网下载地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></li>
<li>Tomcat 8.5.31  官方下载地址： <a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">https://tomcat.apache.org/download-80.cgi</a><h1 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h1><h1 id="1-1-使用idea创建一个Maven架构"><a href="#1-1-使用idea创建一个Maven架构" class="headerlink" title="1.1 使用idea创建一个Maven架构"></a>1.1 使用idea创建一个Maven架构</h1>依次点击<strong>File</strong>——-<strong>New</strong>——-<strong>Project</strong>——-<strong>Maven</strong>——-<strong>Project SDK</strong><br><img src="https://img-blog.csdnimg.cn/20190831140517354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190831140706515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$选择完该项目需要使用的java SDK时，勾选<strong>Create from archetype</strong>,然后在上图的右侧选中<strong>org.apache.maven.archetypes:maven-archetype-webapp</strong>,如下图所示：<br><img src="https://img-blog.csdnimg.cn/20190831141255652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击 <strong>Next</strong> 之后则会弹出如下窗口，要求我们创建项目名称（也就是我们的要发布的Webapp的名称）:<br><img src="https://img-blog.csdnimg.cn/20190831141625424.png#pic_center" alt="在这里插入图片描述"><br>这里名称的填写没有什么要求，可以根据自己的喜欢创建。填写完毕之后点击 <strong>Next</strong>,接着弹出如下窗口：<br><img src="https://img-blog.csdnimg.cn/20190831142349546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在此界面不用再去更改这些默认配置，直接点击 <strong>Next</strong>即可，然后弹出对于项目的命名:<br><img src="https://img-blog.csdnimg.cn/20190831142642404.png#pic_center" alt="在这里插入图片描述"><br>$\qquad$将这些都设置完成之后点击  <strong>Finish</strong>  结束项目的创建。因为我们使用的是maven的架构，所以创建完之后，该架构会自动创建一些webapp需要的目录结构以及一些必要文件的下载。其在线加载过程如下所示：<br><img src="https://img-blog.csdnimg.cn/20190831142847615.png#pic_center" alt="在这里插入图片描述"><br>$\qquad$另外，此架构在在线构建的时候可能有些包不能够自动引进，所以它会弹出提示：<strong>Maven projects need to be imported</strong>,如下图所示，此时我们鼠标点击  <strong>Enable Auto_Import</strong> 即可继续进行自动加载。<br><img src="https://img-blog.csdnimg.cn/20190831143517198.png#pic_center" alt="在这里插入图片描述"></li>
</ol>
<h1 id="1-2-按照自己的习惯创建该项目的目录结构"><a href="#1-2-按照自己的习惯创建该项目的目录结构" class="headerlink" title="1.2 按照自己的习惯创建该项目的目录结构"></a>1.2 按照自己的习惯创建该项目的目录结构</h1><p>$\qquad$项目刚刚创建之后我们会发现自动创建的文件夹并不完全符合我们的要求，于是这就需要我们自己再创建一些文件，依次点击<strong>右键</strong>——-<strong>New</strong>——-<strong>Directory</strong>,如下所示：<br><img src="https://img-blog.csdnimg.cn/20190831143654269.png#pic_center" alt="在这里插入图片描述"><br>$\qquad$我们上一步刚刚创建的文件夹名字我命名为java,用来存储该项目所需要的各类java文件，但是创建完成之后，我们发现在此文件夹下我们并不能创建java类，于是我们就需要对java这个文件夹进行设置，依次点击 <strong>选中该文件夹并右键</strong>——-<strong>Mark Directory as</strong>——-<strong>Source Root</strong>,具体操作如下所：<img src="https://img-blog.csdnimg.cn/20190831143705550.png#pic_center" alt="在这里插入图片描述"><br>设置完成之后，我们就可在此文件夹下创建java文件了，如下所示。<br><img src="https://img-blog.csdnimg.cn/20190831145224384.png#pic_center" alt="在这里插入图片描述"></p>
<h1 id="1-3-配置Tomcat服务器"><a href="#1-3-配置Tomcat服务器" class="headerlink" title="1.3 配置Tomcat服务器"></a>1.3 配置Tomcat服务器</h1><p>$\qquad$关于Tomcat服务器的安装，我在这里暂且不再讲述，如果你观看的时候电脑本地还未配置好Tomcat,你可以参照如下 链接来进行布置及安装。<a href="https://www.cnblogs.com/limn/p/9358657.html" target="_blank" rel="noopener">https://www.cnblogs.com/limn/p/9358657.html</a><br>接下来进行配置Tomcat服务器的步骤，在IDEA主界面右侧，依次点击<strong>下拉箭头处</strong>——-<strong>Edit Configuration</strong><br><img src="https://img-blog.csdnimg.cn/20190831150013323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$紧接着将会弹出一个窗口让选择要创建的服务器类别，在这个窗口依次点击 <strong>Tomcat Server</strong> (如果找不到的话可以点击一下下方的 <strong>33 items more</strong> 里来寻找一下)——-<strong>Local</strong><br><img src="https://img-blog.csdnimg.cn/20190831151206228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在新弹出的窗口，依次对 <strong>Name</strong>进行重命名——-选中 <strong>Deployment</strong> ——-<strong>右侧加号</strong>———<strong>Artifact</strong><br><img src="https://img-blog.csdnimg.cn/20190831151650695.png#pic_center" alt="在这里插入图片描述"><br>然后在这个新出来的界面,选择并点击 <strong>words:war exploded</strong> 选项<br><img src="https://img-blog.csdnimg.cn/20190831152359824.png#pic_center" alt="在这里插入图片描述"><br>$\qquad$然后再选中 <strong>Sever</strong> 选项，依次设置 <strong>Application sever 选择Tomcat所在的文件夹</strong> ——-<strong>默认浏览器设置为Chrome</strong>——-<strong>将On frame deactivation 设置为Update classes and resources</strong> ——— <strong>JRE 选择一下自己安装的java的版本</strong>——-<strong>OK</strong>  即可。<br><img src="https://img-blog.csdnimg.cn/20190831152651833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$最后配置完成Tomcat服务器后，我们可以看到如下界面，点击右侧的 <strong>绿色三角号</strong> 即可运行该Tomcat服务器。<br><img src="https://img-blog.csdnimg.cn/20190831154154161.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="1-4-启动Tomcat服务器测验"><a href="#1-4-启动Tomcat服务器测验" class="headerlink" title="1.4 启动Tomcat服务器测验"></a>1.4 启动Tomcat服务器测验</h1><p>点击上方图片的小绿色运行号后，我们就会看到如下界面：<br><img src="https://img-blog.csdnimg.cn/20190831154509584.png#pic_center" alt="在这里插入图片描述"><br>执行完成之后则会在浏览器界面显示如下：<br><img src="https://img-blog.csdnimg.cn/20190831160730661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>以下附出整个的运行过程。<br><img src="https://img-blog.csdnimg.cn/20190831160629946.gif#pic_center" alt="在这里插入图片描述"></p>
<h1 id="2-致谢"><a href="#2-致谢" class="headerlink" title="2. 致谢"></a>2. 致谢</h1><p>$\qquad$由于这个任务是在本科还未毕业的时候在校内完成的，一开始无从下手，后来多方请教了很多同学，尤其是 <strong>吴洪波</strong> 同学，在对这个项目的搭建过程中起了关键作用。在此，衷心的对其表示感谢！！！</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Python将txt文本存入Mysql数据库</title>
    <url>/2019/11/25/Python%E5%B0%86txt%E6%96%87%E6%9C%AC%E5%AD%98%E5%85%A5MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="1-创建表格"><a href="#1-创建表格" class="headerlink" title="1.创建表格"></a>1.创建表格</h1><p>对于mysql数据表格的创建，我使用的使navicat(一个小型化的数据库可视化操作软件)。<br><img src="https://img-blog.csdnimg.cn/20190831133321945.png#pic_center" alt="在这里插入图片描述"><br>根据要存入的txt格式，我定义新建表格的字段名称，如下所示：<br><img src="https://img-blog.csdnimg.cn/20190831133244810.png#pic_center" alt="在这里插入图片描述"></p>
<h1 id="2-书写python程序将txt文本存入MYSQL数据库"><a href="#2-书写python程序将txt文本存入MYSQL数据库" class="headerlink" title="2.书写python程序将txt文本存入MYSQL数据库"></a>2.书写python程序将txt文本存入MYSQL数据库</h1><p>创建好表格后，就是调用python程序对txt文件的存取工作了：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">#该文件主要实现将txt文件传入mysql数据库</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">#变量初始化</span><br><span class="line">con=pymysql.connect(</span><br><span class="line">    host=<span class="string">'localhost'</span>,</span><br><span class="line">    port=<span class="number">3306</span>,</span><br><span class="line">    user=<span class="string">'root'</span>,</span><br><span class="line">    passwd=<span class="string">'123456'</span>,</span><br><span class="line">    db=<span class="string">'test'</span>,</span><br><span class="line">    charset=<span class="string">'utf8'</span>,</span><br><span class="line">    )</span><br><span class="line">def insert(con,English,Chinese):</span><br><span class="line">    #数据库游标！</span><br><span class="line">    cue = con.cursor()</span><br><span class="line">    # print("mysql connect succes")  # 测试语句，这在程序执行时非常有效的理解程序是否执行到这一步</span><br><span class="line">    #try-except捕获执行异常</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cue.execute(</span><br><span class="line">            <span class="string">"insert into words (English,Chinese) values(%s,%s)"</span>,</span><br><span class="line">            [English,Chinese,])</span><br><span class="line">        #执行sql语句</span><br><span class="line">        # print("insert success")  # 测试语句</span><br><span class="line">    except Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'Insert error:'</span>, e)</span><br><span class="line">        con.rollback()</span><br><span class="line">        #报错反馈</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        con.commit()</span><br><span class="line">        #真正的执行语句</span><br><span class="line">def read():</span><br><span class="line">    filename=r<span class="string">'C:\Users\kingback\Desktop\龙华老师资料\上交资料\第六次上交材料\words.txt'</span></span><br><span class="line">    #按行读取txt文本文档</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        datas = f.readlines()</span><br><span class="line">    #遍历文件</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">        txt=re.split(r<span class="string">'\t|\n'</span>,data)</span><br><span class="line">        english=txt[<span class="number">0</span>]</span><br><span class="line">        chinese=txt[<span class="number">1</span>]</span><br><span class="line">        insert(con, english, chinese)</span><br><span class="line">        #调用insert方法</span><br><span class="line">    print(<span class="string">"数据插入完成！"</span>)</span><br><span class="line">read()</span><br><span class="line">#执行read函数</span><br><span class="line">con.close()</span><br><span class="line">#关闭连接</span><br></pre></td></tr></table></figure></p>
<h1 id="3-运行结果"><a href="#3-运行结果" class="headerlink" title="3.运行结果"></a>3.运行结果</h1><p>$\qquad$当程序执行完成之后，则会提示数据插入成功：<br><img src="https://img-blog.csdnimg.cn/20190831133811638.png#pic_center" alt="在这里插入图片描述"><br>$\qquad$当我们再次查询刚刚新建的表格的时候，我们会发现，表格内已经存入了我们需要的内容，其结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20190831133742839.png#pic_center" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>爬虫时xpath解析不到网页数据</title>
    <url>/2019/11/25/%E7%88%AC%E8%99%AB%E6%97%B6xpath%E8%A7%A3%E6%9E%90%E4%B8%8D%E5%88%B0%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="前几天在爬取Google图片的过程中解析网页数据用到的xpath竟然一直解析不出所要的数据，返回结果为空。"><a href="#前几天在爬取Google图片的过程中解析网页数据用到的xpath竟然一直解析不出所要的数据，返回结果为空。" class="headerlink" title="前几天在爬取Google图片的过程中解析网页数据用到的xpath竟然一直解析不出所要的数据，返回结果为空。"></a>前几天在爬取Google图片的过程中解析网页数据用到的xpath竟然一直解析不出所要的数据，返回结果为空。</h1><p>因为我的xpath路径使用的是chrome浏览器自带的<strong>xpath</strong>解析,不知道为啥，浏览器在复制的过程中自己添加了tbody这个子结构，也正是因为加了这个子结构，才会出现在浏览器上可以解析得到数据，然而在爬虫过程中解析不到数据。<br>应用此方案后，问题解决。希望可以帮助到后来的人。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Java基本算术训练</title>
    <url>/2019/11/25/java%E5%9F%BA%E6%9C%AC%E7%AE%97%E6%9C%AF%E8%AE%AD%E7%BB%83/</url>
    <content><![CDATA[<h2 id="编程实现1-2-3-、、、-100"><a href="#编程实现1-2-3-、、、-100" class="headerlink" title="编程实现1+2+3+、、、+100"></a>编程实现1+2+3+、、、+100</h2><p>废话不多说直接上代码，这里直接展示代码实现部分和代码运行结果。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建输出函数快捷键sout</span></span><br><span class="line">int sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//编程实现1+2+3+...+100</span></span><br><span class="line"><span class="keyword">for</span> (int i =<span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">    sum1 += i;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"\nthe Sum of nature numbers within 100 is :"</span> + sum1);</span><br></pre></td></tr></table></figure></p>
<h2 id="编程实现1-3-5-7-、、、-101"><a href="#编程实现1-3-5-7-、、、-101" class="headerlink" title="编程实现1+3+5+7+、、、+101"></a>编程实现1+3+5+7+、、、+101</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//编程实现1+3+5+7+9+...+101</span></span><br><span class="line">int c = <span class="number">1</span>;<span class="comment">//c用来存储奇数</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">1</span>; i &lt;= <span class="number">50</span>; i++) &#123;</span><br><span class="line">    sum2 += c;</span><br><span class="line">    c += <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"\nthe Sum of odd numbers within 101 is :"</span> + sum2);</span><br></pre></td></tr></table></figure>
<h2 id="编程实现输出十个随机整数，值在0-100之间"><a href="#编程实现输出十个随机整数，值在0-100之间" class="headerlink" title="编程实现输出十个随机整数，值在0-100之间"></a>编程实现输出十个随机整数，值在0-100之间</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//编程实现输出10个随机整数，值在0-100之间</span></span><br><span class="line">Random r = <span class="keyword">new</span> Random(<span class="number">30</span>);<span class="comment">//创建一个新的伪随机数生成器</span></span><br><span class="line"><span class="comment">//定义一个数组来承接生成的随机数</span></span><br><span class="line">int[] ran = <span class="keyword">new</span> int[<span class="number">10</span>];</span><br><span class="line">System.out.println(<span class="string">"\n生成的随机数为："</span>);</span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    int t1 = r.nextInt(<span class="number">100</span>);</span><br><span class="line">    ran[i] = t1;</span><br><span class="line">    System.out.printf(t1 + <span class="string">"   "</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="对以上生成的十个随机整数进行排序"><a href="#对以上生成的十个随机整数进行排序" class="headerlink" title="对以上生成的十个随机整数进行排序"></a>对以上生成的十个随机整数进行排序</h2><p>在此处进行排序我使用了两种方式分别实现了对于十个数字的排序功能，分别为==选择法==和==冒泡排序法==。两种排序方式都可以，故我使用这两种方式一个实现正序排列一个实现了倒序排列。在具体应用中两种都可以。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建方法使用快捷键 Alt+Insert</span></span><br><span class="line"><span class="comment">//方法一，选择法，第一次循环都和第一个比较，把最小的放在最前边</span></span><br><span class="line">public <span class="keyword">static</span> int[] sort(int[] a) &#123;</span><br><span class="line">    int[] b=<span class="keyword">new</span> int[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (int j = i+<span class="number">1</span>; j &lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">                int temp=a[i];</span><br><span class="line">                a[i]=a[j];</span><br><span class="line">                a[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//方法二：冒泡排序法，相邻两个进行比较，将最大的放到最后边</span></span><br><span class="line">public <span class="keyword">static</span> int[] sort1(int[] a) &#123;</span><br><span class="line">    <span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(int j=<span class="number">0</span>;j&lt;<span class="number">10</span>-i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])&#123;</span><br><span class="line">                int temp=a[j];</span><br><span class="line">                a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">                a[j+<span class="number">1</span>]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="设有两字符串A、B构成的集合，字符串内容值为以下所示："><a href="#设有两字符串A、B构成的集合，字符串内容值为以下所示：" class="headerlink" title="设有两字符串A、B构成的集合，字符串内容值为以下所示："></a>设有两字符串A、B构成的集合，字符串内容值为以下所示：</h2><p><kbd>A:{a,b,c,d,e,f,g,in,off,about,get}<br>B:{f,g,a,come,get,go}
</kbd></p>
<p><strong>试求出</strong></p>
<ol>
<li>求出集合A、B的交集；</li>
<li>只在集合A中出现的字符串集合；</li>
<li>集合A、B的并集。</li>
</ol>
<p>以下则分别实现三个功能，首先实现要求1，求出==AB集合的交集==<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">      <span class="comment">//返回集合A和集合B交集</span></span><br><span class="line">public <span class="keyword">static</span> <span class="built_in">String</span>[] samestr(<span class="built_in">String</span>[] a,<span class="built_in">String</span>[] b) &#123;</span><br><span class="line">    <span class="built_in">String</span>[] aa=<span class="keyword">new</span> <span class="built_in">String</span>[<span class="number">20</span>];</span><br><span class="line">    int k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (int i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(int j=<span class="number">0</span>;j&lt;b.length;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==b[j])&#123;</span><br><span class="line">                aa[k]=a[i];</span><br><span class="line">                k++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> aa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>接下来实现要求2，求出==只在A中出现的字符串集合==：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//返回字符串a独有的集合</span></span><br><span class="line">public <span class="keyword">static</span> ArrayList diffstr(<span class="built_in">String</span>[] a, <span class="built_in">String</span>[] b) &#123;</span><br><span class="line">    ArrayList aa=<span class="keyword">new</span> ArrayList();<span class="comment">//用来存储字符串a</span></span><br><span class="line">    ArrayList bb=<span class="keyword">new</span> ArrayList();<span class="comment">//用来存储字符串b</span></span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">        aa.add(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; b.length; i++) &#123;</span><br><span class="line">        bb.add(b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//移除aa中包含的bb</span></span><br><span class="line">    aa.removeAll(bb);</span><br><span class="line">    <span class="keyword">return</span> aa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>最后再来实现要求3，求==A、B集合的并集==<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//返回AB集合并集</span></span><br><span class="line">public <span class="keyword">static</span> ArrayList gatherstr(<span class="built_in">String</span>[] a,<span class="built_in">String</span>[] b) &#123;</span><br><span class="line">    ArrayList aa=<span class="keyword">new</span> ArrayList();</span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">        aa.add(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; b.length; i++) &#123;</span><br><span class="line">        aa.add(b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> aa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="程序运行截图"><a href="#程序运行截图" class="headerlink" title="程序运行截图"></a>程序运行截图</h2><p>以下我展示出程序运行后的结果：</p>
<p><img src="https://img-blog.csdnimg.cn/20190827233132400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="全部的java代码"><a href="#全部的java代码" class="headerlink" title="全部的java代码"></a>全部的java代码</h2><p>最后我还提供出此次练习的全部java源码，供大家一起学习讨论。代码中有什么不足之处，欢迎大家斧正。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">package main.java.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> * User: kingback</span></span><br><span class="line"><span class="comment"> * Author:king@王延凯</span></span><br><span class="line"><span class="comment"> * Date: 2019/4/6</span></span><br><span class="line"><span class="comment"> * Time: 20:39</span></span><br><span class="line"><span class="comment"> * Description: No Description</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建main函数快捷键psvm</span></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建输出函数快捷键sout</span></span><br><span class="line">        int sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//编程实现1+2+3+...+100</span></span><br><span class="line">        <span class="keyword">for</span> (int i =<span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            sum1 += i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"\nthe Sum of nature numbers within 100 is :"</span> + sum1);</span><br><span class="line">        <span class="comment">//编程实现1+3+5+7+9+...+101</span></span><br><span class="line">        int c = <span class="number">1</span>;<span class="comment">//c用来存储奇数</span></span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">1</span>; i &lt;= <span class="number">50</span>; i++) &#123;</span><br><span class="line">            sum2 += c;</span><br><span class="line">            c += <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"\nthe Sum of odd numbers within 101 is :"</span> + sum2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//编程实现输出10个随机整数，值在0-100之间</span></span><br><span class="line">        Random r = <span class="keyword">new</span> Random(<span class="number">30</span>);<span class="comment">//创建一个新的伪随机数生成器</span></span><br><span class="line">        <span class="comment">//定义一个数组来承接生成的随机数</span></span><br><span class="line">        int[] ran = <span class="keyword">new</span> int[<span class="number">10</span>];</span><br><span class="line">        System.out.println(<span class="string">"\n生成的随机数为："</span>);</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            int t1 = r.nextInt(<span class="number">100</span>);</span><br><span class="line">            ran[i] = t1;</span><br><span class="line">            System.out.printf(t1 + <span class="string">"   "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int[] aa = <span class="keyword">new</span> int[<span class="number">10</span>];</span><br><span class="line">        aa = sort(ran);</span><br><span class="line">        System.out.println(<span class="string">"\n\n排序后的结果为："</span>);</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.print(aa[i] + <span class="string">"   "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//多行注释ctrl+shift+/</span></span><br><span class="line">       <span class="comment">/* for(int i=0;i&lt;10;i++)&#123;</span></span><br><span class="line"><span class="comment">            System.out.println(ran[i]);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设有两字符串构成的集合，字符串内容如下所示</span></span><br><span class="line">        <span class="built_in">String</span>[] str = &#123;<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"f"</span>, <span class="string">"g"</span>, <span class="string">"in"</span>, <span class="string">"off"</span>, <span class="string">"about"</span>, <span class="string">"get"</span>&#125;;</span><br><span class="line">        <span class="built_in">String</span>[] str1 = &#123;<span class="string">"f"</span>, <span class="string">"g"</span>, <span class="string">"a"</span>, <span class="string">"come"</span>, <span class="string">"get"</span>, <span class="string">"go"</span>&#125;;</span><br><span class="line">        <span class="built_in">String</span>[] togather = <span class="keyword">new</span> <span class="built_in">String</span>[<span class="number">20</span>];</span><br><span class="line">        <span class="built_in">String</span>[] diff = <span class="keyword">new</span> <span class="built_in">String</span>[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//要求找出两个集合的交集,并集</span></span><br><span class="line">        togather = samestr(str, str1);</span><br><span class="line">        <span class="comment">//输出AB的交集</span></span><br><span class="line">        System.out.print(<span class="string">"\n\nAB的交集: "</span>);</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; togather.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (togather[i] != <span class="literal">null</span>) &#123;</span><br><span class="line">                System.out.print(togather[i] + <span class="string">"   "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出只在A中出现的字符串</span></span><br><span class="line">        System.out.println(<span class="string">"\n\n只在A中出现的集合： "</span>);</span><br><span class="line">        ArrayList aaa = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        aaa = diffstr(str, str1);</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; aaa.size(); i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">" "</span> + aaa.get(i) + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出AB集合并集</span></span><br><span class="line">        ArrayList bbb=gatherstr(str,str1);</span><br><span class="line">        System.out.println(<span class="string">"\n\nAB的并集为： "</span>);</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; bbb.size(); i++) &#123;</span><br><span class="line">            System.out.print(<span class="string">" "</span>+bbb.get(i)+<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建方法使用快捷键 Alt+Insert</span></span><br><span class="line">    <span class="comment">//方法一，选择法，第一次循环都和第一个比较，把最小的放在最前边</span></span><br><span class="line">    public <span class="keyword">static</span> int[] sort(int[] a) &#123;</span><br><span class="line">        int[] b=<span class="keyword">new</span> int[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (int j = i+<span class="number">1</span>; j &lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">                    int temp=a[i];</span><br><span class="line">                    a[i]=a[j];</span><br><span class="line">                    a[j]=temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法二：冒泡排序法，相邻两个进行比较，将最大的放到最后边</span></span><br><span class="line">    public <span class="keyword">static</span> int[] sort1(int[] a) &#123;</span><br><span class="line">        <span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(int j=<span class="number">0</span>;j&lt;<span class="number">10</span>-i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    int temp=a[j];</span><br><span class="line">                    a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">                    a[j+<span class="number">1</span>]=temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回集合A和集合B交集</span></span><br><span class="line">    public <span class="keyword">static</span> <span class="built_in">String</span>[] samestr(<span class="built_in">String</span>[] a,<span class="built_in">String</span>[] b) &#123;</span><br><span class="line">        <span class="built_in">String</span>[] aa=<span class="keyword">new</span> <span class="built_in">String</span>[<span class="number">20</span>];</span><br><span class="line">        int k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (int i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(int j=<span class="number">0</span>;j&lt;b.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]==b[j])&#123;</span><br><span class="line">                    aa[k]=a[i];</span><br><span class="line">                    k++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> aa;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回字符串a独有的集合</span></span><br><span class="line">    public <span class="keyword">static</span> ArrayList diffstr(<span class="built_in">String</span>[] a, <span class="built_in">String</span>[] b) &#123;</span><br><span class="line">        ArrayList aa=<span class="keyword">new</span> ArrayList();<span class="comment">//用来存储字符串a</span></span><br><span class="line">        ArrayList bb=<span class="keyword">new</span> ArrayList();<span class="comment">//用来存储字符串b</span></span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            aa.add(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; b.length; i++) &#123;</span><br><span class="line">            bb.add(b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//移除aa中包含的bb</span></span><br><span class="line">        aa.removeAll(bb);</span><br><span class="line">        <span class="keyword">return</span> aa;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回AB集合并集</span></span><br><span class="line">    public <span class="keyword">static</span> ArrayList gatherstr(<span class="built_in">String</span>[] a,<span class="built_in">String</span>[] b) &#123;</span><br><span class="line">        ArrayList aa=<span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            aa.add(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; b.length; i++) &#123;</span><br><span class="line">            aa.add(b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> aa;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java基础练习之控制台练习</title>
    <url>/2019/11/25/Java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E4%B9%8B%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="1-要求使用java编程实现一个命令窗口程序，使得实现以下功能"><a href="#1-要求使用java编程实现一个命令窗口程序，使得实现以下功能" class="headerlink" title="1.要求使用java编程实现一个命令窗口程序，使得实现以下功能"></a>1.要求使用java编程实现一个命令窗口程序，使得实现以下功能</h1><ol>
<li>输入“A”则在屏上回显“Your input is A”</li>
<li>输入”我”则在屏上回显“your input is 我”</li>
<li>输入ByeBye退出程序。<h2 id="1-1-代码实现"><a href="#1-1-代码实现" class="headerlink" title="1.1 代码实现"></a>1.1 代码实现</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***************************</span></span><br><span class="line"><span class="comment"> *  编程实现一个命令窗口程序，使得输入A,</span></span><br><span class="line"><span class="comment"> *  在屏幕上回显“your input is A”，</span></span><br><span class="line"><span class="comment"> *  输入我,在屏幕上回显“your input is 我”</span></span><br><span class="line"><span class="comment"> *  输入ByeBye结束程序</span></span><br><span class="line"><span class="comment"> *  **************************/</span></span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> A() &#123;</span><br><span class="line">    <span class="built_in">String</span> str=<span class="string">""</span>;<span class="comment">//定义一个空字符串来存储用户输入的字符</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>==<span class="number">1</span>)&#123;<span class="comment">//使用1==1死循环来循环获取控制台输入的数据。</span></span><br><span class="line">        System.out.println(<span class="string">"请输入任意字符："</span>);</span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> Scanner(System.in);<span class="comment">//创建一个新的Scanner ,控制台等待用户敲击Enter键，把所输入的内容传给Scanner</span></span><br><span class="line">        str=scanner.nextLine();<span class="comment">//获取Scanner输入的内容</span></span><br><span class="line">        <span class="comment">//当用户输入的字符串和"ByeBye"是否相等，如果相等则程序正常退出</span></span><br><span class="line">        <span class="keyword">if</span> (str.equals(<span class="string">"ByeBye"</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">"程序正常退出！"</span>);</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"your input is "</span>+str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="1-2-运行结果"><a href="#1-2-运行结果" class="headerlink" title="1.2 运行结果"></a>1.2 运行结果</h2><p><img src="https://img-blog.csdnimg.cn/20190829173205506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="2-编程实现一个命令窗口程序，要求实现以下功能："><a href="#2-编程实现一个命令窗口程序，要求实现以下功能：" class="headerlink" title="2.编程实现一个命令窗口程序，要求实现以下功能："></a>2.编程实现一个命令窗口程序，要求实现以下功能：</h1><ol>
<li>输入“A”则在屏上回显A字符的ASCII码。</li>
<li>输入“4”则在屏上回显4字符的ASCII码。</li>
<li>输入“我”则在屏上回显“我”字的汉字内码。</li>
<li>输入ByeBye结束程序<h2 id="2-1-代码实现"><a href="#2-1-代码实现" class="headerlink" title="2.1 代码实现"></a>2.1 代码实现</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***************************</span></span><br><span class="line"><span class="comment"> * 编程实现一个命令窗口程序，使得输入A,则在屏上回显 A 字符的 ASCII 码。</span></span><br><span class="line"><span class="comment"> * 输入“4”则在屏上回显 4 字符的 ASCII 码。</span></span><br><span class="line"><span class="comment"> * 输入“我”则在屏上回显“我”字的汉字内码</span></span><br><span class="line"><span class="comment"> * 输入 ByeBye 则退出程序.</span></span><br><span class="line"><span class="comment"> * **************************/</span></span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> B() &#123;</span><br><span class="line">    <span class="built_in">String</span> str=<span class="string">""</span>;<span class="comment">//定义一个空字符串来存储用户输入的字符</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;<span class="comment">//使用true死循环来循环获取控制台输入的数据。</span></span><br><span class="line">        System.out.println(<span class="string">"请输入任意字符："</span>);</span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> Scanner(System.in);<span class="comment">//创建一个新的Scanner ,控制台等待用户敲击Enter键，把所输入的内容传给Scanner</span></span><br><span class="line">        str=scanner.nextLine();<span class="comment">//获取Scanner输入的内容</span></span><br><span class="line">        char[] a=str.toCharArray();<span class="comment">//将字符串对象中的字符转换为一个字符数组</span></span><br><span class="line">        <span class="comment">//当用户输入的字符串和"ByeBye"是否相等，如果相等则程序正常退出</span></span><br><span class="line">        <span class="keyword">if</span> (str.equals(<span class="string">"ByeBye"</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">"程序正常退出！"</span>);</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">"the ASCII of "</span>+a[i]+<span class="string">" is:"</span>+Integer.valueOf(a[i]));<span class="comment">//将字符转换成对应的ASCII码</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-2-运行结果"><a href="#2-2-运行结果" class="headerlink" title="2.2 运行结果"></a>2.2 运行结果</h2><img src="https://img-blog.csdnimg.cn/20190829173244647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h1 id="3-编程实现一个命令窗口程序，使得："><a href="#3-编程实现一个命令窗口程序，使得：" class="headerlink" title="3.编程实现一个命令窗口程序，使得："></a>3.编程实现一个命令窗口程序，使得：</h1></li>
<li>输入“你”,则在屏上回显“you”</li>
<li>输入“书”,则在屏上回显“book”</li>
<li>输入“中”,则在屏上回显“middle”</li>
<li>输入“中国”,则在屏上回显“China”</li>
<li>要求至少100个单词。如果没有记录的词则如下所示：</li>
<li>输入“东东”,则在屏上回显“查不到该词”</li>
<li>输入ByeBye结束程序。<h2 id="3-1-代码实现"><a href="#3-1-代码实现" class="headerlink" title="3.1 代码实现"></a>3.1 代码实现</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*************************</span></span><br><span class="line"><span class="comment"> * 编程实现一个命令窗程序，使得：输入“你”则在屏上回显“you”。</span></span><br><span class="line"><span class="comment"> * 输入“书”则在屏上回显“book”。</span></span><br><span class="line"><span class="comment"> * 输入“中”则在屏上回显“middle”。</span></span><br><span class="line"><span class="comment"> * 输入“中国”则在屏上回显“China”。</span></span><br><span class="line"><span class="comment"> * 要能输入至少 100 个词。如输入没有记录的词则如下：</span></span><br><span class="line"><span class="comment"> * 输入“东东”则在屏上回显“查不到该词”。</span></span><br><span class="line"><span class="comment"> * 输入 ByeBye 则退出程序.</span></span><br><span class="line"><span class="comment"> * *************************/</span></span><br><span class="line">public <span class="keyword">static</span> <span class="keyword">void</span> C() &#123;</span><br><span class="line">    <span class="built_in">String</span> strname=<span class="string">"C:\\Users\\kingback\\Desktop\\龙华老师资料\\下放资料\\dic.txt"</span>;</span><br><span class="line">    <span class="comment">//定义txt文本位置</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="comment">//创建try catch快捷键，选中代码块，Ctrl+Alt+T</span></span><br><span class="line">        BufferedReader br= <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//为FileReader创建一个try catch,捕获错误。</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileReader reader=<span class="keyword">new</span> FileReader(strname);<span class="comment">//创建一个FileReader，用来读取txt文件</span></span><br><span class="line">            br = <span class="keyword">new</span> BufferedReader(reader);<span class="comment">//从字符输入流中读取文本</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> Scanner(System.in);<span class="comment">//定义一个Scanner实例</span></span><br><span class="line">        System.out.println(<span class="string">"请输入要查询的单词："</span>);</span><br><span class="line">        <span class="built_in">String</span> str=scanner.nextLine();<span class="comment">//获取用户输入的数据</span></span><br><span class="line">        <span class="built_in">String</span> line;<span class="comment">//用来接收文本文件中每一行的数据</span></span><br><span class="line">        boolean match=<span class="literal">false</span>;<span class="comment">//表示是否查询到对应的词汇</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果输入ByeBye结束程序</span></span><br><span class="line">        <span class="keyword">if</span>(str.equals(<span class="string">"ByeBye"</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">"程序正常退出！"</span>);</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//为br.readline()捕获异常</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> ((line=br.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="built_in">String</span>[] aa=line.split(<span class="string">"\t"</span>);<span class="comment">//以\t拆分字符串</span></span><br><span class="line">                <span class="keyword">if</span>(aa[<span class="number">0</span>].equals(str))&#123;<span class="comment">//判断输入的字符串是否存在</span></span><br><span class="line">                    System.out.println(<span class="string">"the result is :"</span>+aa[<span class="number">1</span>]);<span class="comment">//输出查询到的英语单词</span></span><br><span class="line">                    match=<span class="literal">true</span>;<span class="comment">//修改查询状态</span></span><br><span class="line">                    <span class="keyword">break</span>;<span class="comment">//跳出此次循环</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果没有查询到数据执行此步骤</span></span><br><span class="line">            <span class="keyword">if</span>(!match)&#123;</span><br><span class="line">                System.out.println(<span class="string">"查不到该词！！！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-2-运行结果"><a href="#3-2-运行结果" class="headerlink" title="3.2 运行结果"></a>3.2 运行结果</h2><img src="https://img-blog.csdnimg.cn/20190829173311849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h1 id="4-整体代码"><a href="#4-整体代码" class="headerlink" title="4.整体代码"></a>4.整体代码</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">	package main.java.demo;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;<span class="comment">//把Scanner类导入到程序中</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;<span class="comment">//将io包全部导入</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> * User: kingback</span></span><br><span class="line"><span class="comment"> * Author:king@王延凯</span></span><br><span class="line"><span class="comment"> * Date: 2019/4/16</span></span><br><span class="line"><span class="comment"> * Time: 23:38</span></span><br><span class="line"><span class="comment"> * Description: No Description</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">practice01</span> </span>&#123;</span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line">        <span class="comment">//行注释Ctrl+/、块注释Ctrl+Shift+/</span></span><br><span class="line">        <span class="comment">//A();//调用A程序</span></span><br><span class="line">        <span class="comment">//B();//调用B程序</span></span><br><span class="line">        C();<span class="comment">//调用C程序</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/***************************</span></span><br><span class="line"><span class="comment">     *  编程实现一个命令窗口程序，使得输入A,</span></span><br><span class="line"><span class="comment">     *  在屏幕上回显“your input is A”，</span></span><br><span class="line"><span class="comment">     *  输入我,在屏幕上回显“your input is 我”</span></span><br><span class="line"><span class="comment">     *  输入ByeBye结束程序</span></span><br><span class="line"><span class="comment">     *  **************************/</span></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> A() &#123;</span><br><span class="line">        <span class="built_in">String</span> str=<span class="string">""</span>;<span class="comment">//定义一个空字符串来存储用户输入的字符</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>==<span class="number">1</span>)&#123;<span class="comment">//使用1==1死循环来循环获取控制台输入的数据。</span></span><br><span class="line">            System.out.println(<span class="string">"请输入任意字符："</span>);</span><br><span class="line">            Scanner scanner=<span class="keyword">new</span> Scanner(System.in);<span class="comment">//创建一个新的Scanner ,控制台等待用户敲击Enter键，把所输入的内容传给Scanner</span></span><br><span class="line">            str=scanner.nextLine();<span class="comment">//获取Scanner输入的内容</span></span><br><span class="line">            <span class="comment">//当用户输入的字符串和"ByeBye"是否相等，如果相等则程序正常退出</span></span><br><span class="line">            <span class="keyword">if</span> (str.equals(<span class="string">"ByeBye"</span>))&#123;</span><br><span class="line">                System.out.println(<span class="string">"程序正常退出！"</span>);</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"your input is "</span>+str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***************************</span></span><br><span class="line"><span class="comment">     * 编程实现一个命令窗口程序，使得输入A,则在屏上回显 A 字符的 ASCII 码。</span></span><br><span class="line"><span class="comment">     * 输入“4”则在屏上回显 4 字符的 ASCII 码。</span></span><br><span class="line"><span class="comment">     * 输入“我”则在屏上回显“我”字的汉字内码</span></span><br><span class="line"><span class="comment">     * 输入 ByeBye 则退出程序.</span></span><br><span class="line"><span class="comment">     * **************************/</span></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> B() &#123;</span><br><span class="line">        <span class="built_in">String</span> str=<span class="string">""</span>;<span class="comment">//定义一个空字符串来存储用户输入的字符</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;<span class="comment">//使用true死循环来循环获取控制台输入的数据。</span></span><br><span class="line">            System.out.println(<span class="string">"请输入任意字符："</span>);</span><br><span class="line">            Scanner scanner=<span class="keyword">new</span> Scanner(System.in);<span class="comment">//创建一个新的Scanner ,控制台等待用户敲击Enter键，把所输入的内容传给Scanner</span></span><br><span class="line">            str=scanner.nextLine();<span class="comment">//获取Scanner输入的内容</span></span><br><span class="line">            char[] a=str.toCharArray();<span class="comment">//将字符串对象中的字符转换为一个字符数组</span></span><br><span class="line">            <span class="comment">//当用户输入的字符串和"ByeBye"是否相等，如果相等则程序正常退出</span></span><br><span class="line">            <span class="keyword">if</span> (str.equals(<span class="string">"ByeBye"</span>))&#123;</span><br><span class="line">                System.out.println(<span class="string">"程序正常退出！"</span>);</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"the ASCII of "</span>+a[i]+<span class="string">" is:"</span>+Integer.valueOf(a[i]));<span class="comment">//将字符转换成对应的ASCII码</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*************************</span></span><br><span class="line"><span class="comment">     * 编程实现一个命令窗程序，使得：输入“你”则在屏上回显“you”。</span></span><br><span class="line"><span class="comment">     * 输入“书”则在屏上回显“book”。</span></span><br><span class="line"><span class="comment">     * 输入“中”则在屏上回显“middle”。</span></span><br><span class="line"><span class="comment">     * 输入“中国”则在屏上回显“China”。</span></span><br><span class="line"><span class="comment">     * 要能输入至少 100 个词。如输入没有记录的词则如下：</span></span><br><span class="line"><span class="comment">     * 输入“东东”则在屏上回显“查不到该词”。</span></span><br><span class="line"><span class="comment">     * 输入 ByeBye 则退出程序.</span></span><br><span class="line"><span class="comment">     * *************************/</span></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> C() &#123;</span><br><span class="line">        <span class="built_in">String</span> strname=<span class="string">"C:\\Users\\kingback\\Desktop\\龙华老师资料\\下放资料\\dic.txt"</span>;</span><br><span class="line">        <span class="comment">//定义txt文本位置</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">//创建try catch快捷键，选中代码块，Ctrl+Alt+T</span></span><br><span class="line">            BufferedReader br= <span class="literal">null</span>;</span><br><span class="line">            <span class="comment">//为FileReader创建一个try catch,捕获错误。</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                FileReader reader=<span class="keyword">new</span> FileReader(strname);<span class="comment">//创建一个FileReader，用来读取txt文件</span></span><br><span class="line">                br = <span class="keyword">new</span> BufferedReader(reader);<span class="comment">//从字符输入流中读取文本</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            Scanner scanner=<span class="keyword">new</span> Scanner(System.in);<span class="comment">//定义一个Scanner实例</span></span><br><span class="line">            System.out.println(<span class="string">"请输入要查询的单词："</span>);</span><br><span class="line">            <span class="built_in">String</span> str=scanner.nextLine();<span class="comment">//获取用户输入的数据</span></span><br><span class="line">            <span class="built_in">String</span> line;<span class="comment">//用来接收文本文件中每一行的数据</span></span><br><span class="line">            boolean match=<span class="literal">false</span>;<span class="comment">//表示是否查询到对应的词汇</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//如果输入ByeBye结束程序</span></span><br><span class="line">            <span class="keyword">if</span>(str.equals(<span class="string">"ByeBye"</span>))&#123;</span><br><span class="line">                System.out.println(<span class="string">"程序正常退出！"</span>);</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//为br.readline()捕获异常</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> ((line=br.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="built_in">String</span>[] aa=line.split(<span class="string">"\t"</span>);<span class="comment">//以\t拆分字符串</span></span><br><span class="line">                    <span class="keyword">if</span>(aa[<span class="number">0</span>].equals(str))&#123;<span class="comment">//判断输入的字符串是否存在</span></span><br><span class="line">                        System.out.println(<span class="string">"the result is :"</span>+aa[<span class="number">1</span>]);<span class="comment">//输出查询到的英语单词</span></span><br><span class="line">                        match=<span class="literal">true</span>;<span class="comment">//修改查询状态</span></span><br><span class="line">                        <span class="keyword">break</span>;<span class="comment">//跳出此次循环</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//如果没有查询到数据执行此步骤</span></span><br><span class="line">                <span class="keyword">if</span>(!match)&#123;</span><br><span class="line">                    System.out.println(<span class="string">"查不到该词！！！"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java基础练习--数据流操作</title>
    <url>/2019/11/25/java%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0--%E6%95%B0%E6%8D%AE%E6%B5%81%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="使用Java实现一个程序，输出windows的全部汉字到一个文件中（提示：通过汉字内码，做循环来实现。）"><a href="#使用Java实现一个程序，输出windows的全部汉字到一个文件中（提示：通过汉字内码，做循环来实现。）" class="headerlink" title="使用Java实现一个程序，输出windows的全部汉字到一个文件中（提示：通过汉字内码，做循环来实现。）"></a>使用Java实现一个程序，输出windows的全部汉字到一个文件中（提示：通过汉字内码，做循环来实现。）</h1><p>在这里我为了实现该功能我封装了一个方法，名字为print_word方法，当我们要实现该功能时，我们只需要在main函数中调用该方法，其调用方法如下所示：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">      //调用汉字输出方法</span><br><span class="line">      print_word();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><br>另外接下来就是来展示一下print_word方法：</p>
<h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">***************************</span><br><span class="line">用Java实现一程序，输出windows系统中的全部汉字到一个文件中。</span><br><span class="line">提示：（通过汉字内码实现）</span><br><span class="line">***************************<span class="regexp">/</span></span><br><span class="line"><span class="regexp">public static void print_word() &#123;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/快捷键Alt+Insert 建立方法</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ctrl+alt+T 为选中的代码块添加try catch，用于捕捉异常</span></span><br><span class="line"><span class="regexp">    try &#123;</span></span><br><span class="line"><span class="regexp">        File file=new File("words.txt");/</span><span class="regexp">/创建文件对象</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/if语句用来判断该路径下是否存在该文件</span></span><br><span class="line"><span class="regexp">        if(!file.exists())&#123;</span></span><br><span class="line"><span class="regexp">            file.createNewFile();/</span><span class="regexp">/如果不存在该文件，则会在该路径下创建该文件</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        FileWriter fileWriter=new FileWriter("words.txt");/</span><span class="regexp">/实例化FileWriter</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/经过查询得知汉字码的范围为4e00-9fa5</span></span><br><span class="line"><span class="regexp">        String start="4e00";</span></span><br><span class="line"><span class="regexp">        String end="9fa5";</span></span><br><span class="line"><span class="regexp">        int s=Integer.parseInt(start,16);/</span><span class="regexp">/将16进制的4e00转换为10进制</span></span><br><span class="line"><span class="regexp">        int e=Integer.parseInt(end,16);/</span><span class="regexp">/将16进制的9fa5转换为10进制</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/通过for循环输出汉字</span></span><br><span class="line"><span class="regexp">        for (int i = s; i &lt;e; i++) &#123;</span></span><br><span class="line"><span class="regexp">            String str=(char)i+" ";/</span><span class="regexp">/强制类型转换</span></span><br><span class="line"><span class="regexp">            fileWriter.write(str);/</span><span class="regexp">/将str对应字符写入words.txt</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        System.out.println("汉字已经全部输出完毕！！！");/</span><span class="regexp">/输出完毕验证</span></span><br><span class="line"><span class="regexp">        fileWriter.flush();/</span><span class="regexp">/通过flush实现批量输出</span></span><br><span class="line"><span class="regexp">        fileWriter.close();/</span><span class="regexp">/关闭流</span></span><br><span class="line"><span class="regexp">    &#125; catch (IOException e1) &#123;/</span><span class="regexp">/当try代码块发生错误时，则会跳转到catch代码块</span></span><br><span class="line"><span class="regexp">        e1.printStackTrace();/</span><span class="regexp">/打印错误原因以及错误发生位置</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="运行结果截图"><a href="#运行结果截图" class="headerlink" title="运行结果截图"></a>运行结果截图</h2><p><img src="https://img-blog.csdnimg.cn/20190829210458606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>好了，做到这里，对于Java的数据流的基本操作已经完成的差不多了，当然如果想要其它方法的话，可以在后续的编程练习中继续积累。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Selenium+Webdriver爬取Google硬币图片</title>
    <url>/2019/11/25/Selenium+Webdriver%E7%88%AC%E5%8F%96Google%E7%A1%AC%E5%B8%81%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h1 id="1-需求目的"><a href="#1-需求目的" class="headerlink" title="1.需求目的"></a>1.需求目的</h1><p>$\qquad$在做本科毕业设计的时候，女朋友选的课题时对于不同国家硬币的识别，这无疑将会用到深度学习以及机器学习的理论和方法来进行识别。但是前提是必须先拿一些样本数据在神经网络中进行训练，而每个币种也都需要三四百左右有效图片（就是那种含有用用信息的图片），这可当时愁坏了女朋友，我不忍心看她发愁，于是就揽下了图片资料的搜集这一部分的任务。</p>
<h1 id="2-爬取原理"><a href="#2-爬取原理" class="headerlink" title="2.爬取原理"></a>2.爬取原理</h1><p>$\qquad$由于此次我们的爬取对象为Google浏览器，所以我就默认大家已经可以成功翻墙。如果大家还是翻不了，可以私聊找我，免费分享资料。<br>$\qquad$接下来我来介绍一下Selenium，Selenium它是一个用于Web应用程序自动化测试工具。它可以直接运行在浏览器中，就像真正的用户在操作一样。可以在受程序控制的窗口，让程序来模拟人的点击、下拉、输入、选择等操作，从而得到我们想要的数据。<br>$\qquad$selenium支持的浏览器包括IE（7, 8, 9, 10, 11），Mozilla Firefox，Safari，Google Chrome，Opera等。此次实验我使用的浏览器为Chrome浏览器。<br>$\qquad$Webdriver在我理解看来，它是一个可以产生一个受程序控制的浏览器模拟器，如果我们使用selenium+webdriver组合来爬取信息的话，那么我们所有的活动都是发生在这个模拟器之中的。<br>在此处我就先不展示微Webdriver的安装教程，如果后边有时间，我会尽力量将这个教程补全。</p>
<h1 id="3-代码介绍"><a href="#3-代码介绍" class="headerlink" title="3.代码介绍"></a>3.代码介绍</h1><p>$\qquad$在程序中，我是定义了几个函数来分别实现获取图片的下载地址get_str()、重命名图片的名称rename()、以及图片的下载download()函数<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># @Time : 2019/5/5 0:22 </span><br><span class="line"># @Author : kingback</span><br><span class="line"># @File : pics_USA.py </span><br><span class="line"># @Software: PyCharm</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">##################################################################</span><br><span class="line">##    以下开始定义函数</span><br><span class="line">##    首先一点需要明确，如果函数只是定义了，</span><br><span class="line">##    而没有被调用，它是不会执行的</span><br><span class="line">##################################################################</span><br><span class="line"></span><br><span class="line">##该函数主要实现抓取网页内容的解析工作</span><br><span class="line">##获取当前页面硬币图片的下载地址</span><br><span class="line">def  get_str(driver):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            driver.find_element_by_id(<span class="string">"irc-rac"</span>).click()</span><br><span class="line">            ##模拟用户点击网页右边的下一个</span><br><span class="line">        except:</span><br><span class="line">            driver.find_element_by_xpath(<span class="string">"//*[@id='irc-rac']/a"</span>).click()</span><br><span class="line">    except:</span><br><span class="line">        driver.find_element_by_class_name(<span class="string">"Q8Bv4e"</span>).click()</span><br><span class="line">        driver.find_element_by_css_selector(<span class="string">"div#irc-lac &gt; a"</span>).click()</span><br><span class="line"></span><br><span class="line">    ##上边的try except都是模拟点击下一个的，因为有时候单纯的使用id来寻找那个下一个控件的时候网页有时候会搜索不到</span><br><span class="line">    ## 当id搜索不到的时候，就会采用xpath来定位这个空间</span><br><span class="line">    ##如果还是不行，那就再通过class_name来定位，如果还是不行那就通过css选择器来定位</span><br><span class="line">    ##一般来说通过id来定位就直接可以</span><br><span class="line"></span><br><span class="line">    # 使用xpath解析网页中硬币图片的下载地址，可以看出这只是摘取网页该路径下的内容，也就是网页下包含硬币图片的img字段</span><br><span class="line">    img = driver.find_element_by_xpath(<span class="string">"//*[@id='irc_cc']/div[2]/div[1]/div[2]/div[1]/a/img"</span>)</span><br><span class="line">    # 因为字段中含有很多属性，经过chrome（）的开发者模式发现该图片的下载地址存储在src属性里边</span><br><span class="line">    img_url = img.get_attribute(<span class="string">"src"</span>)</span><br><span class="line">    ##提取src属性数据</span><br><span class="line">    <span class="keyword">return</span> img_url</span><br><span class="line">    ##返回网页解析出来的图片下载地址</span><br><span class="line"></span><br><span class="line">##该函数主要实现</span><br><span class="line">##传入的两个参数一个为file，是当前爬取图片的种类，比如‘一欧元’</span><br><span class="line">##img_url 为图片的下载地址</span><br><span class="line">##返回初步处理的文件名 例如‘一欧元/0322.jpg.jpg’或‘一欧元/0566.jpg’或‘一欧元/58777.jpg.wddcvcrrcc.jpg’</span><br><span class="line">##总之返回数据多样,我们将会在rename函数中规范处理文件名称</span><br><span class="line">def get_fileneme(file,img_url):</span><br><span class="line"></span><br><span class="line">    lists = re.split(r<span class="string">'/'</span>, img_url)</span><br><span class="line">    #将img_url 字符串按照‘/’拆分为数组lists</span><br><span class="line">    ## lists数组的倒数第一个（在数组中表现形式为-1）数据即为我们需要的文件名称，但是此处得到的图片命名格式不规范</span><br><span class="line">    filename=os.path.join(file,lists[<span class="number">-1</span>])</span><br><span class="line">    #考虑到有些图片的网页下载地址最后几位不是‘.jpg’结尾，于是我们在其文件名称上都手动加上‘.jpg’</span><br><span class="line">    filename = filename + <span class="string">".jpg"</span></span><br><span class="line">    ## 返回初步处理得到的文件名称</span><br><span class="line">    <span class="keyword">return</span> filename</span><br><span class="line"></span><br><span class="line">##再次处理已经拆分出来的图片名字，将一些命名不规范的图片统一规范</span><br><span class="line">def rename(filename):</span><br><span class="line">    ## 由于我们通过函数get_filename()得到的文件名称不规范</span><br><span class="line">    lists = re.split(r<span class="string">'.jpg'</span>, filename)</span><br><span class="line">    ##使用re库对传入的filename按照‘.jpg’拆分</span><br><span class="line">    ##比如‘一欧元/0322.jpg.jpg’ 拆分完后lists[0]内就是我们需要的规范文件名，为‘一欧元/0322’</span><br><span class="line">    filename_reshape = lists[<span class="number">0</span>] + <span class="string">".jpg"</span></span><br><span class="line">    ##再对已经处理好的文件名进行字符串拼接，此时的文件名为 ‘一欧元/0322.jpg’</span><br><span class="line">    <span class="keyword">return</span> filename_reshape</span><br><span class="line">    ##返回规范的图片保存名字</span><br><span class="line"></span><br><span class="line">##创建文件夹操作，fileame为要创建的文件夹的名字</span><br><span class="line">def mkdir(filename):</span><br><span class="line">    #判断该文件夹是否存在</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename) is False:</span><br><span class="line">        ##如果不存在那就创建该文件夹</span><br><span class="line">        os.makedirs(filename)</span><br><span class="line"></span><br><span class="line">##该函数主要实现图片地址的下载，需要传入两个参数</span><br><span class="line">##url为要下载图片的网络连接地址，filename为图片要保存为的名字（规范版）</span><br><span class="line">##该程序执行会返回两个结果，如果要下载的文件已经存在，那么直接返回‘file exites!’</span><br><span class="line">##如果图片下载成功，直接返回图片的名字</span><br><span class="line">def download(url, filename):</span><br><span class="line"></span><br><span class="line">    #首先要对需要下载的图片进行查询</span><br><span class="line">    #如果文件已经存在，直接返回result,不再继续往下执行</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">        result=<span class="string">"file exists!"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    ##以下执行部分执行，则说明该文件不存在</span><br><span class="line">    #以下大可不必管，就是一个图片保存操作</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, stream=True, timeout=<span class="number">15</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content(chunk_size=<span class="number">1024</span>):</span><br><span class="line">                if chunk:  # filter out keep-alive new chunks</span><br><span class="line">                    f.write(chunk)</span><br><span class="line">                    f.flush()</span><br><span class="line">        <span class="keyword">return</span> filename</span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">            <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">                os.remove(filename)</span><br><span class="line">            raise KeyboardInterrupt</span><br><span class="line">    except Exception:</span><br><span class="line">            <span class="keyword">if</span> os.path.exists(filename):</span><br><span class="line">                os.remove(filename)</span><br></pre></td></tr></table></figure><br>$\qquad$以上的代码部分都是一些为实现整体的爬取过程而定义的几个小函数，接下来引出今天的大Boss,那就是我们的main函数：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">##该函数为程序执行的主体部分，通过调用不同的函数来实现我们的数据爬取</span><br><span class="line">def main():</span><br><span class="line">    #开始驱动浏览器打开页面</span><br><span class="line">    # 程序开始</span><br><span class="line">    #使用webdriver创建一个Chrome浏览器，受程序控制</span><br><span class="line">    driver = webdriver.Chrome()</span><br><span class="line">    driver.maximize_window()</span><br><span class="line">    ##设置浏览器界面最大化</span><br><span class="line"></span><br><span class="line">    ##定义要爬取的网页地址</span><br><span class="line">    start_urls=[<span class="string">'https://www.google.com.hk/search?q=One+cent+picture&amp;tbm=isch&amp;source=hp&amp;sa=X&amp;ved=2ahUKEwiToZvMooLiAhXmslQKHUqjDJwQsAR6BAgJEAE&amp;biw=1536&amp;bih=498&amp;dpr=1.25#imgrc=n64_jLKJUBJDuM:'</span>,</span><br><span class="line">                <span class="string">'https://www.google.com.hk/search?q=5+cent+picture&amp;tbm=isch&amp;source=univ&amp;sa=X&amp;ved=2ahUKEwiUqdP_sILiAhUVpJ4KHc4WBo0QsAR6BAgHEAE&amp;biw=1536&amp;bih=498#imgrc=4nPkDSV6jzmtPM:'</span>,</span><br><span class="line">                <span class="string">'https://www.google.com.hk/search?q=10+cent+picture&amp;tbm=isch&amp;source=univ&amp;sa=X&amp;ved=2ahUKEwid7MzHrYLiAhUPsZ4KHV_pB-wQsAR6BAgJEAE&amp;biw=1536&amp;bih=498#imgrc=tSuhZO5ob26USM:'</span>,</span><br><span class="line">                <span class="string">'https://www.google.com.hk/search?biw=1536&amp;bih=498&amp;tbm=isch&amp;sa=1&amp;ei=rcvNXLOiLJf7-gT325fADA&amp;q=25+cent+picture&amp;oq=25+cent+picture#imgrc=SPdU2SyxQ6tyNM:'</span>,</span><br><span class="line">                <span class="string">'https://www.google.com/search?biw=1536&amp;bih=498&amp;tbm=isch&amp;sa=1&amp;ei=27rPXISNAc-U-gSw8bKIBw&amp;q=1+dollar+coin&amp;oq=1+dollar+coin&amp;gs_l=img.3..0j0i67j0l8.1880.3046..4526...0.0..0.1243.3240.2-1j2j7-2......0....1..gws-wiz-img.HZop3grZwiA#imgrc=sQ7fSoquvqlbQM:'</span>,</span><br><span class="line">                <span class="string">'https://www.google.com/search?q=1+pound+coin&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=0ahUKEwjopoOy3oXiAhUMup4KHd4zAoQQ_AUIDigB&amp;biw=1366&amp;bih=656#imgrc=Cmk0QjVR04jZ8M:'</span>,</span><br><span class="line">                <span class="string">'https://www.google.com/search?q=1+euro+coins+pictures&amp;tbm=isch&amp;tbs=rimg:CUjCBQXqwMc1IjjLWV147TNxfsot4jFYTW-D-ZdMNwIH9RAPN4NbTVGbT2WIEN4N0zHChVTYC_1PLBmu4i8IjJ-HTzyoSCctZXXjtM3F-EdESbyfDkBffKhIJyi3iMVhNb4MRsM09YsukhJUqEgn5l0w3Agf1EBFIOTsFSko0GioSCQ83g1tNUZtPEQTD6K2VqDMHKhIJZYgQ3g3TMcIRBMPorZWoMwcqEgmFVNgL88sGaxFFsZNELmkR8SoSCbiLwiMn4dPPEXrc3fEvwxkL&amp;tbo=u&amp;sa=X&amp;ved=2ahUKEwisss7e4YXiAhVPvZ4KHcg0DRgQ9C96BAgBEBg&amp;biw=1366&amp;bih=656&amp;dpr=1#imgrc=SMIFBerAxzVhMM:'</span>]</span><br><span class="line">    ##每个地址所对应的硬币种类</span><br><span class="line">    files=[<span class="string">'一美分'</span>,<span class="string">'五美分'</span>,<span class="string">'十美分'</span>,<span class="string">'二十五美分'</span>,<span class="string">'一美元'</span>,<span class="string">'一英镑'</span>,<span class="string">'一欧元'</span>]</span><br><span class="line">    #每个种类的硬币要爬取的数量</span><br><span class="line">    nums=[<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">200</span>]</span><br><span class="line">    #开始对这些网页一个一个的爬取,for循环次数为start_urls内网页的个数</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(start_urls)):</span><br><span class="line">        driver.get(start_urls[i])</span><br><span class="line">        ##模拟浏览器开始自动访问第一个网址</span><br><span class="line">        sleep(<span class="number">6</span>)</span><br><span class="line">        ##设置时间等待，以确保页面加载完毕</span><br><span class="line">        print(<span class="string">"********************       当前爬取:"</span>, files[i], <span class="string">"     *******************************\n\n"</span>)</span><br><span class="line">        number=<span class="number">1</span></span><br><span class="line">        #定义一个number变量来计数已经成功爬取的图片个数</span><br><span class="line">        #在当前路径下创建文件夹，比如创建‘一美分’</span><br><span class="line">        mkdir(files[i])</span><br><span class="line">        #当已经爬取的图片个数大于要爬取的图片个数的时候，停止执行该步骤</span><br><span class="line">        <span class="keyword">while</span> (number&lt;nums[i]):</span><br><span class="line">            #调用get_str函数获取硬币图片的下载地址</span><br><span class="line">            img_url=get_str(driver)</span><br><span class="line">            print(<span class="string">"img_url"</span>,img_url)</span><br><span class="line">            ##如果没有得到地址，输出网络不好</span><br><span class="line">            <span class="keyword">if</span>(img_url==None):</span><br><span class="line">                print(<span class="string">"当前网络状况不好！！！"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            # 定义图片名称</span><br><span class="line">            filename=get_fileneme(files[i],img_url)         #未规范版</span><br><span class="line">            filename = rename(filename)                     #规范版</span><br><span class="line">            # 保存图片</span><br><span class="line">            aaa=download(img_url, filename)</span><br><span class="line">            ##定义一个变量aaa来接收download的返回结果，如果返回为file exits则说明文件已存在，此时number不加1</span><br><span class="line">            ##如果返回结果为filename,则说明成功保存图片，此时number+1</span><br><span class="line">            <span class="keyword">if</span> (aaa == <span class="string">"file exists!"</span>):</span><br><span class="line">                print(<span class="string">"file exists!"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            elif(aaa==filename):</span><br><span class="line">                print(<span class="string">"图片存储路径： "</span>, aaa)</span><br><span class="line">                # sleep(0.5)</span><br><span class="line">                number+=<span class="number">1</span></span><br><span class="line">        ##以下都是一些输出格式</span><br><span class="line">        print(<span class="string">"***********************    爬取"</span>, files[i], <span class="string">"完毕!!!     *****************************"</span>)</span><br><span class="line">        <span class="keyword">if</span>(i&lt;=len(nums)):</span><br><span class="line">            print(<span class="string">"*****                      下一步爬取:"</span>,files[i+<span class="number">1</span>],<span class="string">"                             *****"</span>)</span><br><span class="line">            print(<span class="string">"***********************     当前爬取进度"</span>,<span class="string">'%d / %d'</span> % (i+<span class="number">1</span>, len(nums)),<span class="string">"      *****************************\n\n"</span>)</span><br><span class="line">        sleep(<span class="number">3</span>)</span><br><span class="line">    print(<span class="string">"\n\n**********************     全部数据爬取完毕！！！      ****************************"</span>)</span><br><span class="line"></span><br><span class="line">    driver.quit()  # 关闭浏览器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##############################################################</span><br><span class="line">####            自定义函数结束，以上函数如果不被调用</span><br><span class="line">####            其本身是不会执行的。</span><br><span class="line">##############################################################</span><br></pre></td></tr></table></figure><br>$\qquad$其实当我们执行完之后，发现程序并没有真正的开始，那是因为，我们虽然定义了一个名叫main的函数，但是计算机不知道这个函数就是整个程序的入口，所以我们要想激活这个main函数，还需对其进行声明一下;<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">##真正的开始执行</span><br><span class="line">##在前边定义的函数中选择 def main()这个函数</span><br><span class="line">##并且执行该函数内的操作</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><br>$\qquad$当这些我们都准备好了之后，我们就可以运行该程序了，运行之后，接下来就是静待图片慢慢爬取完毕了。<br>虽然到这里程序已经可以完整的跑起来了，但是有个地方我还是忍不住，想要说几句;<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">##每个地址所对应的硬币种类</span><br><span class="line">   files=[<span class="string">'一美分'</span>,<span class="string">'五美分'</span>,<span class="string">'十美分'</span>,<span class="string">'二十五美分'</span>,<span class="string">'一美元'</span>,<span class="string">'一英镑'</span>,<span class="string">'一欧元'</span>]</span><br><span class="line">   #每个种类的硬币要爬取的数量</span><br><span class="line">   nums=[<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">1000</span>,<span class="number">200</span>]</span><br><span class="line">   #开始对这些网页一个一个的爬取,for循环次数为start_urls内网页的个数</span><br></pre></td></tr></table></figure><br>$\qquad$那就是这里，可以看的出来我们这次需要爬取的硬币的种类，对于第二个数组nums，我是用来定义每种硬币所要爬取的图片个数，例如这里的一欧元图片我们就只需要200张，而其它的则需要1000张。</p>
<h1 id="4-运行结果"><a href="#4-运行结果" class="headerlink" title="4.运行结果"></a>4.运行结果</h1><p><img src="https://img-blog.csdnimg.cn/20190830210336520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190830210407798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$其它国家硬币的截图我就不再一一展示，如果有需要的可以私聊我，我看到后定会回复。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>scrapy爬取昆工信自院导师信息</title>
    <url>/2019/11/25/scrapy%E7%88%AC%E5%8F%96%E6%98%86%E5%B7%A5%E4%BF%A1%E8%87%AA%E9%99%A2%E5%AF%BC%E5%B8%88%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<h1 id="1-爬取目的"><a href="#1-爬取目的" class="headerlink" title="1.爬取目的"></a>1.爬取目的</h1><p>$\qquad$关于昆明理工大学研究生导师信息的收集是因为昆工学校的官网经常不定时关闭，导致一些学生想要查看一些老师的信息，结果却查看不到。正好我的一位同学也刚好想要搜集老师的相关信息。这些信息都在这个学院的官网上放着，<a href="http://xzy.kmust.edu.cn/MHWZ/MHWQTGL/jslist.do?ywlbdm=001&amp;lmlxdm=02&amp;lmlbdm=0205&amp;zc=05" target="_blank" rel="noopener">http://xzy.kmust.edu.cn/MHWZ/MHWQTGL/jslist.do?ywlbdm=001&amp;lmlxdm=02&amp;lmlbdm=0205&amp;zc=05</a>但是当他看到有一百多位老师的时候，想必谁都会犯怵吧<br>于是，就想着能不能写一个程序将这些信息全部收集起来呢。</p>
<h1 id="2-技术可行性"><a href="#2-技术可行性" class="headerlink" title="2.技术可行性"></a>2.技术可行性</h1><p>$\qquad$现如今随着网络技术的发展，以及数据量的急剧增大，就萌生了一种新的技术，称之为爬虫。我所了解到的很多从事大数据行业的以及做数据分析的从业者，都有需要进行爬虫的需求。这也就使得这项爬虫技术很快的发展，正好在此处也为我们的此次“偷懒”提供了可能。</p>
<h1 id="3-scrapy爬虫"><a href="#3-scrapy爬虫" class="headerlink" title="3.scrapy爬虫"></a>3.scrapy爬虫</h1><p>$\qquad$多番调研之后我们采用了很多人都会使用的scrapy爬虫框架，接下来我来简单介绍一下该框架的运行机制：<br>Scrapy 使用了 Twisted异步网络库来处理网络通讯。整体架构大致如下：<br><img src="https://img-blog.csdnimg.cn/20190830153947646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$从上边的示意图中我们也可以看出，scrapy是由这几个不同的功能模块相互协作，一起完成爬取动作的，接下来我来简单介绍一下其各个功能模块的作用：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>功能模块</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>引擎(Scrapy)</td>
<td>处理整个系统的数据流、触发事务（框架核心）</td>
</tr>
<tr>
<td>调度器(Scheduer)</td>
<td>接收引擎发过来的请求，压入队列，在引擎再次请求的时候返回。（其中这个队列指的是要抓取网页的Url地址，可以去除重复网址。）</td>
</tr>
<tr>
<td>下载器(Downloader)</td>
<td>用于下载页面内容，并将页面内容返回给spiders</td>
</tr>
<tr>
<td>爬虫(Spiders)</td>
<td>在这一部分完成爬取工作的大部分，即在网页中提取出用户需要的数据，并将其赋值给Item实体。也可以在这里进行翻页操作。</td>
</tr>
<tr>
<td>项目管道(Pipeline)</td>
<td>处理刚才传递的Item实体，验证实体有效性。</td>
</tr>
<tr>
<td>下载器中间件(Downloader Middlewares)</td>
<td>处理Scrapy引擎与下载器(Downloader)之间的请求及响应</td>
</tr>
<tr>
<td>爬虫中间件(Spider Middlewares)</td>
<td>处理蜘蛛的响应输入和请求输出。</td>
</tr>
<tr>
<td>调度中间件(Scheduer Middlewares)</td>
<td>从Scrapy引擎发送到调度的请求和响应。</td>
</tr>
</tbody>
</table>
</div>
<p>从上边的表格中我们也可以明白整个scrapy框架的工作流程可以简单表述成：</p>
<ol>
<li>引擎在调度器中抽取一个网址（URL）用于下一步的抓取</li>
<li>引擎把网址（URL）封装成一个Request请求传给下载器</li>
<li>下载器把资源下载下来，并且封装成Response应答包</li>
<li>Spiders爬虫解析应答包Response</li>
<li>解析出Item实体后，将Item实体交给实体管道进行进一步的处理</li>
<li>如果解析出的是链接，则把新的URL压入调度器中，等待抓取。</li>
</ol>
<h1 id="4-爬取过程及结果"><a href="#4-爬取过程及结果" class="headerlink" title="4.爬取过程及结果"></a>4.爬取过程及结果</h1><p>$\qquad$此次爬取，暂且略去scrapy整个爬虫框架环境的搭建，如果以后有机会的话，我会再为大家写一个详细教程的。此次博客仅以这个小抓取实验展开。</p>
<h2 id="4-1-根据要抓取的信息首先创建一个Item实体"><a href="#4-1-根据要抓取的信息首先创建一个Item实体" class="headerlink" title="4.1 根据要抓取的信息首先创建一个Item实体"></a>4.1 根据要抓取的信息首先创建一个Item实体</h2><p>$\qquad$首先我们先参照一下需要存取的信息，包括：教师姓名，性别，职称……个人简介等等。<br><img src="https://img-blog.csdnimg.cn/20190830162002100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center =540x440" alt="在这里插入图片描述"><br>按照上边的需求我们在items.py内定义一下实体：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line"># Define here the models for your scraped items</span><br><span class="line">#</span><br><span class="line"># See documentation in:</span><br><span class="line"># https://doc.scrapy.org/en/latest/topics/items.html</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line">class CoinPicsItem(scrapy.Item):</span><br><span class="line">    # define the fields for your item here like:</span><br><span class="line">    url=scrapy.Field()#老师独立介绍界面</span><br><span class="line">    name=scrapy.Field()#姓名</span><br><span class="line">    gender=scrapy.Field()#性别</span><br><span class="line">    position=scrapy.Field()#职称</span><br><span class="line">    type=scrapy.Field()#</span><br><span class="line">    email=scrapy.Field()#电子邮件</span><br><span class="line">    phone=scrapy.Field()#电话</span><br><span class="line">    office_address=scrapy.Field()#办公地址</span><br><span class="line">    eduction_background=scrapy.Field()#教育背景</span><br><span class="line">    search_derection=scrapy.Field()#研究方向</span><br><span class="line">    description=scrapy.Field()#老师描述</span><br><span class="line">    img_url=scrapy.Field()#老师照片存储地址</span><br></pre></td></tr></table></figure></p>
<h2 id="4-2-解析出Item-并将Item交给Pipeline管道"><a href="#4-2-解析出Item-并将Item交给Pipeline管道" class="headerlink" title="4.2 解析出Item,并将Item交给Pipeline管道"></a>4.2 解析出Item,并将Item交给Pipeline管道</h2><p>这里才是对于数据进行处理的重头戏，以下为其代码：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> coin_pics.items <span class="keyword">import</span> CoinPicsItem</span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> Request</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.remote.webelement <span class="keyword">import</span> WebElement</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> TimeoutException</span><br><span class="line"></span><br><span class="line">class CoinPicSpider(scrapy.Spider):</span><br><span class="line">    name = <span class="string">'coin_pic'</span></span><br><span class="line">    allowed_domains = [<span class="string">'xzy.kmust.edu.cn'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://xzy.kmust.edu.cn/MHWZ/MHWQTGL/jslist.do?ywlbdm=001&amp;lmlxdm=02&amp;lmlbdm=0205&amp;zc=05'</span>,</span><br><span class="line">                  ]</span><br><span class="line">    #起始抓取网页地址，也就是我们所说的URL队列</span><br><span class="line">    def parse(self, response):</span><br><span class="line">        # print(response)</span><br><span class="line">        items = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">136</span>):</span><br><span class="line">            item = CoinPicsItem()</span><br><span class="line">            url=response.xpath(<span class="string">'//*[@id="jslist"]/tr/td/a/@href'</span>).extract()[i]</span><br><span class="line">            item[<span class="string">'url'</span>] = <span class="string">'http://xzy.kmust.edu.cn'</span> + url</span><br><span class="line">            <span class="keyword">yield</span> scrapy.http.Request(item[<span class="string">'url'</span>], meta=&#123;<span class="string">'item'</span>: item&#125;, callback=self.parse1)</span><br><span class="line"></span><br><span class="line">    def parse1(self,response):</span><br><span class="line">        item = response.meta[<span class="string">'item'</span>]</span><br><span class="line">        #开始接收返回的数据</span><br><span class="line">        #获取老师姓名</span><br><span class="line">        ccc = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[1]/td[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">'name'</span>]=self.get_need_name(ccc)</span><br><span class="line">        #获取老师性别</span><br><span class="line">        ccc = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[1]/td[4]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">'gender'</span>]=self.get_need_name(ccc)</span><br><span class="line">        #获取老师职称</span><br><span class="line">        ccc = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[2]/td[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">'position'</span>] = self.get_need_name(ccc)</span><br><span class="line">        #获取老师所属教研室</span><br><span class="line">        ccc = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[2]/td[4]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">'type'</span>] = self.get_need_name(ccc)</span><br><span class="line">        #获取老师电子邮箱</span><br><span class="line">        ccc = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[3]/td[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">'email'</span>] = self.get_need_name(ccc)</span><br><span class="line">        #获取老师电话</span><br><span class="line">        ccc = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[3]/td[4]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">'phone'</span>] = self.get_need_name(ccc)</span><br><span class="line">        #获取老师办公地址</span><br><span class="line">        ccc = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[4]/td[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">'office_address'</span>] = self.get_need_name(ccc)</span><br><span class="line">        #获取老师教育背景</span><br><span class="line">        ccc=response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[5]/td[2]/p/text()'</span>).extract()</span><br><span class="line">        item[<span class="string">'eduction_background'</span>]=<span class="string">'暂无描述'</span></span><br><span class="line">        <span class="keyword">if</span>(len(ccc)!=<span class="number">0</span>):</span><br><span class="line">            item[<span class="string">'eduction_background'</span>] = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[5]/td[2]/p/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        #获取老师研究方向</span><br><span class="line">        ccc = response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[6]/td[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        item[<span class="string">'search_derection'</span>] = self.get_need_name(ccc)</span><br><span class="line">        #获取老师描述</span><br><span class="line">        bbb=response.xpath(<span class="string">'//*[@id="jsxxread"]/tr[8]/td/div/div/span/text()'</span>).extract()</span><br><span class="line">        description=<span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> bbb:</span><br><span class="line">            description=description+b</span><br><span class="line">        item[<span class="string">'description'</span>]=description</span><br><span class="line">        #获取老师图片连接地址</span><br><span class="line">        aaa=response.xpath(<span class="string">'//*[@id="div1"]//@src'</span>).extract()</span><br><span class="line">        item[<span class="string">'img_url'</span>]=<span class="string">'暂无图片'</span></span><br><span class="line">        <span class="keyword">if</span>(len(aaa)!=<span class="number">0</span>):</span><br><span class="line">            img_url= response.xpath(<span class="string">'//*[@id="div1"]//@src'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            lists=re.split(r<span class="string">'../'</span>,img_url)</span><br><span class="line">            item[<span class="string">'img_url'</span>] = <span class="string">'http://xzy.kmust.edu.cn/'</span> + lists[<span class="number">2</span>] + <span class="string">'os/'</span> + lists[<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">yield</span> item</span><br><span class="line">        #http://xzy.kmust.edu.cn/Servletphoto?path=teacherphotos/cwg001.jpg</span><br><span class="line">        #../../Servletphoto?path=teacherphotos/cwg001.jpg</span><br><span class="line">    def get_need_name(self,str):</span><br><span class="line">        lists = re.split(r<span class="string">'\r\n'</span>, str)</span><br><span class="line">        list=re.split(r<span class="string">' '</span>,lists[<span class="number">1</span>])</span><br><span class="line">        result = list[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><br>$\qquad$当然如果你只做到这里我们知识完成了对于Item实体的赋值，其实如果你没有声明一下的话，下一步Pipeline管道是永远不会得到要进一步处理的实体Item的。因此这就需要我们在setting.py文件里边加入如下声明，我要将Item传入哪个管道进行处理。（此处我们的项目因为比较小，所以只开设了一个管道，但如果项目管道多的时候，计算机就不知道我们要将Item实体传入到哪个管道了，所以此处非常重要！！）<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># Configure item pipelines</span><br><span class="line"># See https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'coin_pics.pipelines.CoinPicsPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>代码中的管道数值，可以随意设置，一般设置为1~1000皆可。主要用于区分不同的管道（至少我是这么理解的）。</p>
<h2 id="4-3-在Pipeline实现对于爬取信息的保存"><a href="#4-3-在Pipeline实现对于爬取信息的保存" class="headerlink" title="4.3 在Pipeline实现对于爬取信息的保存"></a>4.3 在Pipeline实现对于爬取信息的保存</h2><p>$\qquad$在管道内得到Item实体传过来的信息以后，我们需要在对应的pipelines进行数据的进一步处理（比如保存，存入数据库等等），但如果是网页地址的话，可以按照需求选择是否传回之前的等待爬取的URL网址队列。<br>$\qquad$此处我们就直接将导师的图片直接下载到本地。pipelines.py代码如下：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line"># Define your item pipelines here</span><br><span class="line">#</span><br><span class="line"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span><br><span class="line"># See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span><br><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">from</span> openpyxl.drawing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line">#存储到本地数据</span><br><span class="line">class CoinPicsPipeline(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        #创建excel,填写表头</span><br><span class="line">        self.wb = Workbook()</span><br><span class="line">        self.ws = self.wb.active</span><br><span class="line">        self.ws.append(['姓名', '性别', '职位', '所在院系','电子邮件','电话','办公地址','教育背景','研究方向','描述','图片'])  # 设置表头</span><br><span class="line">    def process_item(self, item, spider):</span><br><span class="line">        line = [item[<span class="string">'name'</span>], item[<span class="string">'gender'</span>], item[<span class="string">'position'</span>], item[<span class="string">'type'</span>],item[<span class="string">'email'</span>],item[<span class="string">'phone'</span>],item[<span class="string">'office_address'</span>],</span><br><span class="line">                item['eduction_background'],item['search_derection'],item['description'],item['img_url']]  # 把数据中每一项整理出来</span><br><span class="line">        self.ws.append(line)  # 将数据以行的形式添加到xlsx中</span><br><span class="line">        self.wb.save('kmust_teachers2.xlsx')  # 保存xlsx文件</span><br><span class="line"></span><br><span class="line">        #以下将图片爬取下来存储到本地</span><br><span class="line">        <span class="keyword">if</span>(item[<span class="string">'img_url'</span>]!=<span class="string">'暂无图片'</span>):</span><br><span class="line">            imgres = requests.get(item[<span class="string">'img_url'</span>])</span><br><span class="line">            <span class="keyword">with</span> open(r<span class="string">'K:/数据存档/scrapy项目/coin_pics/coin_pics/teachers/'</span>+str(item[<span class="string">'name'</span>])+<span class="string">'.jpg'</span>, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(imgres.content)</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><br>$\qquad$例如在这个管道中，我就讲导师的全部信息先存到一个excel表格中，并且又单独对各个导师的图片进行了下载。</p>
<h2 id="4-4-关于程序的执行"><a href="#4-4-关于程序的执行" class="headerlink" title="4.4 关于程序的执行"></a>4.4 关于程序的执行</h2><p>$\qquad$由于scrapy框架的特殊，我们在启动该爬虫时，还需要在同级目录下自己创建一个python文件来启动该爬虫模块。例如我自己创建了一个run.py文件，其内容如下：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># @Time : 2019/5/4 11:17 </span><br><span class="line"># @Author : kingback</span><br><span class="line"># @File : run.py </span><br><span class="line"># @Software: PyCharm</span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> cmdline</span><br><span class="line">cmdline.execute(<span class="string">"scrapy crawl coin_pic"</span>.split())</span><br></pre></td></tr></table></figure><br>$\qquad$我们需要调用cmd命令窗口来执行名字为“coin_pic”的爬虫。这个名字是在我们一开始要创建爬虫时必须为起的一个名字，就像是一个小孩的出生，你得给他起个名字一样。这样该命令一执行，就会启动我们的爬虫。</p>
<h1 id="5-程序运行截图"><a href="#5-程序运行截图" class="headerlink" title="5.程序运行截图"></a>5.程序运行截图</h1><p><img src="https://img-blog.csdnimg.cn/2019083017015758.gif" alt="在这里插入图片描述"></p>
<h1 id="6-最后如果有人想要此次爬取的资料（照片-excel），可以私聊我，看到后肯定会回复的。"><a href="#6-最后如果有人想要此次爬取的资料（照片-excel），可以私聊我，看到后肯定会回复的。" class="headerlink" title="6.最后如果有人想要此次爬取的资料（照片+excel），可以私聊我，看到后肯定会回复的。"></a>6.最后如果有人想要此次爬取的资料（照片+excel），可以私聊我，看到后肯定会回复的。</h1>]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>mysql数据库操作</title>
    <url>/2019/11/25/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="1-检查数据库版本"><a href="#1-检查数据库版本" class="headerlink" title="1. 检查数据库版本"></a>1. 检查数据库版本</h1><p>打开电脑cmd窗口，在其中输入mysql -uroot -p，如下所示：<br><img src="https://img-blog.csdnimg.cn/20190829215635637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$ 如果你的电脑出现如图所示，说明你的电脑mysql已经配置成功了。如果没有成功，你可以去检查一下mysql是否已经安装成功，如果已经安装了，但是还是没有出现我的类似界面，检查一下是否将mysql安装路径配置到环境变量。</p>
<h1 id="2-查看已有数据库"><a href="#2-查看已有数据库" class="headerlink" title="2. 查看已有数据库"></a>2. 查看已有数据库</h1><p>$\qquad$ 使用命令show databases;将会得到目前已经创建的数据库目录。<br><img src="https://img-blog.csdnimg.cn/2019082922054779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在列表中就是显示出我的mysql中已经创建的数据库。</p>
<h1 id="3-创建数据库"><a href="#3-创建数据库" class="headerlink" title="3.创建数据库"></a>3.创建数据库</h1><p>$\qquad$ 使用命令create database test；来创建一个名叫test的数据库，并且使用show databases;查看是否创建成功。<br><img src="https://img-blog.csdnimg.cn/20190829221118386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可以看到新创建的test数据库已经建立。</p>
<h2 id="3-1-数据库的使用"><a href="#3-1-数据库的使用" class="headerlink" title="3.1 数据库的使用"></a>3.1 数据库的使用</h2><p>使用ues test；命令来操作刚刚创建的test数据库，并且使用命show tables；查看数据库中存在的表格。<br><img src="https://img-blog.csdnimg.cn/20190829221353796.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-1-1-创建表格"><a href="#3-1-1-创建表格" class="headerlink" title="3.1.1 创建表格"></a>3.1.1 创建表格</h3><p>如果我们想要创建一个表格的话，可以参照以下格式：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">create table tablename(</span><br><span class="line">			name varchar(<span class="number">20</span>),</span><br><span class="line">			age smallint,</span><br><span class="line">			gender varchar(<span class="number">1</span>),</span><br><span class="line">			<span class="class"><span class="keyword">class</span> <span class="title">varchar</span>(20),</span></span><br><span class="line"><span class="class">			<span class="title">id</span> <span class="title">smallint</span> <span class="title">unsigned</span> <span class="title">auto_increment</span> <span class="title">primary</span> <span class="title">key</span></span></span><br><span class="line"><span class="class">			)</span>;</span><br></pre></td></tr></table></figure><br> $\qquad$ 需要注意的是，在每个表格中都需要有一个主键，标拾命令为private key，并且我们在此表中还将id列设置为int类型的自增类型。这样就不必每次都插入id列了，而是由计算机直接生成。<br>执行之后则可以看到如下所示界面：<br><img src="https://img-blog.csdnimg.cn/20190829221526674.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-1-2-显示表格"><a href="#3-1-2-显示表格" class="headerlink" title="3.1.2 显示表格"></a>3.1.2 显示表格</h3><p>$\qquad$ 并且使用show columns from qust;命令查看该表包含的列。<br><img src="https://img-blog.csdnimg.cn/20190829222123275.png#pic_center" alt="在这里插入图片描述"><br>上图展示的就是我们刚刚建立的表的结构。</p>
<h2 id="3-2-数据表格的操作（增删查改）"><a href="#3-2-数据表格的操作（增删查改）" class="headerlink" title="3.2 数据表格的操作（增删查改）"></a>3.2 数据表格的操作（增删查改）</h2><p>$\qquad$ 其实在我看来，对于数据库简单的操作，一般都是对于数据库内容的增删查改使用的多，因此，此处我也就仅仅拿这几个方向来分别做一下实验。</p>
<h3 id="3-2-1-向表中插入数据"><a href="#3-2-1-向表中插入数据" class="headerlink" title="3.2.1 向表中插入数据"></a>3.2.1 向表中插入数据</h3><p>当我们想要向表格中插入几条数据的时候，其语法如下：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">INSERT INTO table_name ( field1, field2,...fieldN ) VALUES ( value1, value2,...valueN );</span><br></pre></td></tr></table></figure><br>下图所示为我在数据库中插入数据信息：<br><img src="https://img-blog.csdnimg.cn/20190829223516603.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-2-2-查询表中数据"><a href="#3-2-2-查询表中数据" class="headerlink" title="3.2.2 查询表中数据"></a>3.2.2 查询表中数据</h3><p>查询数据表格中的数据，其语法如下所示：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">SELECT column_name,column_name FROM table_name [WHERE Clause] [LIMIT N][ OFFSET M]</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190829223725712.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-2-3-更改表中某条数据"><a href="#3-2-3-更改表中某条数据" class="headerlink" title="3.2.3 更改表中某条数据"></a>3.2.3 更改表中某条数据</h3><p>更改数据库中某条件下的数据，其使用规范为：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">UPDATE table_name SET field1=<span class="keyword">new</span>-value1, field2=<span class="keyword">new</span>-value2 [WHERE Clause]</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190829223801220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-2-4-删除表中某条数据"><a href="#3-2-4-删除表中某条数据" class="headerlink" title="3.2.4 删除表中某条数据"></a>3.2.4 删除表中某条数据</h3><p>在删除之前我先插入了一些数据如下所示：<br><img src="https://img-blog.csdnimg.cn/20190829224519951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>执行删除操作，使用delete from qust where id=2;删除表中的刘淑贵<br>其使用规范为：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">DELETE FROM table_name [WHERE Clause]</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190829224537303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="3-3-最大、最小、平均值查询"><a href="#3-3-最大、最小、平均值查询" class="headerlink" title="3.3 最大、最小、平均值查询"></a>3.3 最大、最小、平均值查询</h2><h3 id="3-3-1-查询表中工资最高值"><a href="#3-3-1-查询表中工资最高值" class="headerlink" title="3.3.1 查询表中工资最高值"></a>3.3.1 查询表中工资最高值</h3><p>查询表中数据最高值的使用规范：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select max(field1) <span class="keyword">as</span> maxvalue <span class="keyword">from</span> table1</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190829225008900.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-3-2-查询表中工资最低值"><a href="#3-3-2-查询表中工资最低值" class="headerlink" title="3.3.2 查询表中工资最低值"></a>3.3.2 查询表中工资最低值</h3><p>查询最低工资，使用规范：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select min(field1) <span class="keyword">as</span> minvalue <span class="keyword">from</span> table1</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190829224950651.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-3-3-查询表中工资平均值"><a href="#3-3-3-查询表中工资平均值" class="headerlink" title="3.3.3 查询表中工资平均值"></a>3.3.3 查询表中工资平均值</h3><p>查询平均工资：使用规范：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select avg(field1) <span class="keyword">as</span> avgvalue <span class="keyword">from</span> table1</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190829225026426.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="3-4-排序"><a href="#3-4-排序" class="headerlink" title="3.4 排序"></a>3.4 排序</h2><p>按照工资高低进行排序，使用规范：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span> table1 order by field1,field2 [desc]</span><br></pre></td></tr></table></figure><br>可以看到 添加desc 是对其工资从高到低进行排序，而如果不添加desc 则会对其进行升序排列。<br><img src="https://img-blog.csdnimg.cn/20190829230452213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>数据库操作</category>
      </categories>
  </entry>
  <entry>
    <title>jsp+servelt+mysql+tomcat实现的四六级单词查询系统</title>
    <url>/2019/11/25/jsp+servelt+mysql+tomcat%20%E5%9B%9B%E5%85%AD%E7%BA%A7%E5%8D%95%E8%AF%8D%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="0-具体要求"><a href="#0-具体要求" class="headerlink" title="0.具体要求"></a>0.具体要求</h1><ol>
<li>要求建立大学四级、 六级词汇表（可从网上找来）放到 MYSQL 数据库中；</li>
<li>完善上周发布的网站，实现一个单词查询的页面，能够根据拼写、词性、难度范围（四级 or 六级）等信息查出所需要单词的释义。网页可参照金山词霸、汉典、有道等的风格；</li>
<li>反查：能依据释义内容，模糊查出对应的单词；</li>
<li>统计：实现对单词表中 a，b，c 到 z 开头单词个数的统计，结果以表格输出到网页上；</li>
<li>学习如何在网页上绘图：建议用 Jscharts 工具（从网上查吧，各位），将单词统计表作图， 成为单词统计曲线图或直方图；</li>
<li>在网页上显示gif动图、视频、音频；</li>
<li>将汉字字频表格查询出后显示在前端页面。</li>
</ol>
<h1 id="1-系统的工作流程以及原理"><a href="#1-系统的工作流程以及原理" class="headerlink" title="1. 系统的工作流程以及原理"></a>1. 系统的工作流程以及原理</h1><h2 id="1-1-Servelt介绍"><a href="#1-1-Servelt介绍" class="headerlink" title="1.1 Servelt介绍"></a>1.1 Servelt介绍</h2><p>首先简单介绍一下Servelt，它是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。这个关系我们可以再下边的图中展示。<br><img src="https://img-blog.csdnimg.cn/20190831172633882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>再来说一下Servelt的作用以及任务吧</strong></p>
<ol>
<li>读取客户端（浏览器）发送的显式的数据。这包括网页上的 HTML 表单，或者也可以是来自 applet 或自定义的 HTTP 客户端程序的表单。</li>
<li>读取客户端（浏览器）发送的隐式的 HTTP 请求数据。这包括 cookies、媒体类型和浏览器能理解的压缩格式等等。</li>
<li>处理数据并生成结果。这个过程可能需要访问数据库，执行 RMI 或 CORBA 调用，调用 Web 服务，或者直接计算得出对应的响应。</li>
<li>发送显式的数据（即文档）到客户端（浏览器）。该文档的格式可以是多种多样的，包括文本文件（HTML 或 XML）、二进制文件（GIF 图像）、Excel 等。</li>
<li>发送隐式的 HTTP 响应到客户端（浏览器）。这包括告诉浏览器或其他客户端被返回的文档类型（例如 HTML），设置 cookies 和缓存参数，以及其他类似的任务。</li>
</ol>
<p><strong>另外，相比于CGL,servelt还有其以下几点优势：</strong></p>
<ol>
<li>性能明显更好。</li>
<li>Servlet 在 Web 服务器的地址空间内执行。这样它就没有必要再创建一个单独的进程来处理每个客户端请求。</li>
<li>Servlet 是独立于平台的，因为它们是用 Java 编写的。</li>
<li>服务器上的 Java 安全管理器执行了一系列限制，以保护服务器计算机上的资源。因此，Servlet 是可信的。</li>
<li>Java 类库的全部功能对 Servlet 来说都是可用的。它可以通过 sockets 和 RMI 机制与 applets、数据库或其他软件进行交互。<h2 id="1-2-jsp介绍"><a href="#1-2-jsp介绍" class="headerlink" title="1.2 jsp介绍"></a>1.2 jsp介绍</h2></li>
<li>JSP（全称Java Server Pages）是由 Sun Microsystems 公司倡导和许多公司参与共同创建的一种使软件开发者可以响应客户端请求，而动态生成 HTML、XML 或其他格式文档的Web网页的技术标准。</li>
<li>JSP 技术是以 Java 语言作为脚本语言的，JSP 网页为整个服务器端的 Java 库单元提供了一个接口来服务于HTTP的应用程序。JSP文件后缀名为 *.jsp 。</li>
<li>JSP开发的WEB应用可以跨平台使用，既可以运行在 Linux 上也能运行在 Windows 上。</li>
</ol>
<p>正因为Jsp是以java语言作为脚本语言的，所以，在整个系统的前端部分，由jsp页面来担任。</p>
<h2 id="1-3-Tomcat介绍"><a href="#1-3-Tomcat介绍" class="headerlink" title="1.3 Tomcat介绍"></a>1.3 Tomcat介绍</h2><p>$\qquad$开源小型web服务器 ，完全免费，主要用于中小型web项目，<strong>只支持Servlet和JSP 等少量javaee规范（就是JavaWeb编程接口）</strong>。也正因为tomcat对于java和servelt很好的嵌合，所以我们的此次系统选用了Tomcat服务器。</p>
<h1 id="2-功能实现"><a href="#2-功能实现" class="headerlink" title="2.功能实现"></a>2.功能实现</h1><h2 id="2-1-建立四六级单词的MYSQL表格"><a href="#2-1-建立四六级单词的MYSQL表格" class="headerlink" title="2.1 建立四六级单词的MYSQL表格"></a>2.1 建立四六级单词的MYSQL表格</h2><p>写了一个<strong>python</strong>程序，来执行将四级单词的txt表格存入mysql数据库<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># @Time : 2019/6/21 15:29 </span><br><span class="line"># @Author : kingback</span><br><span class="line"># @File : CET4-MySQL.py </span><br><span class="line"># @Software: PyCharm</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(host=<span class="string">"127.0.0.1"</span>,user=<span class="string">"root"</span>,  password=<span class="string">"123456"</span>,db=<span class="string">"words"</span>,charset = <span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"># 使用 cursor() 方法创建一个游标对象 cursor</span><br><span class="line">cursor = db.cursor()</span><br><span class="line">filename = <span class="string">"C:/Users/kingback/Desktop/四六级但系/四级.txt"</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> open(filename, encoding=<span class="string">"utf-8"</span>):</span><br><span class="line">    hh = re.split(r<span class="string">"\t|\n"</span>, line)</span><br><span class="line">    english = hh[<span class="number">0</span>]</span><br><span class="line">    sent = hh[<span class="number">1</span>]</span><br><span class="line">    chinese = hh[<span class="number">2</span>]</span><br><span class="line">    level=<span class="string">"4"</span></span><br><span class="line">    #2、插入操作</span><br><span class="line">    sql=<span class="string">"insert into cet(english,chinese,sent,level) values('%s', '%s', '%s','%s')"</span></span><br><span class="line">    data=(english,chinese,sent,level)</span><br><span class="line">    cursor.execute(sql%data)   # execute也可以执行创建和修改库与表语句</span><br><span class="line">    print(<span class="string">"当前插入单词： "</span>,english)</span><br><span class="line">    db.commit()</span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><br>为了区别四级单词和六级单词的区别，我又单独写了一个针对存取六级单词的<strong>Python</strong>文件，其内容如下：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># @Time : 2019/6/21 15:30 </span><br><span class="line"># @Author : kingback</span><br><span class="line"># @File : CET6-MySQL.py </span><br><span class="line"># @Software: PyCharm</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(host=<span class="string">"127.0.0.1"</span>,user=<span class="string">"root"</span>,  password=<span class="string">"123456"</span>,db=<span class="string">"words"</span>,charset = <span class="string">'utf8'</span>)</span><br><span class="line"># 使用 cursor() 方法创建一个游标对象 cursor</span><br><span class="line">cursor = db.cursor()</span><br><span class="line">filename = <span class="string">"C:/Users/kingback/Desktop/四六级但系/六级.txt"</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> open(filename, encoding=<span class="string">"utf-8"</span>):</span><br><span class="line">    hh = re.split(r<span class="string">"\t|\n"</span>, line)</span><br><span class="line">    english = hh[<span class="number">0</span>]</span><br><span class="line">    sent = hh[<span class="number">1</span>]</span><br><span class="line">    chinese = hh[<span class="number">2</span>]</span><br><span class="line">    level=<span class="string">"6"</span></span><br><span class="line">    #2、插入操作</span><br><span class="line">    sql=<span class="string">"insert into cet(english,chinese,sent,level) values('%s', '%s', '%s','%s')"</span></span><br><span class="line">    data=(english,chinese,sent,level)</span><br><span class="line">    cursor.execute(sql%data)   # execute也可以执行创建和修改库与表语句</span><br><span class="line">    print(<span class="string">"当前插入单词： "</span>,english)</span><br><span class="line">    # db.commit()</span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><br>接下来我展示一下四级单词存取的运行过程，<br><img src="https://img-blog.csdnimg.cn/20190831171422659.gif" alt="在这里插入图片描述"><br>因为六级的运行和四级的运行相差不多，于是我就仅展示了四级的。</p>
<h2 id="2-2-功能实现"><a href="#2-2-功能实现" class="headerlink" title="2.2  功能实现"></a>2.2  功能实现</h2><h3 id="2-2-1-整个项目组成"><a href="#2-2-1-整个项目组成" class="headerlink" title="2.2.1 整个项目组成"></a>2.2.1 整个项目组成</h3><p>整个项目是由 </p>
<ol>
<li>index.jsp (登陆主界面)、Chinese.jsp 、pic.jsp (使用jscharts画图界面)、data.jsp四个jsp页面</li>
<li>ChangeServelt (实际未使用)、DemoServelt (未用到，测试时使用)、TranslateServelt  (实现主体功能)三个servelt</li>
<li>一个DBoper类(数据库操作类)、Chinese_Frequent类（用来存储词频）以及一个Word类（用来存储单词）</li>
<li>一个Image文件夹(用来存放整个项目中用到的图片)</li>
<li>一个js文件夹（用来存放js文件）</li>
<li>一个video文件夹(用来存放动图、视频、音频)  组成。<br>整个的目录结构如下所示：<br><img src="https://img-blog.csdnimg.cn/20190831185755693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h3 id="2-2-2-介绍一下index-jsp文件内容"><a href="#2-2-2-介绍一下index-jsp文件内容" class="headerlink" title="2.2.2 介绍一下index.jsp文件内容"></a>2.2.2 介绍一下index.jsp文件内容</h3>这是程序运行后首先展示的界面，也是我们用户进行操作的主界面。<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@page <span class="keyword">import</span>=<span class="string">"java.lang.*,java.util.Enumeration"</span>%&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.*"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;kingback首页&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;link href="https:/</span><span class="regexp">/shared.ydstatic.com/im</span>ages/favicon.ico<span class="string">" type="</span>image/x-icon<span class="string">" rel="</span>shortcut icon<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;div style="</span>text-align: center;<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;!-- gif --&gt;</span></span><br><span class="line"><span class="string">&lt;img src="</span>video/pkq.gif<span class="string">" width="</span><span class="number">320</span><span class="string">" height="</span><span class="number">240</span><span class="string">" alt="</span><span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;!-- audio --&gt;</span></span><br><span class="line"><span class="string">&lt;audio src="</span>video/xs.mp3<span class="string">" controls="</span>controls<span class="string">"&gt;&lt;/audio&gt;</span></span><br><span class="line"><span class="string">&lt;!-- video --&gt;</span></span><br><span class="line"><span class="string">&lt;video width="</span><span class="number">320</span><span class="string">" height="</span><span class="number">240</span><span class="string">" controls&gt;</span></span><br><span class="line"><span class="string">    &lt;source src="</span>video/tf.mp4<span class="string">" type="</span>video/mp4<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;source src="</span>video/tf.ogg<span class="string">" type="</span>video/ogg<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;source src="</span>video/tf.webm<span class="string">" type="</span>video/webm<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;object data="</span>video/tf.mp4<span class="string">" width="</span><span class="number">320</span><span class="string">" height="</span><span class="number">240</span><span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;embed src="</span>video/tf.swf<span class="string">" width="</span><span class="number">320</span><span class="string">" height="</span><span class="number">240</span><span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;/object&gt;</span></span><br><span class="line"><span class="string">&lt;/video&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/div&gt;&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;div id="</span>margin1<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div id="</span>logo<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="</span>logo<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;div id="</span>margin2<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;form action="</span>search<span class="string">" method="</span>post<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="</span>border<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;select name="</span>type<span class="string">" id="</span>selectType<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;option value="</span>四级<span class="string">"&gt;四级&lt;/option&gt;</span></span><br><span class="line"><span class="string">            &lt;option value="</span>六级<span class="string">" selected id="</span>type<span class="string">"&gt;六级&lt;/option&gt;	//预选设置</span></span><br><span class="line"><span class="string">            &lt;option value="</span>汉译英<span class="string">" &gt;汉译英&lt;/option&gt;</span></span><br><span class="line"><span class="string">            &lt;option value="</span>英译汉<span class="string">" &gt;英译汉&lt;/option&gt;</span></span><br><span class="line"><span class="string">            &lt;option value="</span>统计<span class="string">"&gt;统计&lt;/option&gt;</span></span><br><span class="line"><span class="string">            &lt;option value="</span>字频<span class="string">"&gt;字频&lt;/option&gt;</span></span><br><span class="line"><span class="string">        &lt;/select&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>text<span class="string">" name="</span>inputWord<span class="string">" placeholder="</span>请输入单词<span class="string">" id="</span>translateContent<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">        &lt;span id="</span>hnwBtn<span class="string">" class="</span>hand-write<span class="string">"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;input type="</span>submit<span class="string">" value="</span>查 询<span class="string">" id="</span>btn<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;input type="</span>reset<span class="string">" value="</span>重 置<span class="string">" id="</span>btn1<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>$\qquad$很多人或许会想，前台用户输入的数据，后台是怎么获得的呢，因为jsp很好的嵌合了java以及servelt所以,在刚才的主界面中我们将需要传递给后台的数据放在这个 <strong>form</strong> 内，当用户点击查询按钮的时候，该动作就称之为 <strong>search</strong> ,并且将其中包括的内容传递给后台的 <strong>servelt</strong>。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form action=&quot;search&quot; method=&quot;post&quot;&gt;</span><br><span class="line">......</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="2-2-4-介绍TranslateServelt-java"><a href="#2-2-4-介绍TranslateServelt-java" class="headerlink" title="2.2.4 介绍TranslateServelt.java"></a>2.2.4 介绍TranslateServelt.java</h3><p>$\qquad$接下来我就来讲一下，前台提交过来的action <strong>search</strong>是怎么和后台配对的。请注意看该java文件的开头的这句话<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">@WebServlet(<span class="string">"/search"</span>)</span><br></pre></td></tr></table></figure><br>$\qquad$我们会发现前台提交的<strong>search</strong>动作通过这句话找到了与它配对的servelt,也就是说前台用户输入的数据已经成功传到后台来处理。 然后再在这个java文件中执行查询数据库的操作。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.jws.WebService;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Array;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created with IntelliJ IDEA.</span></span><br><span class="line"><span class="comment"> * User: kingback</span></span><br><span class="line"><span class="comment"> * Author:king@王延凯</span></span><br><span class="line"><span class="comment"> * Date: 2019/6/17</span></span><br><span class="line"><span class="comment"> * Time: 14:14</span></span><br><span class="line"><span class="comment"> * Description: No Description</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">@WebServlet(<span class="string">"/search"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">TranslateServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="comment">//idea快速重写父类方法，使用快捷键ctrl+O选择需要重写的方法即可</span></span><br><span class="line">    @Override</span><br><span class="line">    protected <span class="keyword">void</span> doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"><span class="comment">//        super.doPost(request, response);</span></span><br><span class="line">        <span class="comment">//设置编码格式</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset = utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取选择的类别</span></span><br><span class="line">        <span class="built_in">String</span> type=request.getParameter(<span class="string">"type"</span>);</span><br><span class="line">        <span class="comment">//获取用户输入的单词或汉字</span></span><br><span class="line">        <span class="built_in">String</span> inputWord=request.getParameter(<span class="string">"inputWord"</span>);</span><br><span class="line">        <span class="comment">//验证输出</span></span><br><span class="line">        <span class="comment">// System.out.println(inputWord);</span></span><br><span class="line">        <span class="comment">// System.out.println("当前选项为："+type);</span></span><br><span class="line">        <span class="comment">// System.out.println(type.equals("六级"));</span></span><br><span class="line">        <span class="comment">//根据不同的type选择不同的sql语句</span></span><br><span class="line">        <span class="comment">//汉译英,支持模糊搜索</span></span><br><span class="line">        <span class="built_in">String</span> sql=<span class="string">"select * from cet where chinese like "</span>+<span class="string">"'%"</span>+inputWord+<span class="string">"%'"</span>;</span><br><span class="line">        <span class="comment">//英译汉</span></span><br><span class="line">        <span class="built_in">String</span> sql1=<span class="string">"select * from cet where english="</span>+<span class="string">"'"</span>+inputWord+<span class="string">"'"</span>;</span><br><span class="line">        <span class="comment">//四级</span></span><br><span class="line">        <span class="built_in">String</span> CET_4=<span class="string">"select * from cet where level="</span>+<span class="string">"'4'"</span>;</span><br><span class="line">        <span class="comment">//六级</span></span><br><span class="line">        <span class="built_in">String</span> CET_6=<span class="string">"select * from cet where level="</span>+<span class="string">"'6'"</span>;</span><br><span class="line">        <span class="comment">//统计</span></span><br><span class="line">        <span class="built_in">String</span> count=<span class="string">""</span>;</span><br><span class="line">        <span class="comment">//字频</span></span><br><span class="line">        <span class="built_in">String</span> sql_frequent=<span class="string">"select * from chinese_word where pin like "</span>+<span class="string">"'"</span>+inputWord+<span class="string">"%'"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化连接变量,用来存储数据</span></span><br><span class="line">        <span class="built_in">String</span> server=<span class="string">"localhost"</span>;</span><br><span class="line">        <span class="built_in">String</span> dbname=<span class="string">"words"</span>;</span><br><span class="line">        <span class="built_in">String</span> dbuser=<span class="string">"root"</span>;</span><br><span class="line">        <span class="built_in">String</span> dbpwd=<span class="string">"123456"</span>;</span><br><span class="line">        <span class="comment">//创建一个Word链表来承接数据库查询的数据</span></span><br><span class="line">        List&lt;Word&gt; wordList1=<span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="comment">//创建一个Chinese_Frequent链表来承接数据查询的数据</span></span><br><span class="line">        List&lt;Chinese_Frequent&gt; wordList2=<span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="comment">//实例化一个数据库连接类</span></span><br><span class="line">        DBoper dBoper=<span class="keyword">new</span> DBoper();</span><br><span class="line">        <span class="comment">//链接数据库</span></span><br><span class="line">        dBoper.getConn(server,dbname,dbuser,dbpwd);</span><br><span class="line">        <span class="comment">//初始化数据库结果参数</span></span><br><span class="line">        ResultSet rs = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//执行sql查询</span></span><br><span class="line">        <span class="keyword">if</span>(type.equals(<span class="string">"四级"</span>))&#123;</span><br><span class="line">            <span class="comment">// System.out.println("当前执行到四级！");</span></span><br><span class="line">            <span class="comment">//执行sql语句</span></span><br><span class="line">            rs=dBoper.executeQuery(CET_4,<span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//调用DataDeal方法，开始对数据进行操作</span></span><br><span class="line">            DataDeal(rs,wordList1,request,response,dBoper);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(type.equals(<span class="string">"六级"</span>))&#123;</span><br><span class="line">            <span class="comment">// System.out.println("当前执行到六级！");</span></span><br><span class="line">            <span class="comment">//执行sql语句</span></span><br><span class="line">            rs=dBoper.executeQuery(CET_6,<span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//开始对数据进行操作</span></span><br><span class="line">            DataDeal(rs,wordList1,request,response,dBoper);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(type.equals(<span class="string">"英译汉"</span>))&#123;</span><br><span class="line">            <span class="comment">//执行sql语句</span></span><br><span class="line">            rs=dBoper.executeQuery(sql1,<span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//开始对数据进行操作</span></span><br><span class="line">            DataDeal(rs,wordList1,request,response,dBoper);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//汉译英处理函数</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(type.equals(<span class="string">"汉译英"</span>)) &#123;</span><br><span class="line">            <span class="comment">//执行sql语句</span></span><br><span class="line">            rs=dBoper.executeQuery(sql,<span class="literal">null</span>);</span><br><span class="line">            <span class="comment">//开始对数据进行操作</span></span><br><span class="line">            DataDeal(rs,wordList1,request,response,dBoper);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//统计处理函数</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(type.equals(<span class="string">"统计"</span>)) &#123;</span><br><span class="line">            <span class="comment">//开始对数据进行操作</span></span><br><span class="line"></span><br><span class="line">            Account(request,response,dBoper);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (type.equals(<span class="string">"字频"</span>))&#123;</span><br><span class="line">            rs=dBoper.executeQuery(sql_frequent,<span class="literal">null</span>);</span><br><span class="line">            System.out.println(sql_frequent);</span><br><span class="line">            Frequent(wordList2,dBoper,request,response,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected <span class="keyword">void</span> doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">        <span class="keyword">super</span>.doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> DataDeal(ResultSet resultSet,List&lt;Word&gt; wordList1,HttpServletRequest request, HttpServletResponse response,DBoper dBoper)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//将数据存入wordList1里边</span></span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                <span class="comment">//获取数据库中查询到的数据</span></span><br><span class="line">                <span class="built_in">String</span> type2=resultSet.getString(<span class="string">"english"</span>);</span><br><span class="line">                <span class="built_in">String</span> word2=resultSet.getString(<span class="string">"chinese"</span>);</span><br><span class="line">                <span class="built_in">String</span> sent2=resultSet.getString(<span class="string">"sent"</span>);</span><br><span class="line">                <span class="built_in">String</span> level2=resultSet.getString(<span class="string">"level"</span>);</span><br><span class="line">                Word word=<span class="keyword">new</span> Word(type2,word2,sent2,level2);</span><br><span class="line">                <span class="comment">//添加至wordList1列表</span></span><br><span class="line">                wordList1.add(word);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//调用数据库连接类的方法，关闭数据库连接</span></span><br><span class="line">            dBoper.closeAll();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//利用request将WordList传送到前端页面</span></span><br><span class="line">            <span class="keyword">if</span>(wordList1.size()==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//如果没有读取到数据，返回报错</span></span><br><span class="line">                response.sendRedirect(<span class="string">"success.jsp?error=yes"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//使用request封装数据</span></span><br><span class="line">                request.setAttribute(<span class="string">"wordList"</span>, wordList1);</span><br><span class="line">                System.out.println(wordList1);</span><br><span class="line">                <span class="comment">//传送至前台jsp网页</span></span><br><span class="line">                request.getRequestDispatcher(<span class="string">"data.jsp"</span>).forward(request, response);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//异常处理</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ServletException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> Account(HttpServletRequest request, HttpServletResponse response,DBoper dBoper) &#123;</span><br><span class="line">        <span class="comment">//用来存储单词个数</span></span><br><span class="line">        int[] nums=<span class="keyword">new</span> int[<span class="number">26</span>];</span><br><span class="line">        <span class="built_in">String</span> character=<span class="string">"a.b.c.d.e.f.g.h.i.g.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z"</span>;</span><br><span class="line">        <span class="comment">//拆分字符串</span></span><br><span class="line">        <span class="built_in">String</span> characters[] = character.split(<span class="string">" |\\."</span>);</span><br><span class="line">        ResultSet rs = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">String</span> sql=<span class="string">"select * from cet where english like "</span>+<span class="string">"'%"</span>+characters[i]+<span class="string">"%'"</span>;</span><br><span class="line"><span class="comment">//                System.out.println(sql);</span></span><br><span class="line">                rs=dBoper.executeQuery(sql,<span class="literal">null</span>);</span><br><span class="line">                <span class="comment">//将数据存入wordList1里边</span></span><br><span class="line">                <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                    nums[i]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用数据库连接类的方法，关闭数据库连接</span></span><br><span class="line">        dBoper.closeAll();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//已经统计到数据</span></span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">            characters[i]=characters[i]+<span class="string">","</span>+nums[i];</span><br><span class="line"><span class="comment">//            System.out.println(nums[i]);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//使用request封装数据</span></span><br><span class="line">            request.setAttribute(<span class="string">"nums"</span>, nums);</span><br><span class="line">            request.setAttribute(<span class="string">"characters"</span>, characters);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//System.out.println(nums);</span></span><br><span class="line">            <span class="comment">//传送至前台jsp网页</span></span><br><span class="line">            request.getRequestDispatcher(<span class="string">"pic.jsp"</span>).forward(request, response);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ServletException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> Frequent(List&lt;Chinese_Frequent&gt; wordList2,DBoper dBoper,HttpServletRequest request, HttpServletResponse response,ResultSet rs)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                <span class="comment">//获取数据库中查询到的数据</span></span><br><span class="line">                <span class="built_in">String</span> chinese = rs.getString(<span class="string">"words"</span>);</span><br><span class="line">                <span class="built_in">String</span> counts = rs.getString(<span class="string">"counts"</span>);</span><br><span class="line">                <span class="built_in">String</span> pin = rs.getString(<span class="string">"pin"</span>);</span><br><span class="line">                Chinese_Frequent CF = <span class="keyword">new</span> Chinese_Frequent(chinese, counts, pin);</span><br><span class="line">                wordList2.add(CF);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//调用数据库连接类的方法，关闭数据库连接</span></span><br><span class="line">            dBoper.closeAll();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//利用request将WordList传送到前端页面</span></span><br><span class="line">            <span class="keyword">if</span>(wordList2.size()==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//如果没有读取到数据，返回报错</span></span><br><span class="line">                response.sendRedirect(<span class="string">"success.jsp?error=yes"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//使用request封装数据</span></span><br><span class="line">                request.setAttribute(<span class="string">"wordList2"</span>, wordList2);</span><br><span class="line">                System.out.println(wordList2);</span><br><span class="line">                <span class="comment">//传送至前台jsp网页</span></span><br><span class="line">                request.getRequestDispatcher(<span class="string">"chinese.jsp"</span>).forward(request, response);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ServletException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="2-2-5-后台数据返回前台"><a href="#2-2-5-后台数据返回前台" class="headerlink" title="2.2.5 后台数据返回前台"></a>2.2.5 后台数据返回前台</h3><p>$\qquad$执行完前边的步骤，我们或许会发现，虽然我们将数据传到了后台，并且进行了查询数据库等一系列操作，但是我们又如何将后台的数据传输到前台呢，这里我们需要注意一点就是，因为在这里可能会查询到很多结果，所以一条一条数据的往前台传显得不是那么显示，例如我们查询单词，每一个单词所涵盖的信息我们可以称之为一个<strong>Word 类</strong>实例化出来的对象，如果我们将这些一个一个的Word对象封装成一个集合<strong>WordList</strong>，传递给前台，那样岂不更容易一些呢。于是我们根据需要就构建了一个Word类，其代码如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: kingback</span><br><span class="line"> * Author:king@王延凯</span><br><span class="line"> * Date: 2019/6/15</span><br><span class="line"> * Time: 14:14</span><br><span class="line"> * Description: No Description</span><br><span class="line"> */</span><br><span class="line">public class Word &#123;</span><br><span class="line">    public String getEnglish() &#123;</span><br><span class="line">        return english;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setEnglish(String english) &#123;</span><br><span class="line">        this.english = english;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getChinese() &#123;</span><br><span class="line">        return chinese;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setChinese(String chinese) &#123;</span><br><span class="line">        this.chinese = chinese;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getSent() &#123;</span><br><span class="line">        return sent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setSent(String sent) &#123;</span><br><span class="line">        this.sent = sent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getLevel() &#123;</span><br><span class="line">        return level;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setLevel(String level) &#123;</span><br><span class="line">        this.level = level;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //快捷键 Alt+Insert</span><br><span class="line">    //get set方法</span><br><span class="line"></span><br><span class="line">    private String english;</span><br><span class="line">    private String chinese;</span><br><span class="line">    private String sent;</span><br><span class="line">    private String level;</span><br><span class="line"></span><br><span class="line">    public Word(String english,String chinese,String sent,String level)&#123;</span><br><span class="line">    super();</span><br><span class="line">    this.english=english;</span><br><span class="line">    this.sent=sent;</span><br><span class="line">    this.chinese=chinese;</span><br><span class="line">    this.level=level;</span><br><span class="line">    &#125;</span><br><span class="line">    public Word()&#123;</span><br><span class="line">        super();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>$\qquad$接下来我们再来讨论将后台数据反传给前台的方法和策略，前边我们已经说到了封装为WordList，而前台又是怎么得到的呢，我们可以看到在前边讲到的 <strong>TranteServelt</strong> 里边的最后有这么几句代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用request封装数据</span></span><br><span class="line">      request.setAttribute(<span class="string">"wordList2"</span>, wordList2);</span><br><span class="line">      System.out.println(wordList2);</span><br><span class="line">      <span class="comment">//传送至前台jsp网页</span></span><br><span class="line">       request.getRequestDispatcher(<span class="string">"chinese.jsp"</span>).forward(request, response);</span><br></pre></td></tr></table></figure>
<p>$\qquad$到了这里我们似乎一切都明白了，如果当程序执行到这部分代码的时候，他就会将它之前封装好的<strong>wordList</strong>数据传递到<strong>chinese.jsp</strong>页面。</p>
<h3 id="2-2-6-前台接收后台的数据并处理，显示在前端页面。"><a href="#2-2-6-前台接收后台的数据并处理，显示在前端页面。" class="headerlink" title="2.2.6 前台接收后台的数据并处理，显示在前端页面。"></a>2.2.6 前台接收后台的数据并处理，显示在前端页面。</h3><p>$\qquad$在前边我们已经讲到了，传递到前台的<strong>WordLis</strong>t在对应的jsp界面里边是这样被识别并一个个拆解为Word的。下面我们就以<strong>chinese.jsp</strong>为例：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: kingback</span><br><span class="line">  Date: 2019/8/4</span><br><span class="line">  Time: 22:20</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br><span class="line">&lt;%@ taglib prefix=&quot;fn&quot; uri=&quot;http://java.sun.com/jsp/jstl/functions&quot;%&gt;</span><br><span class="line">&lt;%@ page isELIgnored=&quot;false&quot; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;词频查询&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;link href=&quot;https://shared.ydstatic.com/images/favicon.ico&quot; type=&quot;image/x-icon&quot; rel=&quot;shortcut icon&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;margin1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;logo&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;logo&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;margin2&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;form action=&quot;search&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;border&quot;&gt;</span><br><span class="line">        &lt;select name=&quot;type&quot; id=&quot;selectType&quot;&gt;</span><br><span class="line">            &lt;option value=&quot;四级&quot;&gt;四级&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;六级&quot; selected id=&quot;type&quot;&gt;六级&lt;/option&gt;	//预选设置</span><br><span class="line">            &lt;option value=&quot;汉译英&quot; &gt;汉译英&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;英译汉&quot; &gt;英译汉&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;统计&quot; &gt;统计&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;字频&quot;&gt;字频&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; name=&quot;inputWord&quot; placeholder=&quot;请输入单词或汉字&quot; id=&quot;translateContent&quot; /&gt;</span><br><span class="line">        &lt;span id=&quot;hnwBtn&quot; class=&quot;hand-write&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;查 询&quot; id=&quot;btn&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;reset&quot; value=&quot;重 置&quot; id=&quot;btn1&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;table class=&quot;hovertable&quot;&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;汉字&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;个数&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;拼音&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;c:forEach items=&quot;$&#123;wordList2&#125;&quot; var=&quot;CH&quot;&gt;</span><br><span class="line">        &lt;form action=&quot;test1&quot; method=&quot;post&quot;&gt;</span><br><span class="line">            &lt;tr onmouseover=&quot;this.style.backgroundColor=&apos;#ffff66&apos;;&quot; onmouseout=&quot;this.style.backgroundColor=&apos;#d4e3e5&apos;;&quot;&gt;</span><br><span class="line">                &lt;td name=&quot;china&quot;&gt;&lt;c:out value=&quot;$&#123;CH.chinese&#125;&quot;/&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;c:out value=&quot;$&#123;CH.counts&#125;&quot;/&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;c:out value=&quot;$&#123;CH.pin&#125;&quot;/&gt;&lt;/td&gt;</span><br><span class="line">                &lt;%--&lt;td&gt;--%&gt;</span><br><span class="line">                    &lt;%--&lt;input type=&quot;submit&quot; value=&quot;修改&quot; id=&quot;btn2&quot; name=&quot;test&quot;&gt;--%&gt;</span><br><span class="line">                &lt;%--&lt;/td&gt;--%&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br>$\qquad$如果你观察仔细的话，或许会在以上代码的后半部分发现这句话：<strong><c:forEach items="${wordList2}" var="CH"></strong>，我们很容易就会想到我们是通过这句话来接收后台传过来的数据的，并将Wordlist拆解为一个个Word显示在页面。</p>
<h3 id="2-2-7-其它文件"><a href="#2-2-7-其它文件" class="headerlink" title="2.2.7 其它文件"></a>2.2.7 其它文件</h3><p>$\qquad$到目前为止，主体流程我已经走完了，只是含有几个文件没有展示出来，一个是数据库操作类DBoper(这个类在我之前发布的博客中是有的，都是一样的内容)、一个就是Chinese_Frequent.java ,其实该文件和Word的作用差不多，都是为了承接在数据库中查询到的结果，然后封装成List类型的传递给前台。<br>以下我展示的代码内容为 <strong>Chinese_Frequent.java</strong> 的。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created with IntelliJ IDEA.</span><br><span class="line"> * User: kingback</span><br><span class="line"> * Author:king@王延凯</span><br><span class="line"> * Date: 2019/8/4</span><br><span class="line"> * Time: 22:53</span><br><span class="line"> * Description: No Description</span><br><span class="line"> */</span><br><span class="line">public class Chinese_Frequent &#123;</span><br><span class="line">    public String getChinese() &#123;</span><br><span class="line">        return Chinese;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setChinese(String chinese) &#123;</span><br><span class="line">        Chinese = chinese;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCounts() &#123;</span><br><span class="line">        return Counts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCounts(String counts) &#123;</span><br><span class="line">        Counts = counts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPin() &#123;</span><br><span class="line">        return Pin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPin(String pin) &#123;</span><br><span class="line">        Pin = pin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String Chinese;</span><br><span class="line">    private String Counts;</span><br><span class="line">    private String Pin;</span><br><span class="line"></span><br><span class="line">    public Chinese_Frequent(String Chinese,String Counts,String Pin)&#123;</span><br><span class="line">        super();</span><br><span class="line">        this.Chinese=Chinese;</span><br><span class="line">        this.Counts=Counts;</span><br><span class="line">        this.Pin=Pin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>$\qquad$至于还有几个jsp页面的代码没有展示出来，我这么告诉你吧，其实这几个jsp页面的代码基本上都是也一样的。但如果你非得要全部的代码的话，可以私聊我，当我看到，我定会免费赠送所有资料。</p>
<h1 id="3-运行结果"><a href="#3-运行结果" class="headerlink" title="3.运行结果"></a>3.运行结果</h1><p><img src="https://img-blog.csdnimg.cn/2019083120444126.gif#pic_center" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>摆脱限制五步走</title>
    <url>/2019/11/24/%E6%91%86%E8%84%B1%E9%99%90%E5%88%B6%E4%BA%94%E6%AD%A5%E8%B5%B0/</url>
    <content><![CDATA[<h1 id="1-摆脱某雷，从此工作人员站起来了"><a href="#1-摆脱某雷，从此工作人员站起来了" class="headerlink" title="1.摆脱某雷，从此工作人员站起来了"></a>1.摆脱某雷，从此工作人员站起来了</h1><p>使用chrome插件IDM <a href="http://www.internetdownloadmanager.com/download.html" target="_blank" rel="noopener">点击此处进入下载</a>，然后再点击下载即可。<br><img src="https://img-blog.csdnimg.cn/20191007212030413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>下载之后，直接点击安装即可，这个软件最好还是直接按照它的提示安装到C盘,否则则会在运行的时候报错。<br>之后关闭浏览器，再次打开浏览器即可添加成功。之后在每打开一个视频的时候，都会自动出现这个下载图标。如下所示：<img src="https://img-blog.csdnimg.cn/20191007214414368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击图标，就会出现让你选择要下载的视频分辨率：<br><img src="https://img-blog.csdnimg.cn/20191007214618724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可以看到速度还是很快的：<br><img src="https://img-blog.csdnimg.cn/20191007221515885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="2-摆脱某盘，从此开发人员富起来了"><a href="#2-摆脱某盘，从此开发人员富起来了" class="headerlink" title="2.摆脱某盘，从此开发人员富起来了"></a>2.摆脱某盘，从此开发人员富起来了</h1><p>接下来要介绍的一个就是大名鼎鼎的<strong>pandownload</strong>了，<a href="http://pandownload.com/" target="_blank" rel="noopener">其下载链接</a>，这个版本已经包括了手机、电脑各个版本，已经非常顺手了。<br>该软件实现了多账号登陆以及无限速，甚至内部还集成了16路的内部加速器。总之体验感超棒。<br>接下来就要介绍一下其使用流程了：在使用过程中如果下载的文件为现在以登录账号的，则就需要注意：<br><strong>先把文件分享出来，再使用分享链接下载即可</strong>，<br><strong>先把文件分享出来，再使用分享链接下载即可</strong>，<br><strong>先把文件分享出来，再使用分享链接下载即可</strong>。<br>重要的事情说三遍。<br>然后你就可以尽情享受了。<br><img src="https://img-blog.csdnimg.cn/20191007215625509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>以下附上演示：<br><img src="https://img-blog.csdnimg.cn/20191007215901630.gif#pic_center" alt="在这里插入图片描述"></p>
<h1 id="3-从此开发人员strong起来了"><a href="#3-从此开发人员strong起来了" class="headerlink" title="3.从此开发人员strong起来了"></a>3.从此开发人员strong起来了</h1><p>些许内容不便透露，有需要的可以私信我。看到必回。(希望理解)。</p>
<h1 id="4-云盘精灵（网盘文件搜索）—飞起来了"><a href="#4-云盘精灵（网盘文件搜索）—飞起来了" class="headerlink" title="4.云盘精灵（网盘文件搜索）—飞起来了"></a>4.云盘精灵（网盘文件搜索）—飞起来了</h1><p>其官方网址：<a href="https://www.yunpanjingling.com/" target="_blank" rel="noopener">点击链入</a><br>操作很简单，注册个账号，然后在里边输入需要的文件即可。<br><img src="https://img-blog.csdnimg.cn/20191007220705173.gif#pic_center" alt="在这里插入图片描述"></p>
<h1 id="5-摆脱百度文库下载限制"><a href="#5-摆脱百度文库下载限制" class="headerlink" title="5.摆脱百度文库下载限制"></a>5.摆脱百度文库下载限制</h1><p>在下载框输入下载网页即可完成下载。其下载器的下载我已保存至网盘，直接使用即可。<br>其连接如下：<br>链接：<a href="https://pan.baidu.com/s/1YpSNfoLDf2RuADl4z4BYyg" target="_blank" rel="noopener">https://pan.baidu.com/s/1YpSNfoLDf2RuADl4z4BYyg</a><br>提取码：qvhy </p>
<p><img src="https://img-blog.csdnimg.cn/20191123172348282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>工具类</category>
      </categories>
  </entry>
  <entry>
    <title>数字信号处理matlab训练第【2】弹</title>
    <url>/2019/11/19/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86matlab%E8%AE%AD%E7%BB%83%E7%AC%AC%E3%80%902%E3%80%91%E5%BC%B9--%E7%A6%BB%E6%95%A3%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E7%9A%84%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%EF%BC%88DTFT%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1-实验要求"><a href="#1-实验要求" class="headerlink" title="1.实验要求"></a>1.实验要求</h1><p>已知函数$x(t)=sinc(t)，-2\pi \leq t \leq2\pi$,求其时域抽样函数$x(n)$,并且画出$x(n)$的离散时间序列的傅里叶变换(DTFT)下的幅频响应和相频响应。最后根据所画图形，得出结论。</p>
<h1 id="2-实现原理"><a href="#2-实现原理" class="headerlink" title="2.实现原理"></a>2.实现原理</h1><p>根据离散序列的傅里叶变换公式：</p>
<script type="math/tex; mode=display">
X(e^{j\omega})=\sum_{n=-\infty}^{\infty}x(n)e^{-j\omega n}</script><p>其中$\omega \in[-2\pi,2\pi]$,并以$\pi/100$作为取样间隔。</p>
<h1 id="3-matlab实现"><a href="#3-matlab实现" class="headerlink" title="3.matlab实现"></a>3.matlab实现</h1><p>我们依据对上边的式子的理解，使用matlab来编写，首先我们先画出该函数的原始图像，第二个图显示的是其抽样图像，第三个第四个分别为其DTFT变换后的幅频特性图和相频特性图。<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%%开始实现离散时间序列DTFT，以sinc函数为例。</span></span><br><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line"><span class="comment">%清除指令和变量</span></span><br><span class="line">set(gcf,<span class="string">'position'</span>,[<span class="number">180</span>,<span class="number">160</span>,<span class="number">900</span>,<span class="number">550</span>]);</span><br><span class="line"><span class="comment">%设置图片显示位置为（180，160）</span></span><br><span class="line"><span class="comment">%设置图片大小为（900，550）</span></span><br><span class="line">subplot(<span class="number">221</span>)</span><br><span class="line">N1=<span class="number">200</span>;</span><br><span class="line">step=<span class="number">4</span>*<span class="built_in">pi</span>/N1;</span><br><span class="line">t=<span class="number">-2</span>*<span class="built_in">pi</span>:step:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line"><span class="comment">%对t在-2pi到2pi之间平分为100份</span></span><br><span class="line">y=sinc(t);</span><br><span class="line"><span class="built_in">plot</span>(t,y)</span><br><span class="line"><span class="comment">%定义函数并且画出sinc函数</span></span><br><span class="line">grid on;</span><br><span class="line"><span class="comment">%显示表格</span></span><br><span class="line">title(<span class="string">'sinc(t)在-2\pi到2\pi之间的图像'</span>);</span><br><span class="line">xlabel(<span class="string">'t'</span>);</span><br><span class="line">ylabel(<span class="string">'y(t)'</span>);</span><br><span class="line">axis([<span class="number">-7</span> <span class="number">7</span> <span class="number">-0.3</span> <span class="number">1.2</span>])</span><br><span class="line"><span class="comment">%设置横纵坐标轴</span></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">222</span>)</span><br><span class="line">ts=<span class="number">0.1</span>;<span class="comment">%取样时间</span></span><br><span class="line">fs=<span class="number">1</span>/ts;<span class="comment">%周期</span></span><br><span class="line">N2=<span class="number">31</span>;<span class="comment">%取样总数</span></span><br><span class="line">n=<span class="number">-15</span>:<span class="number">15</span>;</span><br><span class="line">xn=sinc(<span class="number">4</span>*<span class="built_in">pi</span>*n/N2);<span class="comment">%取离散信号数据</span></span><br><span class="line">stem(n,xn,<span class="string">'filled'</span>,<span class="string">'r'</span>);<span class="comment">%绘制时域取样图</span></span><br><span class="line">grid on;</span><br><span class="line"><span class="comment">%显示方格</span></span><br><span class="line">title(<span class="string">'sinc(t)在-2\pi到2\pi之间的抽样'</span>);</span><br><span class="line">xlabel(<span class="string">'n'</span>);</span><br><span class="line">ylabel(<span class="string">'sinc(n)'</span>);</span><br><span class="line">axis([<span class="number">-16</span> <span class="number">16</span> <span class="number">-0.4</span> <span class="number">1.5</span>])</span><br><span class="line"><span class="comment">%设置横纵坐标轴</span></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">223</span>)</span><br><span class="line">k=<span class="number">-200</span>:<span class="number">200</span>;</span><br><span class="line">w=(<span class="built_in">pi</span>/<span class="number">100</span>)*k;<span class="comment">%其原始式子为w=(4*pi)*k/400</span></span><br><span class="line"><span class="comment">%将w针对不同的k的取值，区间变为[-2*pi,2*pi]</span></span><br><span class="line">wn=<span class="built_in">exp</span>(-<span class="built_in">j</span>*<span class="built_in">pi</span>/<span class="number">100</span>);</span><br><span class="line"><span class="comment">%得到公式中的 e的-j*omiga, 该量是个常数</span></span><br><span class="line">nk=n'*k;</span><br><span class="line"><span class="comment">%n的转置与k相乘</span></span><br><span class="line"><span class="comment">%nk为取样矩阵，相当于先是循环n次再是循环k次得到</span></span><br><span class="line">xk=wn.^nk;</span><br><span class="line"><span class="comment">%得到公式中的复变量e的-j*omiga*n</span></span><br><span class="line">X=xn*xk;</span><br><span class="line"><span class="comment">%得到离散序列的傅里叶变换</span></span><br><span class="line">magX=<span class="built_in">abs</span>(X);</span><br><span class="line"><span class="comment">%求取该DTFT的模，其作用相当于|X|</span></span><br><span class="line"><span class="built_in">plot</span>(w,magX,<span class="string">'g'</span>)</span><br><span class="line"><span class="comment">%在频率[-2pi,2pi]范围内画出幅频响应</span></span><br><span class="line">axis([<span class="number">-2</span>*<span class="built_in">pi</span> <span class="number">2</span>*<span class="built_in">pi</span> <span class="number">0</span> <span class="number">3</span>])</span><br><span class="line">title(<span class="string">'幅频特性'</span>);</span><br><span class="line">xlabel(<span class="string">'w/圆周频率'</span>);</span><br><span class="line">ylabel(<span class="string">'|X|'</span>);</span><br><span class="line"><span class="comment">%设置横纵坐标轴</span></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">224</span>)</span><br><span class="line">angX=<span class="built_in">angle</span>(X);</span><br><span class="line"><span class="comment">%求取该DTFT的相位</span></span><br><span class="line"><span class="built_in">plot</span>(w,angX)</span><br><span class="line"><span class="comment">%在频率[-2pi,2pi]范围内画出相频响应</span></span><br><span class="line">title(<span class="string">'相频特性'</span>);</span><br><span class="line">xlabel(<span class="string">'w/圆周频率'</span>);</span><br><span class="line">ylabel(<span class="string">'相位'</span>);</span><br><span class="line">axis([<span class="number">-2</span>*<span class="built_in">pi</span> <span class="number">2</span>*<span class="built_in">pi</span> <span class="number">-4</span> <span class="number">4</span>])</span><br><span class="line"><span class="comment">%设置横纵坐标轴</span></span><br></pre></td></tr></table></figure></p>
<h1 id="4-结果显示"><a href="#4-结果显示" class="headerlink" title="4.结果显示"></a>4.结果显示</h1><p><img src="https://img-blog.csdnimg.cn/201910061609077.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="5-小结"><a href="#5-小结" class="headerlink" title="5.小结"></a>5.小结</h1><p>通过上边显示的图片我们可以看到并总结出如下结论。<br><strong>1.$X(e^{j\omega})$不仅是$\omega$的周期函数，而且是共轭对称的，因此对于实值序列，我们只画出其$[0,2\pi]$,画出其傅里叶变换的幅度和相位即可。<br>2.$x(n)$为在时域方面是离散的非周期信号，而通过DTFT变换之后，在频域方面是连续周期的。</strong></p>
<h1 id="6-参考文章"><a href="#6-参考文章" class="headerlink" title="6.参考文章"></a>6.参考文章</h1><blockquote>
<p>傅里叶变换matlab实现： <a href="https://blog.csdn.net/seek97/article/details/82813515" target="_blank" rel="noopener">https://blog.csdn.net/seek97/article/details/82813515</a></p>
</blockquote>
]]></content>
      <categories>
        <category>数字信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>数字信号处理matlab训练第【1弹】</title>
    <url>/2019/11/19/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86matlab%E8%AE%AD%E7%BB%83%E7%AC%AC%E3%80%901%E3%80%91%E5%BC%B9/</url>
    <content><![CDATA[<h1 id="1-产生一个均匀分布的白噪声信号u-n-画出波形，并检验其分布"><a href="#1-产生一个均匀分布的白噪声信号u-n-画出波形，并检验其分布" class="headerlink" title="# 1.产生一个均匀分布的白噪声信号u(n),画出波形，并检验其分布"></a># 1.产生一个均匀分布的白噪声信号u(n),画出波形，并检验其分布</h1><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%使用rand函数产生均值为0.5，幅度在0-1之间的均匀分布的伪随机数</span></span><br><span class="line"><span class="comment">%以下将会调用rand函数产生一个均匀分布的白噪声信号</span></span><br><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">N=<span class="number">5000</span>;<span class="comment">%长序列u(n)的长度</span></span><br><span class="line">u=<span class="built_in">rand</span>(<span class="number">1</span>,N);<span class="comment">%产生N个均与分布的伪随机数u(n)</span></span><br><span class="line">u_mean=<span class="built_in">mean</span>(u)<span class="comment">%求取u(n)的均值</span></span><br><span class="line">u_power=var(u)<span class="comment">%求取u(n)的方差</span></span><br><span class="line">subplot(<span class="number">211</span>);<span class="comment">%两行一列第1个图</span></span><br><span class="line"><span class="built_in">plot</span>(u(<span class="number">1</span>:<span class="number">100</span>));<span class="comment">%选取u(n)序列的前100个数据点</span></span><br><span class="line">grid on;<span class="comment">%显示方格</span></span><br><span class="line">ylabel(<span class="string">'u(n)'</span>);</span><br><span class="line">xlabel(<span class="string">'n'</span>)</span><br><span class="line">title(<span class="string">'1-100的u(n)数值显示'</span>)</span><br><span class="line"><span class="comment">%显示标题</span></span><br><span class="line">subplot(<span class="number">212</span>);<span class="comment">%两行一列第2个图</span></span><br><span class="line">hist(u,<span class="number">50</span>);grid on;</span><br><span class="line"><span class="comment">%对u(n)作直方图，检验其分布。50是对u(n)的取值范围（0-1）所分解的细胞数</span></span><br><span class="line">xlabel(<span class="string">'u(n)'</span>);</span><br><span class="line">ylabel(<span class="string">'个数'</span>);</span><br><span class="line">title(<span class="string">'u(n)的直方图'</span>)</span><br><span class="line"><span class="comment">%显示标题</span></span><br></pre></td></tr></table></figure>
<p>在上边的程序中我们可以看出，所求的白噪声$u(n)$的长度特别大(N=5000),在实际中，我们可能不需要这么大，之所以取这么大是希望当u(n)序列足够长时更接近于白噪声接近于均匀分布。我们可以根据自己需要选取自己喜欢的任何一段即可。<br>其结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20191005135804986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在上边的运行结果我们也可以得到该随机序列的均值(u_mean)和方差(u_power).<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">u_mean =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.5005</span></span><br><span class="line"></span><br><span class="line">u_power =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0836</span></span><br></pre></td></tr></table></figure><br>我们可以看到，产生的u(n)的均值为0.5，方差为0.0836（1/12）.</p>
<h1 id="2-产生一均匀分布、均值为0、功率为0-01的白噪声信号"><a href="#2-产生一均匀分布、均值为0、功率为0-01的白噪声信号" class="headerlink" title="2.产生一均匀分布、均值为0、功率为0.01的白噪声信号"></a>2.产生一均匀分布、均值为0、功率为0.01的白噪声信号</h1><p>在上边的例子中我们使用rand函数产生的u(n)为均值为0.5，功率$P_1=\frac{1}{12}$，现在需要将均值变为0、功率变为$P_2=\frac{1}{100}$。实现前者比较容易，只需将u(n)减去均值即可，而实现后者则需要调整u(n)的幅度。根据已知，我们可以得到以下公式：</p>
<script type="math/tex; mode=display">
\frac{P_2}{P_1}=\frac{\frac{1}{100}}{\frac{1}{12}}=\frac{\sum_{i=0}^{N}(a_{2i})^2}{\sum_{i=0}^{N}(a_{1i})^2}=12P_2</script><p>由于我们要实现的就是对于幅度的调整，来实现改变其方差，所以我们令以下等式成立$a_{2i}=a\cdot a_{1i}$ ,其中常数$a$就是我们所要求的一个比例因子。</p>
<script type="math/tex; mode=display">
\frac{\sum_{i=0}^{N}(a_{2i})^2}{\sum_{i=0}^{N}(a_{1i})^2}=\frac{\sum_{i=0}^{N}(a\cdot a_{1i})^2}{\sum_{i=0}^{N}(a_{1i})^2}\\ \quad
\\=\frac{(a\cdot a_{10})^2+(a\cdot a_{11})^2+...+(a\cdot a_{1N})^2}{a_{10}^2+a_{11}^2+...+a_{1N}^2}\\ \quad
\\=\frac{a^2\cdot(a_{10}^2+a_{11}^2+...+a_{1N}^2)}{a_{10}^2+a_{11}^2+...+a_{1N}^2}=\quad a^2\quad=12P_2</script><p>由上式的推导我们可以得出$a=\sqrt{12P_2}$,其中$P_2$的数值我们已知。<br>根据上边的推导，我们在matlab中敲下代码如下：<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%%产生一个均匀分布、均值为0、功率为0.01的白噪声信号u(n)</span></span><br><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">N=<span class="number">50000</span>;</span><br><span class="line"><span class="comment">%长序列u(n)的长度</span></span><br><span class="line">p_1=<span class="number">0.083</span>;</span><br><span class="line">p_2=<span class="number">0.01</span>;</span><br><span class="line"><span class="comment">%转换前的功率和所需要的功率</span></span><br><span class="line">u=<span class="built_in">rand</span>(<span class="number">1</span>,N);</span><br><span class="line"><span class="comment">%产生5000个0-1的伪随机数</span></span><br><span class="line">u=u-<span class="built_in">mean</span>(u);</span><br><span class="line"><span class="comment">%此处实现将均值置为0</span></span><br><span class="line">a=<span class="built_in">sqrt</span>(<span class="number">12</span>*p_2)</span><br><span class="line"><span class="comment">%求取常数比例因子</span></span><br><span class="line">u1=u*a;</span><br><span class="line"><span class="comment">%对序列的幅度进行调整</span></span><br><span class="line">u1_power=var(u1)</span><br><span class="line"><span class="comment">%求取该序列的方差</span></span><br><span class="line"><span class="built_in">plot</span>(u1(<span class="number">1</span>:<span class="number">100</span>));</span><br><span class="line"><span class="comment">%选取u(n)序列的前100个数据点</span></span><br><span class="line">grid on;</span><br><span class="line"><span class="comment">%显示网格</span></span><br><span class="line">xlabel(<span class="string">'n'</span>)</span><br><span class="line">ylabel(<span class="string">'u1(n)'</span>)</span><br><span class="line">title(<span class="string">'1-100的u1(n)数值显示'</span>)</span><br><span class="line"><span class="comment">%坐标轴设置</span></span><br></pre></td></tr></table></figure><br>运行之后，我们可以在输出行得到该序列的均值和功率以及需要求取的比例因子a：<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.3464</span></span><br><span class="line"></span><br><span class="line">u1_power =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.0100</span></span><br><span class="line"></span><br><span class="line">u1_mean =</span><br><span class="line"></span><br><span class="line">  <span class="number">-2.3466e-15</span></span><br></pre></td></tr></table></figure><br>其运行结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20191005162012833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>通过上边的显示结果，我们可以看出，显然该序列的均值为0，幅度范围在-0.1733-0.1733之间。到此我们已经实现了我们的需求。</p>
<h1 id="3-产生均值为0，方差为1，服从高斯（正态）分布的高斯白噪声-u-n-及其位移和尺度变换"><a href="#3-产生均值为0，方差为1，服从高斯（正态）分布的高斯白噪声-u-n-及其位移和尺度变换" class="headerlink" title="3.产生均值为0，方差为1，服从高斯（正态）分布的高斯白噪声$u(n)$及其位移和尺度变换"></a>3.产生均值为0，方差为1，服从高斯（正态）分布的高斯白噪声$u(n)$及其位移和尺度变换</h1><p>在matlab中我们一般使用randn函数来产生该函数，其调用格式与rand格式相同，改变功率的方法也相同，只不过我们只需要将式子改为$a=\sqrt{1\cdot(P_2)}$即可。<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%%产生均值为0，方差为1，服从高斯分布的白噪声信号u(n)</span></span><br><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line">N=<span class="number">50000</span>;</span><br><span class="line">u=<span class="built_in">randn</span>(<span class="number">1</span>,N);</span><br><span class="line"><span class="comment">%产生50000个满足均值为0，方差为1，服从正态分布的白噪声信号u(n)</span></span><br><span class="line">u_mean=<span class="built_in">mean</span>(u)</span><br><span class="line">u_power=var(u)</span><br><span class="line"><span class="comment">%输出其均值和方差</span></span><br><span class="line">set(gcf,<span class="string">'position'</span>,[<span class="number">180</span>,<span class="number">160</span>,<span class="number">800</span>,<span class="number">500</span>]);</span><br><span class="line"><span class="comment">%设置图片显示位置为（180，160）</span></span><br><span class="line"><span class="comment">%设置图片大小为（800，500）</span></span><br><span class="line">subplot(<span class="number">221</span>)</span><br><span class="line"><span class="built_in">plot</span>(u(<span class="number">1</span>:<span class="number">100</span>));</span><br><span class="line"><span class="comment">%选取u(n)序列的前100个数据点</span></span><br><span class="line">grid on;</span><br><span class="line"><span class="comment">%显示网格</span></span><br><span class="line">xlabel(<span class="string">'n'</span>);</span><br><span class="line">ylabel(<span class="string">'u(n)'</span>);</span><br><span class="line">title(<span class="string">'1-100的u(n)数值显示'</span>);</span><br><span class="line"><span class="comment">%坐标轴设置</span></span><br><span class="line">subplot(<span class="number">222</span>);</span><br><span class="line">hist(u,<span class="number">50</span>);grid on;</span><br><span class="line"><span class="comment">%对u2(n)作直方图，检验其分布。50是对u2(n)的取值范围（0-1）所分解的细胞数</span></span><br><span class="line">h=findobj(gca,<span class="string">'Type'</span>,<span class="string">'patch'</span>);</span><br><span class="line">set(h,<span class="string">'facecolor'</span>,<span class="string">'b'</span>);</span><br><span class="line"><span class="comment">%改变柱状图颜色</span></span><br><span class="line"><span class="comment">%显示网格</span></span><br><span class="line">xlabel(<span class="string">'u(n)'</span>);</span><br><span class="line">ylabel(<span class="string">'个数'</span>);</span><br><span class="line">title(<span class="string">'u(n)的直方图,均值为0，方差为1'</span>);</span><br><span class="line"><span class="comment">%坐标轴设置</span></span><br><span class="line">subplot(<span class="number">223</span>)</span><br><span class="line">p_2=<span class="number">0.1</span>;</span><br><span class="line"><span class="comment">%为新需要得到的方差赋值</span></span><br><span class="line">a=<span class="built_in">sqrt</span>(p_2);</span><br><span class="line"><span class="comment">%求取缩放因子a</span></span><br><span class="line">u1=a*u;</span><br><span class="line"><span class="comment">%得到功率(方差)为0.1的序列u1</span></span><br><span class="line">hist(u1,<span class="number">50</span>);grid on;</span><br><span class="line"><span class="comment">%对u1(n)作直方图，检验其分布。50是对u1(n)的取值范围（0-1）所分解的细胞数</span></span><br><span class="line"><span class="comment">%显示网格</span></span><br><span class="line">u1_mean=<span class="built_in">mean</span>(u)</span><br><span class="line">u1_power=var(u)</span><br><span class="line"><span class="comment">%输出其均值和方差</span></span><br><span class="line">h=findobj(gca,<span class="string">'Type'</span>,<span class="string">'patch'</span>);</span><br><span class="line">set(h,<span class="string">'facecolor'</span>,<span class="string">'r'</span>);</span><br><span class="line"><span class="comment">%改变柱状图颜色</span></span><br><span class="line">axis([<span class="number">-4</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">4000</span>])</span><br><span class="line"><span class="comment">%设置坐标轴显示范围</span></span><br><span class="line">xlabel(<span class="string">'u1(n)'</span>);</span><br><span class="line">ylabel(<span class="string">'个数'</span>);</span><br><span class="line">title(<span class="string">'u1(n)的直方图,均值为0，方差为0.1'</span>);</span><br><span class="line"><span class="comment">%坐标轴设置</span></span><br><span class="line">subplot(<span class="number">224</span>)</span><br><span class="line">u2=<span class="number">3</span>+u;</span><br><span class="line"><span class="comment">%设置均值为3</span></span><br><span class="line">hist(u2,<span class="number">50</span>);grid on;</span><br><span class="line"><span class="comment">%对u2(n)作直方图，检验其分布。50是对u2(n)的取值范围（0-1）所分解的细胞数</span></span><br><span class="line"><span class="comment">%显示网格</span></span><br><span class="line">u2_mean=<span class="built_in">mean</span>(u)</span><br><span class="line">u2_power=var(u)</span><br><span class="line"><span class="comment">%输出其均值和方差</span></span><br><span class="line">h=findobj(gca,<span class="string">'Type'</span>,<span class="string">'patch'</span>);</span><br><span class="line">set(h,<span class="string">'facecolor'</span>,<span class="string">'r'</span>);</span><br><span class="line"><span class="comment">%改变柱状图颜色</span></span><br><span class="line">axis([<span class="number">-4</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">4000</span>])</span><br><span class="line"><span class="comment">%设置坐标轴显示范围</span></span><br><span class="line">xlabel(<span class="string">'u2(n)'</span>);</span><br><span class="line">ylabel(<span class="string">'个数'</span>);</span><br><span class="line">title(<span class="string">'u2(n)的直方图,均值为3，方差为1'</span>);</span><br><span class="line"><span class="comment">%坐标轴设置</span></span><br></pre></td></tr></table></figure><br>在我们执行完以上程序后，我们则将会得到以下图示：<br><img src="https://img-blog.csdnimg.cn/201910051734000.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>另外在执行结束之后，我们也可以在输出行看到我们的各个数据的值<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">u_mean =</span><br><span class="line"></span><br><span class="line">   <span class="number">-0.0010</span></span><br><span class="line"></span><br><span class="line">u_power =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0034</span></span><br><span class="line"></span><br><span class="line">u1_mean =</span><br><span class="line"></span><br><span class="line">  <span class="number">-3.2553e-04</span></span><br><span class="line"></span><br><span class="line">u1_power =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.1003</span></span><br><span class="line"></span><br><span class="line">u2_mean =</span><br><span class="line"></span><br><span class="line">    <span class="number">2.9990</span></span><br><span class="line"></span><br><span class="line">u2_power =</span><br><span class="line"></span><br><span class="line">    <span class="number">1.0034</span></span><br></pre></td></tr></table></figure><br>我们也可以看到，以上各个数值均是我们所需求的那样。</p>
]]></content>
      <categories>
        <category>数字信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>windows上gunplot的安装和使用</title>
    <url>/2019/11/19/window%E4%B8%8Agnuplot%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E3%80%901%E3%80%91/</url>
    <content><![CDATA[<h2 id="1-gnuplot的原理及用途"><a href="#1-gnuplot的原理及用途" class="headerlink" title="1.gnuplot的原理及用途"></a>1.gnuplot的原理及用途</h2><p>$\qquad$它是一个小巧实用的数据处理工具，主要用来绘制2D/3D的数据或者函数图像，但是也包含数学计算、拟合等功能。虽然它的名字里边有个“gnu”,但是它和大名鼎鼎的<a href="http://www.gnu.org/" target="_blank" rel="noopener">GNU</a>没有什么关系，使用的授权协议也不是GNU GPL,所以这里的“gnu”是小写，全名应该读作“new plot”。<br>所有主流的Linux版本都包含gnuplot,因此在Linux上安装很简单，只要用各相应发行版的软件安装工具直接安装就可以了。<br>$\qquad$在苹果电脑的安装也并不复杂，<a href="https://www.macports.org/" target="_blank" rel="noopener">MacPorts</a>项目把很多Linux上的应用程序移植到了苹果系统上，其中就包括gnuplot.只要在苹果电脑上安装MacPorts,之后就可以使用port命令进行安装了。<br>$\qquad$在windows下，可以直接到<a href="http://www.gnuplot.info/" target="_blank" rel="noopener">gnuplot</a>在<a href="https://sourceforge.net/projects/gnuplot/files/gnuplot/" target="_blank" rel="noopener">sourceforge</a>的下载页面进行下载，解压之后，直接安装即可使用了。</p>
<h2 id="2-gnuplot的下载及安装"><a href="#2-gnuplot的下载及安装" class="headerlink" title="2.gnuplot的下载及安装"></a>2.gnuplot的下载及安装</h2><p>$\qquad$首先在官网下载gnuplot的最新版本，<a href="https://www.typora.io/#windows" target="_blank" rel="noopener">下载地址</a>，之后按照提示，更改安装位置即可。<br><img src="https://img-blog.csdnimg.cn/20190920151746978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$之后在软件安装页面找到并运行  <strong>gnuplot 5.2 patchlevel 7</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20190920151852296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$在这里我们不妨先实验一下画图效果，以下我们显示画出<strong>sinx</strong>和<strong>cosx</strong>的图像</p>
<p><img src="https://img-blog.csdnimg.cn/20190920151914519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190920152029658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$到这里我们的gnuplot的安装大功告成了。</p>
<h2 id="3-使用gcc编译c语言程序"><a href="#3-使用gcc编译c语言程序" class="headerlink" title="3.使用gcc编译c语言程序"></a>3.使用gcc编译c语言程序</h2><p>$\qquad$在编译之前，我们先创建一个c语言文件，主要实现生成画图所需要的离散变量数组。以下我们以产生<strong>sinc</strong>函数为例，并将该函数命名为<strong>test.c</strong>。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;	 <span class="comment">//获取负半轴部分数据</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1600</span>; i &gt;<span class="number">0</span>; i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">double</span> t;</span><br><span class="line">		t=i/<span class="number">16.0</span>;<span class="comment">//设置采集时间=采样点数/采样频率</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.2f %.2f\n"</span>,(<span class="keyword">float</span>)(-t),(<span class="built_in">sin</span>(t)/t));</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">//获取正半轴部分数据</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">1600</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">double</span> t;</span><br><span class="line">		t=i/<span class="number">16.0</span>;<span class="comment">//设置采集时间=采样点数/采样频率</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.2f %.2f\n"</span>,(<span class="keyword">float</span>)(t),(<span class="built_in">sin</span>(t)/t));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对其使用<strong>gcc</strong>进行编译则有:<br><img src="https://img-blog.csdnimg.cn/20190920152115895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>编译完成之后,我们就会发现多了一个<strong>test.exe</strong>文件，接下来我们要运行该可执行文件，并且将它<strong>printf</strong>的结果重定向到<strong>sinc.bat</strong>文件。</p>
<p><img src="https://img-blog.csdnimg.cn/20190920152140951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>如果我们此时使用记事本打开sinc.bat文件我们就会发现，整个函数的输出结果全被保存到这里。<br><img src="https://img-blog.csdnimg.cn/20190920152336186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="4-使用gnuplot调用c语言程序所产生的数据并且画出图像"><a href="#4-使用gnuplot调用c语言程序所产生的数据并且画出图像" class="headerlink" title="4.使用gnuplot调用c语言程序所产生的数据并且画出图像"></a>4.使用gnuplot调用c语言程序所产生的数据并且画出图像</h2><p>$\qquad$在做这一步之前我们需要做的一点就是，需要先将<strong>gnuplot.exe</strong>所在的路径，存入环境变量<strong>path</strong>中，这里我的路径是：<br><img src="https://img-blog.csdnimg.cn/20190920152428672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$添加完成之后点击确定即可。然后在含有<strong>sinc.bat</strong>文件的文件夹下进入cmd命令行窗口,之后输入<strong>gnuplot</strong>,调用该画图函数。然后再在新出来的窗口输入命令.<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">plot [<span class="number">-16</span>:<span class="number">16</span>] [<span class="number">-0.3</span>:<span class="number">1</span>] <span class="string">"sinc.bat"</span>  u <span class="number">1</span>:<span class="number">2</span> w l lt <span class="number">1</span> lw <span class="number">1</span></span><br></pre></td></tr></table></figure><br>$\qquad$具体操作以及结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20190920152543860.gif" alt="在这里插入图片描述"></p>
<h2 id="5-参考文章"><a href="#5-参考文章" class="headerlink" title="5.参考文章"></a>5.参考文章</h2><blockquote>
<p>史上最完美的Typora快捷键大全：<a href="https://blog.csdn.net/cris_zz/article/details/82919401" target="_blank" rel="noopener">https://blog.csdn.net/cris_zz/article/details/82919401</a></p>
<p>c语言及gnuplot任意波形产生以及作图-三角波：<a href="https://blog.csdn.net/shaoyubin999/article/details/82819974" target="_blank" rel="noopener">https://blog.csdn.net/shaoyubin999/article/details/82819974</a></p>
<p>gnuplot使用说明：<a href="https://www.cnblogs.com/waterystone/p/5085801.html" target="_blank" rel="noopener">https://www.cnblogs.com/waterystone/p/5085801.html</a></p>
<p>gnuplot介绍：<a href="https://www.xuebuyuan.com/572269.html" target="_blank" rel="noopener">https://www.xuebuyuan.com/572269.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>c语言画图</category>
      </categories>
  </entry>
  <entry>
    <title>超详细的gunplot使用教程</title>
    <url>/2019/11/19/%E8%B6%85%E8%AF%A6%E7%BB%86%E7%9A%84gnuplot%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E3%80%902%E3%80%91/</url>
    <content><![CDATA[<h1 id="1-gnuplot参数介绍及演示"><a href="#1-gnuplot参数介绍及演示" class="headerlink" title="1.gnuplot参数介绍及演示"></a>1.gnuplot参数介绍及演示</h1><h2 id="1-1首先来解释一下会用到的各类参数以及其解释"><a href="#1-1首先来解释一下会用到的各类参数以及其解释" class="headerlink" title="1.1首先来解释一下会用到的各类参数以及其解释"></a>1.1首先来解释一下会用到的各类参数以及其解释</h2><div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>缩写</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>With</td>
<td>w</td>
<td>with后边跟需要指定的样式</td>
</tr>
<tr>
<td>Line</td>
<td>l</td>
<td>用线l显示</td>
</tr>
<tr>
<td>Point</td>
<td>p</td>
<td>用点显示</td>
</tr>
<tr>
<td>LinePoints</td>
<td>lp</td>
<td>用线和点画，对数据绘图时有用</td>
</tr>
<tr>
<td>LineType</td>
<td>lt</td>
<td>线的样式（0代表虚线，1-7代表实线,颜色分别为紫、蓝、绿、橙、黄、靛、红。超过7以后颜色依次循环）</td>
</tr>
<tr>
<td>LineWidth</td>
<td>lw</td>
<td>线的宽度（level从0开始，默认为1）</td>
</tr>
<tr>
<td>PointType</td>
<td>pt</td>
<td>点的样式（level从0开始，默认为1）</td>
</tr>
<tr>
<td>PointSize</td>
<td>ps</td>
<td>点的宽度（level从0开始，默认为1）</td>
</tr>
</tbody>
</table>
</div>
<h2 id="1-2-画图实际测试"><a href="#1-2-画图实际测试" class="headerlink" title="1.2 画图实际测试"></a>1.2 画图实际测试</h2><p>为了显示出不同的差别，此处我谨以sinx函数或者cos函数来进行显示：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//当没有设置其格式时，调用默认的设置</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920160153918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w p</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用点画</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920161057593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w l</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用线画</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920161010753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w lp</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用点和线画</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920160735752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w lp lt 0</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用点和线画，线的种类为0</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920160839952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w l lt 1</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用线画，线的种类为1</span></span></span><br></pre></td></tr></table></figure></p>
<p><img src="https://img-blog.csdnimg.cn/20190920161257971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w l lt 7</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用线画，线的种类为7</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920162128303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w l lt 1 lw 4</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用线画，线的种类为1，线的宽度为4</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920162321667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w p pt 4</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用点画，点的种类为4</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920162840218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">plot <span class="title">sin</span><span class="params">(x)</span> w p pt 4 ps 2</span></span><br><span class="line"><span class="function"><span class="comment">//表示使用点画。点的种类为4，点的大小为2</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/2019092016304359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-3-其它参数介绍（约定范围、坐标轴设定）"><a href="#1-3-其它参数介绍（约定范围、坐标轴设定）" class="headerlink" title="1.3 其它参数介绍（约定范围、坐标轴设定）"></a>1.3 其它参数介绍（约定范围、坐标轴设定）</h2><h3 id="1-3-1-约束画图范围"><a href="#1-3-1-约束画图范围" class="headerlink" title="1.3.1 约束画图范围"></a>1.3.1 约束画图范围</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">plot [<span class="number">-5</span>:<span class="number">5</span>] [<span class="number">-1.2</span>:<span class="number">1.2</span>] <span class="built_in">sin</span>(x)</span><br><span class="line"><span class="comment">//表示x取值范围为[-5,5],y的取值范围为[-1.2,1.2]</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920164811487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="1-3-2-关于坐标轴的设定"><a href="#1-3-2-关于坐标轴的设定" class="headerlink" title="1.3.2 关于坐标轴的设定"></a>1.3.2 关于坐标轴的设定</h3><p>在对于坐标轴的设定，要注意的一点就是，在画图之前执行命令。<br>命令     | 含义<br>—————— | —————<br>set xlabel ‘x’ |x轴标为‘x’<br>set ylabel ‘y’ | y轴标为’y’<br>set ylabel ‘DOS’ tc lt 3 | ‘DOS’的颜色用第三种颜色<br>set xtics 1.0|x轴的主刻度的宽度为1.0，同样可以为y轴定义ytics<br>set mxtics 3|x轴上每个主刻度中画3个分刻度，同样可以为y轴定义mytics<br>set border 3|设为第三种边界，同样可以为上边的x轴（称为x2）和右边y（称为y2）轴进行设置，即x2tics，mx2tics，y2tics，my2tics。<br>set xtics nomirror|去掉上边x的刻度，同样可以为ytics设置<br>unset x2tics|去掉上边x的标度，同样可以为y2tics设置<br>下面我们就来验证一下上边的图吧。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; set title 'kmust team'</span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> xlabel <span class="string">'x'</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> ylabel <span class="string">'y'</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> xtics <span class="number">1.0</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> mxtics <span class="number">3</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> border <span class="number">3</span></span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line">gnuplot&gt;</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920170828421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="1-3-3-图例"><a href="#1-3-3-图例" class="headerlink" title="1.3.3 图例"></a>1.3.3 图例</h3><div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>set key left</td>
<td>放在左边，有left 和right两个选项</td>
</tr>
<tr>
<td>set key bottom</td>
<td>放在下边，只有这一个选项；默认在上边</td>
</tr>
<tr>
<td>set key outside</td>
<td>放在外边，但只能在右面的外边</td>
</tr>
<tr>
<td>set key left bottom</td>
<td>表示放在左下边</td>
</tr>
</tbody>
</table>
</div>
<p>代码示例：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> key right bottom</span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> title <span class="string">"kmust"</span></span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//将图例放在右下角</span></span></span><br><span class="line"><span class="function"><span class="comment">//设置标题为“kmust”</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920194230103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="1-3-4-在图中任意位置插入文字"><a href="#1-3-4-在图中任意位置插入文字" class="headerlink" title="1.3.4 在图中任意位置插入文字"></a>1.3.4 在图中任意位置插入文字</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; set label 'I Love Kmust!' at 2.5,0.5</span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在坐标（2.5，0.5）处插入文字</span></span></span><br><span class="line"><span class="function"><span class="comment">//如果想要删除文字就使用 unset label 1(此处数字代表要删除label的序号)</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920203757755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-4-同时画出多条曲线"><a href="#1-4-同时画出多条曲线" class="headerlink" title="1.4 同时画出多条曲线"></a>1.4 同时画出多条曲线</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">plot sin(x),cos(x)</span><br><span class="line"><span class="comment">//注意连个函数之间要使用逗号分隔开</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920171358263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>当然两个函数之间也可以单独约束<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">plot sin(x) title 'sin(x)' w l lt 0 lw 2, cos(x) title 'cos(x)' w l lt 2 lw 2</span><br><span class="line"><span class="comment">//注意连个函数之间要使用逗号分隔开，每个函数的绘画要求紧跟着对应的函数</span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920171518832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-5-x轴时间设置"><a href="#1-5-x轴时间设置" class="headerlink" title="1.5 x轴时间设置"></a>1.5 x轴时间设置</h2><div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>set xdata time</td>
<td>X轴设置为时间格式</td>
</tr>
<tr>
<td>set timefmt “%Y-%m-%d”</td>
<td>文件中时间格式</td>
</tr>
<tr>
<td>set format x “%m/%d”</td>
<td>目标时间格式~</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> xdata time</span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> timefmt <span class="string">"%Y-%m-%d"</span></span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//设置x轴为时间格式，并且其显示形式为年-月-日</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920195359322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_60#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-6-在图中添加直线和箭头"><a href="#1-6-在图中添加直线和箭头" class="headerlink" title="1.6 在图中添加直线和箭头"></a>1.6 在图中添加直线和箭头</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> arrow from <span class="number">0.0</span>,<span class="number">0.0</span> to <span class="number">2.0</span>,<span class="number">0.0</span></span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//在图的中心点（0，0）向（2，0）画一条射线</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920200240285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> arrow from <span class="number">0.0</span>,<span class="number">0.0</span> to <span class="number">0.0</span>,<span class="number">-0.4</span> nohead</span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//只画一条直线的话，在画箭头的语句上方添加nohead标签</span></span></span><br><span class="line"><span class="function"><span class="comment">//从中心点（0，0）到（0，-0.4）画一条直线</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920200806563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>除此之外我们还可以进行颜色调制<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> arrow from <span class="number">0.0</span>,<span class="number">0.0</span> to <span class="number">-2.0</span>,<span class="number">0.4</span> lt <span class="number">2</span> lw <span class="number">2</span></span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//从中心点（0，0）到（-2.0，0.4）画一条绿色射线，线条粗细等级为2</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920201216642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>如果我们不小心画错了一个图形，我们又该如何删除呢，很简单，一句话就搞定了。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; unset arrow <span class="number">3</span></span><br><span class="line">gnuplot&gt; unset arrow <span class="number">2</span></span><br><span class="line">gnuplot&gt; unset arrow <span class="number">1</span></span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//如果我们发现第几个值线画错了，就可以使用语句unset删除对应的直线即可</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920201549513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-7-读取dat、txt文件进行画图"><a href="#1-7-读取dat、txt文件进行画图" class="headerlink" title="1.7 读取dat、txt文件进行画图"></a>1.7 读取dat、txt文件进行画图</h2><p>在用c语言进行程序设计的时候，有时就需要画图任务，这时gnuplot可以读取dat、txt文件内的内容，并再进行绘画。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> arrow from <span class="number">-16.0</span>,<span class="number">0.0</span> to <span class="number">16.0</span>,<span class="number">0.0</span> nohead</span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> arrow from <span class="number">-0.3</span>,<span class="number">0.0</span> to <span class="number">1.0</span>,<span class="number">0.0</span></span><br><span class="line">gnuplot&gt; plot [<span class="number">-16</span>:<span class="number">16</span>] [<span class="number">-0.3</span>:<span class="number">1</span>] <span class="string">"sinc.bat"</span>  u <span class="number">1</span>:<span class="number">2</span> w l lt <span class="number">1</span> lw <span class="number">1</span></span><br><span class="line"><span class="comment">//从（-16，0）到（16，0）画一条直线</span></span><br><span class="line"><span class="comment">//从（-0.3，0）到（1.0，0）画一条带箭头射线</span></span><br><span class="line"><span class="comment">//读取“sinc.bat”文件内的数据，并用其内的第一列和第二列作图，，并且设置线条颜色和粗细。</span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920202433729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-8-设定图的大小和位置"><a href="#1-8-设定图的大小和位置" class="headerlink" title="1.8 设定图的大小和位置"></a>1.8 设定图的大小和位置</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> <span class="built_in">size</span> <span class="number">0.5</span>,<span class="number">0.5</span></span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//长宽均为默认宽度的一半，建议用这个取值，尤其是画成ps或eps图形的时候</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920204413633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> origin <span class="number">0.0</span>,<span class="number">0.5</span></span><br><span class="line">gnuplot&gt; <span class="function">plot <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//设定图的最左下角的那一点在图形面板中的位置。这里图将出现在左上角。</span></span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920204545846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-9-画多个图"><a href="#1-9-画多个图" class="headerlink" title="1.9 画多个图"></a>1.9 画多个图</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> multiplot</span><br><span class="line"><span class="comment">//设置为多图模式</span></span><br><span class="line">multiplot&gt; <span class="built_in">set</span> origin <span class="number">0.0</span>,<span class="number">0.5</span></span><br><span class="line"><span class="comment">//设置第一个图的原点的位置</span></span><br><span class="line">multiplot&gt; <span class="built_in">set</span> <span class="built_in">size</span> <span class="number">0.5</span>,<span class="number">0.5</span></span><br><span class="line"><span class="comment">//设置第一个图的大小，长和宽均为整个图的一半</span></span><br><span class="line">multiplot&gt; <span class="function">plot <span class="title">tan</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//开始绘制第一个图</span></span></span><br><span class="line">multiplot&gt; set origin 0.5,0.5</span><br><span class="line"><span class="comment">//设置第2个图的原点的位置</span></span><br><span class="line">multiplot&gt; <span class="built_in">set</span> <span class="built_in">size</span> <span class="number">0.5</span>,<span class="number">0.5</span></span><br><span class="line"><span class="comment">//设置第2个图的大小，长和宽均为整个图的一半</span></span><br><span class="line">multiplot&gt; <span class="function">plot  <span class="title">cos</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//开始绘制第2个图</span></span></span><br><span class="line">multiplot&gt; set origin 0.0,0.0</span><br><span class="line"><span class="comment">//设置第3个图的原点的位置</span></span><br><span class="line">multiplot&gt; <span class="built_in">set</span> <span class="built_in">size</span> <span class="number">0.5</span>,<span class="number">0.5</span></span><br><span class="line"><span class="comment">//设置第3个图的大小，长和宽均为整个图的一半</span></span><br><span class="line">multiplot&gt; <span class="function">plot  <span class="title">sin</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//开始绘制第3个图</span></span></span><br><span class="line">multiplot&gt; set origin 0.5,0.0</span><br><span class="line"><span class="comment">//设置第4个图的原点的位置</span></span><br><span class="line">multiplot&gt; <span class="built_in">set</span> <span class="built_in">size</span> <span class="number">0.5</span>,<span class="number">0.5</span></span><br><span class="line"><span class="comment">//设置第4个图的大小，长和宽均为整个图的一半</span></span><br><span class="line">multiplot&gt; plot <span class="number">1</span>/x</span><br><span class="line"><span class="comment">//开始绘制第4个图</span></span><br></pre></td></tr></table></figure>
<p>绘制完成之后就会出现这个四合一的图，当然我们还可以 为每个图设置自己的特有属性，比如颜色、标题等。<br><img src="https://img-blog.csdnimg.cn/20190920212747179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="2-gnuplot进阶"><a href="#2-gnuplot进阶" class="headerlink" title="2.gnuplot进阶"></a>2.gnuplot进阶</h1><h2 id="2-1-使两坐标轴的单位长度等长"><a href="#2-1-使两坐标轴的单位长度等长" class="headerlink" title="2.1 使两坐标轴的单位长度等长"></a>2.1 使两坐标轴的单位长度等长</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt;  <span class="built_in">set</span> <span class="built_in">size</span> square</span><br><span class="line"><span class="comment">//设置形状为方形</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> <span class="built_in">size</span> <span class="number">0.5</span>,<span class="number">0.5</span></span><br><span class="line"><span class="comment">//设置图形的大小各为一半</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> xrange[<span class="number">-10</span>:<span class="number">10</span>]</span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> yrange[<span class="number">-10</span>:<span class="number">10</span>]</span><br><span class="line"><span class="comment">//设置x,y的范围相同</span></span><br><span class="line">gnuplot&gt; plot x+<span class="number">2</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920220255315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2-2-在同一张图里利用左右两边的y轴分别画图"><a href="#2-2-在同一张图里利用左右两边的y轴分别画图" class="headerlink" title="2.2 在同一张图里利用左右两边的y轴分别画图"></a>2.2 在同一张图里利用左右两边的y轴分别画图</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> xtics nomirror</span><br><span class="line"><span class="comment">//去掉上边坐标轴x2的刻度</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> ytics nomirror</span><br><span class="line"><span class="comment">//去掉上边坐标轴y2的刻度</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> x2tics</span><br><span class="line"><span class="comment">//让上面坐标轴x2刻度自动产生</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> y2tics</span><br><span class="line"><span class="comment">//让上面坐标轴y2刻度自动产生</span></span><br><span class="line">gnuplot&gt; plot sin(x),cos(x) axes x1y2</span><br><span class="line"><span class="comment">//用x1y2坐标，axes x1y2表示用x1y2坐标轴</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190920220659444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; plot sin(x),cos(x) axes x2y2</span><br><span class="line"><span class="comment">//用x2y2坐标，axes x2y2表示用x2y2坐标轴</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> x2range[<span class="number">-20</span>:<span class="number">20</span>]</span><br><span class="line"><span class="comment">//设定x2坐标的范围</span></span><br><span class="line">gnuplot&gt; report</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920220837819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> xrange[<span class="number">-5</span>:<span class="number">5</span>]</span><br><span class="line"><span class="comment">//设定x的范围</span></span><br><span class="line">gnuplot&gt; replot</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920221004407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> xlabel <span class="string">'x'</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> x2label <span class="string">'t'</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> ylabel <span class="string">'y'</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> y2label <span class="string">'s'</span></span><br><span class="line"><span class="comment">//为图形的上下左右分别起标</span></span><br><span class="line">gnuplot&gt; replot</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920221127740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; set title 'The figure'</span><br><span class="line"><span class="comment">//设置标题</span></span><br><span class="line">gnuplot&gt; replot</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20190920221253818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2-3画漂亮的pm3D图"><a href="#2-3画漂亮的pm3D图" class="headerlink" title="2.3画漂亮的pm3D图"></a>2.3画漂亮的pm3D图</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> pm3d</span><br><span class="line"><span class="comment">//设置pm3d模式</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> isosamples <span class="number">50</span>,<span class="number">50</span></span><br><span class="line"><span class="comment">//设置网格点为50x50</span></span><br><span class="line">gnuplot&gt; splot x**<span class="number">2</span>+y**<span class="number">2</span></span><br><span class="line"><span class="comment">//画三维图像</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190921162344681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2-4-画等高线"><a href="#2-4-画等高线" class="headerlink" title="2.4 画等高线"></a>2.4 画等高线</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; <span class="built_in">set</span> dgrid3d <span class="number">100</span>,<span class="number">100</span></span><br><span class="line"><span class="comment">//设置三维表面的网格书目</span></span><br><span class="line">gnuplot&gt; <span class="built_in">set</span> contour</span><br><span class="line"><span class="comment">//设置画等高线</span></span><br><span class="line">gnuplot&gt; splot x**<span class="number">2</span>+y**<span class="number">2</span></span><br><span class="line"><span class="comment">//画图像</span></span><br></pre></td></tr></table></figure>
<p> <img src="https://img-blog.csdnimg.cn/20190921163220948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2-5-利用脚本文件避免重复输入"><a href="#2-5-利用脚本文件避免重复输入" class="headerlink" title="2.5 利用脚本文件避免重复输入"></a>2.5 利用脚本文件避免重复输入</h2><p>我在文件夹下创建了一个 try.plt文件，其内容如下所示<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">reset</span><br><span class="line"><span class="comment">//重置画图属性</span></span><br><span class="line"><span class="built_in">set</span> pm3d</span><br><span class="line"><span class="comment">//设置为pm3d模式</span></span><br><span class="line">unset ztics</span><br><span class="line"><span class="comment">//取消z轴标题</span></span><br><span class="line"><span class="built_in">set</span> isosamples <span class="number">200</span>,<span class="number">200</span></span><br><span class="line"><span class="comment">//设置网格属性为200x200</span></span><br><span class="line">splot x**<span class="number">2</span>+y**<span class="number">2</span> w pm3d</span><br><span class="line"><span class="comment">//开始画图并且设置为pm3d模式</span></span><br></pre></td></tr></table></figure><br>然后只需在gnuplot命令界面输入<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">load 'try.plt'</span><br><span class="line"><span class="comment">//加载plt文件，执行画图任务</span></span><br></pre></td></tr></table></figure><br>其结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20190921165002556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2-6-gnuplot画GIF动图"><a href="#2-6-gnuplot画GIF动图" class="headerlink" title="2.6 gnuplot画GIF动图"></a>2.6 gnuplot画GIF动图</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> term gif animate</span><br><span class="line"><span class="comment">//设置可以画动画</span></span><br><span class="line"><span class="built_in">set</span> output <span class="string">"e1.gif"</span></span><br><span class="line"><span class="comment">//设置输出的文件路径</span></span><br><span class="line"><span class="built_in">set</span> xrange [<span class="number">0</span>:<span class="number">4</span>*pi]</span><br><span class="line"><span class="built_in">set</span> yrange [<span class="number">-1</span>:<span class="number">1</span>]</span><br><span class="line"><span class="comment">//设置x,y范围</span></span><br><span class="line"><span class="keyword">do</span> <span class="keyword">for</span> [i=<span class="number">0</span>:<span class="number">40</span>]&#123;</span><br><span class="line">  plot <span class="built_in">sin</span>(x+i*pi/<span class="number">40</span>) lw <span class="number">1.5</span> title <span class="built_in">sprintf</span>(<span class="string">"t=%i"</span>,i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//循环输出图像</span></span><br><span class="line"><span class="built_in">set</span> output</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190921170213773.gif#pic_center" alt="在这里插入图片描述"></p>
<h1 id="3-参考文章"><a href="#3-参考文章" class="headerlink" title="3.参考文章"></a>3.参考文章</h1><blockquote>
<p>gnuplot使用: <a href="https://www.cnblogs.com/waterystone/p/5085801.html" target="_blank" rel="noopener">https://www.cnblogs.com/waterystone/p/5085801.html</a><br>gnuplot生成gif动图：<a href="https://blog.csdn.net/weixin_34187862/article/details/85648365" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34187862/article/details/85648365</a><br>gnuplot三维绘图;<a href="https://blog.csdn.net/ouening/article/details/72141345" target="_blank" rel="noopener">https://blog.csdn.net/ouening/article/details/72141345</a></p>
</blockquote>
]]></content>
      <categories>
        <category>c语言画图</category>
      </categories>
  </entry>
  <entry>
    <title>matlab和c语言在不调包的情况下实现时域卷积</title>
    <url>/2019/11/19/matlab%E5%92%8Cc%E8%AF%AD%E8%A8%80%E5%9C%A8%E4%B8%8D%E8%B0%83%E7%94%A8%E5%8C%85%EF%BC%88%E5%BA%93%EF%BC%89%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E5%AE%9E%E7%8E%B0%E6%97%B6%E5%9F%9F%E5%8D%B7%E7%A7%AF/</url>
    <content><![CDATA[<h1 id="1-实验要求，matlab实现卷积运算（不调用函数和方法）"><a href="#1-实验要求，matlab实现卷积运算（不调用函数和方法）" class="headerlink" title="1.实验要求，matlab实现卷积运算（不调用函数和方法）"></a>1.实验要求，matlab实现卷积运算（不调用函数和方法）</h1><h2 id="1-1-卷积原理讲解"><a href="#1-1-卷积原理讲解" class="headerlink" title="1.1 卷积原理讲解"></a>1.1 卷积原理讲解</h2><script type="math/tex; mode=display">
y[n]=\sum_{k=-\infty}^{\infty}{x[k]h[n-k]}=x[n]*h[n]\\s(t)=f_1(t)*f_2(t)=\int_{-\infty}^tf_1(\tau)f_1(t-\tau)d\tau</script><p>$\qquad$上述两式分别为离散卷积运算和连续卷积运算。实际上我们的电脑要进行卷积运算就是将连续的函数离散化，再来进行离散的卷积计算。</p>
<h2 id="1-2-卷积计算步骤（图解法）"><a href="#1-2-卷积计算步骤（图解法）" class="headerlink" title="1.2 卷积计算步骤（图解法）"></a>1.2 卷积计算步骤（图解法）</h2><blockquote>
<p><strong>1.翻折</strong>  先在坐标轴上画出$x(m)$和$h(m)$,将$h(m)$以纵坐标为坐标轴折叠成$h(-m)$。<br><strong>2.移位</strong> 将$h(-m)$移位$n$,得到$h(n-m)$[或将$f_1(-\tau)$移位$t$,得到$f_1(t-\tau)$],当n或t为正数时右移n或t,当n或t为负数时左移n或t。<br><strong>3.相乘</strong> 将$h(n-m)$[或$f_1(t-\tau)$]与$x(m)$[或$f_1(\tau)$]的对应序列值[(数值)]对应相乘<br><strong>4.相加</strong> 将所有的乘机累加[(积分)]起来，就得到了$y(n)$[或$s(t)$]</p>
</blockquote>
<h2 id="1-3-matlab画出两个窗函数"><a href="#1-3-matlab画出两个窗函数" class="headerlink" title="1.3 matlab画出两个窗函数"></a>1.3 matlab画出两个窗函数</h2><p>$\qquad$以下列出的是产生两个门函数的matlab代码，式中主要运用了matlab的<strong>f=@(x)</strong> 函数句柄 ，它主要是包含了函数的路径、函数名、类型以及可能存在的重载方法。函数句柄必须通过专门的定义创建的,而一般的图像的句柄是自动建立的。使用该形式的函数的方法相比于.m函数文件的优点就是，因为在计算机开始执行运算的时候是需要在整个的matlab代码中去寻找是否存在该.m文件，我们也知道，matlab整个的文件数量是非常多的，所以直接调用.m文件是会耗费一些时间的，而如果我们直接采用 <strong>@</strong> 的方式则会节省一部分时间。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line"><span class="built_in">clear</span></span><br><span class="line">%定义函数，该函数主要实现任意形式的门函数</span><br><span class="line">high_1=<span class="number">1</span>;</span><br><span class="line">left_1=<span class="number">0</span>;</span><br><span class="line">right_1=<span class="number">1</span>;</span><br><span class="line">%定义要产生的窗函数的左右区间范围以及高度</span><br><span class="line">f_1=@(x) (high_1)*(x&gt;=left_1 &amp; x&lt;right_1);%<span class="number">0</span><span class="number">-1</span>的阶跃 高<span class="number">1</span></span><br><span class="line">f_2=@(x) (high_1+<span class="number">0.5</span>)*(x&gt;=left_1+<span class="number">2</span> &amp; x&lt;right_1+<span class="number">2</span>);%<span class="number">0</span><span class="number">-1</span>的阶跃 高<span class="number">1.5</span></span><br><span class="line">x=<span class="number">-4</span>:<span class="number">0.0006</span>:<span class="number">4</span>;</span><br><span class="line">y_1=f_1(x);%得到对应的窗函数的y轴数据</span><br><span class="line">y_2=f_2(x);</span><br><span class="line">%开始画第一个图</span><br><span class="line">figure(<span class="number">1</span>)</span><br><span class="line">hold on</span><br><span class="line">plot(x,y_1,'b','LineWidth',2.5);</span><br><span class="line">%加载x(t)图像</span><br><span class="line">grid on;</span><br><span class="line">axis([<span class="number">-1</span> <span class="number">5</span> <span class="number">0</span> <span class="number">2</span>])%确定画图范围</span><br><span class="line">plot(x,y_2,'r','linewidth',2.5);</span><br><span class="line">%加载y(t)图像</span><br><span class="line">%以下是坐标轴设置</span><br><span class="line">xlabel('s/t')</span><br><span class="line">ylabel('f(x)')</span><br><span class="line">title('需要卷积的两个窗函数的时域图像')</span><br><span class="line">legend('x(t)','h(t)');</span><br><span class="line">hold off;</span><br></pre></td></tr></table></figure></p>
<p><img src="https://img-blog.csdnimg.cn/20190928213950692.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-4-对h-t-进行翻折得到"><a href="#1-4-对h-t-进行翻折得到" class="headerlink" title="1.4 对h(t)进行翻折得到"></a>1.4 对h(t)进行翻折得到</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">grid on;</span><br><span class="line">axis([<span class="number">-6</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span>])<span class="comment">%确定画图范围</span></span><br><span class="line"><span class="built_in">plot</span>(-x,y_2,<span class="string">'r'</span>,<span class="string">'linewidth'</span>,<span class="number">2.5</span>);</span><br><span class="line"><span class="comment">%加载y(t)图像</span></span><br><span class="line"><span class="comment">%以下是坐标轴设置</span></span><br><span class="line">xlabel(<span class="string">'\tau'</span>)</span><br><span class="line">ylabel(<span class="string">'h(-\tau)'</span>)</span><br><span class="line">title(<span class="string">'对函数h(\tau)翻折'</span>)</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'h(-\tau)'</span>);</span><br><span class="line"><span class="built_in">hold</span> off;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190928233201406.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-5-对-h-tau-进行移位"><a href="#1-5-对-h-tau-进行移位" class="headerlink" title="1.5 对$h(-\tau)$进行移位"></a>1.5 对$h(-\tau)$进行移位</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y_1,<span class="string">'b'</span>,<span class="string">'LineWidth'</span>,<span class="number">2.5</span>);</span><br><span class="line"><span class="comment">%画出x(t)函数</span></span><br><span class="line">grid on;</span><br><span class="line">title(<span class="string">'h(-\tau)移位演示'</span>)</span><br><span class="line">xlabel(<span class="string">'\tau'</span>)</span><br><span class="line">ylabel(<span class="string">'h(-\tau)'</span>)</span><br><span class="line"><span class="comment">%完成坐标轴设置</span></span><br><span class="line"><span class="keyword">for</span> n=<span class="number">-1</span>:<span class="number">0.08</span>:<span class="number">5</span></span><br><span class="line">    <span class="comment">%开始画卷积conv(t)=x(t)*h(t)</span></span><br><span class="line">    <span class="comment">%step1 得到h(-x)</span></span><br><span class="line">    <span class="keyword">if</span> n~=<span class="number">-1</span></span><br><span class="line">        pause(<span class="number">0.0003</span>);<span class="comment">%暂停</span></span><br><span class="line">        delete(text1);       </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    h=f_2(n-x);</span><br><span class="line">    plot_n=<span class="built_in">plot</span>(x,h,<span class="string">'--r'</span>,<span class="string">'linewidth'</span>,<span class="number">2.5</span>);</span><br><span class="line">    axis([<span class="number">-4</span> <span class="number">5</span> <span class="number">0</span> <span class="number">2</span>]);</span><br><span class="line">    <span class="comment">%设置坐标轴范围</span></span><br><span class="line">    grid on;</span><br><span class="line">    pause(<span class="number">0.001</span>);<span class="comment">%暂停</span></span><br><span class="line">    delete(plot_n);<span class="comment">%删除原曲线</span></span><br><span class="line">    text(<span class="number">0.5</span>,<span class="number">1.8</span>,<span class="string">'当前的n数值为：'</span>);</span><br><span class="line">    text1=text(<span class="number">3.5</span>,<span class="number">1.8</span>,num2str(n*<span class="number">1.0</span>),<span class="string">'color'</span>,<span class="string">'r'</span>); </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">hold</span> off</span><br><span class="line"><span class="comment">%停止接收数据</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20190929011035913.gif#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-6-对两个函数进行累乘加，并绘制卷积图像"><a href="#1-6-对两个函数进行累乘加，并绘制卷积图像" class="headerlink" title="1.6 对两个函数进行累乘加，并绘制卷积图像"></a>1.6 对两个函数进行累乘加，并绘制卷积图像</h2><p>在这一部分，我将附上整个卷积运算的全部代码和其运行结果演示。<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line"><span class="comment">%定义函数，该函数主要实现任意形式的门函数</span></span><br><span class="line">high_1=<span class="number">1</span>;</span><br><span class="line">left_1=<span class="number">0</span>;</span><br><span class="line">right_1=<span class="number">1</span>;</span><br><span class="line"><span class="comment">%定义要产生的窗函数的左右区间范围以及高度</span></span><br><span class="line">f_1=@(x) (high_1)*(x&gt;=left_1 &amp; x&lt;right_1);<span class="comment">%0-1的阶跃 高1</span></span><br><span class="line">f_2=@(x) (high_1+<span class="number">0.5</span>)*(x&gt;=left_1+<span class="number">2</span> &amp; x&lt;right_1+<span class="number">2</span>);<span class="comment">%0-1的阶跃 高1.5</span></span><br><span class="line">x=<span class="number">-4</span>:<span class="number">0.0006</span>:<span class="number">4</span>;</span><br><span class="line">y_1=f_1(x);<span class="comment">%得到对应的窗函数的y轴数据</span></span><br><span class="line">y_2=f_2(x);</span><br><span class="line"><span class="comment">%开始画第一个图</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y_1,<span class="string">'b'</span>,<span class="string">'LineWidth'</span>,<span class="number">2.5</span>);</span><br><span class="line"><span class="comment">%加载x(t)图像</span></span><br><span class="line">grid on;</span><br><span class="line">axis([<span class="number">-1</span> <span class="number">5</span> <span class="number">0</span> <span class="number">2</span>])<span class="comment">%确定画图范围</span></span><br><span class="line"><span class="built_in">plot</span>(x,y_2,<span class="string">'r'</span>,<span class="string">'linewidth'</span>,<span class="number">2.5</span>);</span><br><span class="line"><span class="comment">%加载y(t)图像</span></span><br><span class="line"><span class="comment">%以下是坐标轴设置</span></span><br><span class="line">xlabel(<span class="string">'s/t'</span>)</span><br><span class="line">ylabel(<span class="string">'f(x)'</span>)</span><br><span class="line">title(<span class="string">'需要卷积的两个窗函数的时域图像'</span>)</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">'x(t)'</span>,<span class="string">'h(t)'</span>);</span><br><span class="line"><span class="built_in">hold</span> off;</span><br><span class="line"><span class="comment">%画出第二个演示图像</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x,y_1,<span class="string">'b'</span>,<span class="string">'LineWidth'</span>,<span class="number">2.5</span>);</span><br><span class="line"><span class="comment">%画出x(t)函数</span></span><br><span class="line">grid on;</span><br><span class="line">title(<span class="string">'卷积演示'</span>)</span><br><span class="line">xlabel(<span class="string">'时间\tau'</span>)</span><br><span class="line">ylabel(<span class="string">'s(\tau)'</span>)</span><br><span class="line"><span class="comment">%完成坐标轴设置</span></span><br><span class="line"><span class="keyword">for</span> n=<span class="number">-1</span>:<span class="number">0.04</span>:<span class="number">5</span></span><br><span class="line">    <span class="comment">%开始画卷积conv(t)=x(t)*h(t)</span></span><br><span class="line">    <span class="comment">%step1 得到h(-x)</span></span><br><span class="line">    h=f_2(n-x);</span><br><span class="line">    plot_n=<span class="built_in">plot</span>(x,h,<span class="string">'--r'</span>,<span class="string">'linewidth'</span>,<span class="number">2.5</span>);</span><br><span class="line">    axis([<span class="number">-4</span> <span class="number">5</span> <span class="number">0</span> <span class="number">2</span>]);</span><br><span class="line">    <span class="comment">%设置坐标轴范围</span></span><br><span class="line">    grid on;</span><br><span class="line">    pause(<span class="number">0.001</span>);<span class="comment">%暂停</span></span><br><span class="line">    delete(plot_n);<span class="comment">%删除原曲线</span></span><br><span class="line">    <span class="comment">%开始计算卷积</span></span><br><span class="line">    sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> tao=<span class="number">-2</span>:<span class="number">0.01</span>:<span class="number">5</span></span><br><span class="line">        sum=sum+<span class="number">0.01</span>*f_1(tao)*f_2(n-tao);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment">%此处完成加和操作。</span></span><br><span class="line">    <span class="built_in">disp</span>(sum);</span><br><span class="line">    <span class="built_in">plot</span>(n,sum,<span class="string">'.k'</span>)</span><br><span class="line">    <span class="comment">%此次执行结束相当于完成了n=-1时的图像的卷积</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">hold</span> off</span><br><span class="line"><span class="comment">%停止接收数据</span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/2019092901182480.gif#pic_center" alt="在这里插入图片描述"></p>
<h1 id="2-实验要求，使用c语言画出该图像"><a href="#2-实验要求，使用c语言画出该图像" class="headerlink" title="2. 实验要求，使用c语言画出该图像"></a>2. 实验要求，使用c语言画出该图像</h1><p>$\qquad$首先讲解一下使用c语言产生该函数的数据，然后使用gnuplot画图工具调用这些数据并重绘数据图形。以下我将 分别列出产生这两个窗函数的c程序。</p>
<h2 id="2-1-产生在0-1区间上的窗函数数据"><a href="#2-1-产生在0-1区间上的窗函数数据" class="headerlink" title="2.1 产生在0-1区间上的窗函数数据"></a>2.1 产生在0-1区间上的窗函数数据</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">windows.c</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">change</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> y=<span class="number">0</span>;</span><br><span class="line">	y=(<span class="keyword">int</span>)((x)&gt;<span class="number">0</span> &amp;&amp; (x)&lt;=<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x;</span><br><span class="line">	<span class="comment">//产生第一个窗函数的负半轴部分数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">4000</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="comment">//此for循环产生</span></span><br><span class="line">        x=-i/<span class="number">1000.0</span>;</span><br><span class="line">        <span class="keyword">int</span> y=<span class="number">8</span>;</span><br><span class="line">		<span class="keyword">float</span> result=<span class="number">0</span>;</span><br><span class="line">		y=change(x);</span><br><span class="line">		<span class="comment">//调用函数实现窗函数数字转换</span></span><br><span class="line">		result=(<span class="keyword">float</span>)y*<span class="number">1.5</span>;</span><br><span class="line">		<span class="comment">//设置窗函数的高度</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.3f\t%.2f\n"</span>,x,result);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//产生第一个窗函数的正半轴部分</span></span><br><span class="line">	 <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4000</span>;i++)&#123;</span><br><span class="line">		<span class="comment">//此for循环产生</span></span><br><span class="line">        x=i/<span class="number">1000.0</span>;</span><br><span class="line">        <span class="keyword">int</span> y=<span class="number">8</span>;</span><br><span class="line">		<span class="keyword">float</span> result=<span class="number">0</span>;</span><br><span class="line">		y=change(x);</span><br><span class="line">		<span class="comment">//调用函数实现窗函数数字转换</span></span><br><span class="line">		result=(<span class="keyword">float</span>)y*<span class="number">1.0</span>;</span><br><span class="line">		<span class="comment">//设置窗函数的高度</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.3f\t%.2f\n"</span>,x,result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$\quad$在编辑完该程序之后，我们再采用gcc编译器对其编译，并将其输出结果存入到res.dat文件中。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">E:\研一c语言工程训练\gnuplot&gt;gcc windows.c -o windows</span><br><span class="line">E:\研一c语言工程训练\gnuplot&gt;windows.exe &gt; res.dat</span><br></pre></td></tr></table></figure></p>
<h2 id="2-2产生2-3区间上的窗函数"><a href="#2-2产生2-3区间上的窗函数" class="headerlink" title="2.2产生2-3区间上的窗函数"></a>2.2产生2-3区间上的窗函数</h2><p>此窗函数其非零部分高度设置一样设置为1.5，和matlab里边的设置保持一致。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">window2.c</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">change</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> y=<span class="number">0</span>;</span><br><span class="line">	y=(<span class="keyword">int</span>)((x)&gt;<span class="number">2</span> &amp;&amp; (x)&lt;=<span class="number">3</span>);</span><br><span class="line">	<span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x;</span><br><span class="line">	<span class="comment">//产生第一个窗函数的负半轴部分数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">4000</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="comment">//此for循环产生</span></span><br><span class="line">        x=-i/<span class="number">1000.0</span>;</span><br><span class="line">        <span class="keyword">int</span> y=<span class="number">8</span>;</span><br><span class="line">		<span class="keyword">float</span> result=<span class="number">0</span>;</span><br><span class="line">		y=change(x);</span><br><span class="line">		<span class="comment">//调用函数实现窗函数数字转换</span></span><br><span class="line">		result=(<span class="keyword">float</span>)y*<span class="number">1.5</span>;</span><br><span class="line">		<span class="comment">//设置窗函数的高度</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.3f\t%.2f\n"</span>,x,result);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//产生第一个窗函数的正半轴部分</span></span><br><span class="line">	 <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4000</span>;i++)&#123;</span><br><span class="line">		<span class="comment">//此for循环产生</span></span><br><span class="line">        x=i/<span class="number">1000.0</span>;</span><br><span class="line">        <span class="keyword">int</span> y=<span class="number">8</span>;</span><br><span class="line">		<span class="keyword">float</span> result=<span class="number">0</span>;</span><br><span class="line">		y=change(x);</span><br><span class="line">		<span class="comment">//调用函数实现窗函数数字转换</span></span><br><span class="line">		result=(<span class="keyword">float</span>)y*<span class="number">1.5</span>;</span><br><span class="line">		<span class="comment">//设置窗函数的高度</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.3f\t%.2f\n"</span>,x,result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$\qquad$同样，在编辑完该程序之后，我们再采用gcc编译器对其编译，并将其输出结果存入到res2.dat文件中。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">E:\研一c语言工程训练\gnuplot&gt;gcc window2.c -o window2</span><br><span class="line">E:\研一c语言工程训练\gnuplot&gt;window2.exe &gt; res2.dat</span><br></pre></td></tr></table></figure></p>
<h2 id="2-3-使用gnuplot重绘两个窗函数"><a href="#2-3-使用gnuplot重绘两个窗函数" class="headerlink" title="2.3 使用gnuplot重绘两个窗函数"></a>2.3 使用gnuplot重绘两个窗函数</h2><p>在命令行输入如下命令，对图像进行一些基础设置和绘图。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gnuplot&gt; set title('pictures of different windows function')</span><br><span class="line">gnuplot&gt; set xlabel 'time/s'</span><br><span class="line">gnuplot&gt; set ylabel 'f(t)'</span><br><span class="line">gnuplot&gt; plot [<span class="number">-4</span>:<span class="number">4</span>] [<span class="number">0</span>:<span class="number">2</span>] <span class="string">"res.dat"</span> u <span class="number">1</span>:<span class="number">2</span> w l lt <span class="number">6</span> lw <span class="number">2</span>,<span class="string">"res2.dat"</span> w l lt <span class="number">7</span> lw <span class="number">2</span></span><br></pre></td></tr></table></figure><br>执行完之后则会产生如下图。</p>
<p><img src="https://img-blog.csdnimg.cn/20190929162713558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可以看到c语言产生的绘制图片与matlab绘画出来的并没有什么差别。</p>
<h2 id="2-4-c语言实现时域卷积"><a href="#2-4-c语言实现时域卷积" class="headerlink" title="2.4 c语言实现时域卷积"></a>2.4 c语言实现时域卷积</h2><p>$\qquad$对于c语言实现卷积，此处我对于上边的代码又进行了修改以及综合，在该文件内，我分别将自变量t的取值范围、窗函数1的取值、窗函数2的取值以及两个窗函数的卷积存储在对应的数组内。然后再对这几个数组统一访问，输出到本地文件。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">change</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">	<span class="comment">//定义函数1，该函数主要实现对窗函数1数值的转换，使得只在0-1范围内有取值且为1</span></span><br><span class="line">	<span class="keyword">double</span> y=<span class="number">0</span>;</span><br><span class="line">	y=(<span class="keyword">double</span>)((x)&gt;<span class="number">0</span> &amp;&amp; (x)&lt;=<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">change2</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">	<span class="comment">//定义函数2，该函数主要实现对窗函数2数值的转换，使得只在2-3范围内有取值且为1</span></span><br><span class="line">	<span class="keyword">double</span> y=<span class="number">0</span>;</span><br><span class="line">	y=(<span class="keyword">double</span>)((x)&gt;<span class="number">2</span> &amp;&amp; (x)&lt;=<span class="number">3</span>);</span><br><span class="line">	<span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x;</span><br><span class="line">	<span class="keyword">double</span> x_nums[<span class="number">8001</span>] = &#123;<span class="number">0.0</span>&#125;;</span><br><span class="line">	<span class="keyword">double</span> y_1[<span class="number">8001</span>]=&#123;<span class="number">0.0</span>&#125;;</span><br><span class="line">	<span class="keyword">double</span> y_2[<span class="number">8001</span>]=&#123;<span class="number">0.0</span>&#125;;</span><br><span class="line">	<span class="keyword">double</span> y_y[<span class="number">8001</span>]=&#123;<span class="number">0.0</span>&#125;;</span><br><span class="line">	<span class="comment">//其中x_nums中存储的是-4:0.001:4</span></span><br><span class="line">	<span class="comment">//y_1中存储的是在-4:0.001:4条件下窗函数1的取值</span></span><br><span class="line">	<span class="comment">//y_2中存储的是-4:0.001:4条件下窗函数2的取值</span></span><br><span class="line">	<span class="comment">//y_y中存储的是-4:0.001:4条件下窗函数1和窗函数卷积的取值</span></span><br><span class="line">	<span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">	<span class="comment">//产生第一个窗函数的负半轴部分数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">4000</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="comment">//此for循环产生</span></span><br><span class="line">        x=-(i/<span class="number">1000.0</span>);</span><br><span class="line">		j=<span class="number">4000</span>-i;</span><br><span class="line">        <span class="keyword">double</span> y,y2;</span><br><span class="line">		<span class="keyword">float</span> result,result2;</span><br><span class="line">		y=change(x);</span><br><span class="line">		y2=change2(x);</span><br><span class="line">		<span class="comment">//调用函数实现窗函数数字转换</span></span><br><span class="line">		result=y;</span><br><span class="line">		result2=y2;</span><br><span class="line">		x_nums[j]=x;</span><br><span class="line">		y_1[j]=result;</span><br><span class="line">		y_2[j]=result2*<span class="number">1.5</span>;</span><br><span class="line">		<span class="comment">//设置窗函数的高度</span></span><br><span class="line">		<span class="comment">//printf("%.3f\t%.2f\n",x,result);</span></span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//产生第一个窗函数的正半轴部分</span></span><br><span class="line">	 <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4000</span>;i++)&#123;</span><br><span class="line">		<span class="comment">//此for循环产生</span></span><br><span class="line">        x=i/<span class="number">1000.0</span>;</span><br><span class="line">		j=i+<span class="number">4000</span>;</span><br><span class="line">        <span class="keyword">double</span> y,y2;</span><br><span class="line">		<span class="keyword">double</span> result,result2;</span><br><span class="line">		y=change(x);</span><br><span class="line">		y2=change2(x);</span><br><span class="line">		<span class="comment">//调用函数实现窗函数数字转换</span></span><br><span class="line">		result=y;</span><br><span class="line">		result2=y2;</span><br><span class="line">		<span class="comment">//设置窗函数的高度</span></span><br><span class="line">		<span class="comment">//printf("%.3f\t%.2f\n",x,result);</span></span><br><span class="line">		x_nums[j]=x;</span><br><span class="line">		y_1[j]=result;</span><br><span class="line">		y_2[j]=result2*<span class="number">1.5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//开始计算卷积</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//step 1.计算负半轴部分卷积</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4000</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">		x=-(i/<span class="number">1000.0</span>);</span><br><span class="line">		j=<span class="number">4000</span>-i;</span><br><span class="line">		<span class="comment">//计算tao为负的情况</span></span><br><span class="line">		<span class="keyword">double</span> sum;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> t=<span class="number">200</span>;t&gt;=<span class="number">0</span>;t--)&#123;</span><br><span class="line">			<span class="keyword">double</span> tao=-(t/<span class="number">100.0</span>);</span><br><span class="line">			sum=sum+<span class="number">0.01</span>*change(tao)*change2(x-tao)*<span class="number">1.5</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//计算tao为正的情况</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=<span class="number">500</span>;t++)&#123;</span><br><span class="line">			<span class="keyword">double</span> tao=(t/<span class="number">100.0</span>);</span><br><span class="line">			sum=sum+<span class="number">0.01</span>*change(tao)*change2(x-tao)*<span class="number">1.5</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		y_y[j]=sum;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//step 2.计算正半轴部分卷积</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4000</span>;i++)&#123;</span><br><span class="line">		x=(i/<span class="number">1000.0</span>);</span><br><span class="line">		j=<span class="number">4000</span>+i;</span><br><span class="line">		<span class="comment">//计算tao为负的情况</span></span><br><span class="line">		<span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> t=<span class="number">200</span>;t&gt;=<span class="number">0</span>;t--)&#123;</span><br><span class="line">			<span class="keyword">double</span> tao=-(t/<span class="number">100.0</span>);</span><br><span class="line">			sum=sum+<span class="number">0.01</span>*change(tao)*change2(x-tao)*<span class="number">1.5</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//计算tao为正的情况</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=<span class="number">500</span>;t++)&#123;</span><br><span class="line">			<span class="keyword">double</span> tao=(t/<span class="number">100.0</span>);</span><br><span class="line">			sum=sum+<span class="number">0.01</span>*change(tao)*change2(x-tao)*<span class="number">1.5</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		y_y[j]=sum;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//for循环输出画图需要的数据</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">8000</span>;i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.3f\t%.2f\t%.2f\t%.2f\n"</span>,x_nums[i],y_1[i],y_2[i],y_y[i]);</span><br><span class="line">		<span class="comment">//其中x_nums中存储的是-4:0.001:4</span></span><br><span class="line">		<span class="comment">//y_1中存储的是在-4:0.001:4条件下窗函数1的取值</span></span><br><span class="line">		<span class="comment">//y_2中存储的是-4:0.001:4条件下窗函数2的取值</span></span><br><span class="line">		<span class="comment">//y_y中存储的是-4:0.001:4条件下窗函数1和窗函数卷积的取值</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>其具体的操作流程如下所示:<br><img src="https://img-blog.csdnimg.cn/20190929200938158.gif#pic_center" alt="在这里插入图片描述"><br>$\qquad$在上一步的操作中，我们已经实现了将我们绘图需要的数据存到了本地，接下来我们就要使用gnuplot来对这些数据绘制。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">plot [<span class="number">-3</span>:<span class="number">5</span>] [<span class="number">0</span>:<span class="number">2</span>] <span class="string">"convolution.dat"</span> u <span class="number">1</span>:<span class="number">2</span> w l lt <span class="number">6</span> lw <span class="number">2.5</span>,<span class="string">"convolution.dat"</span> u <span class="number">1</span>:<span class="number">3</span> w l lt <span class="number">7</span> lw <span class="number">2.5</span>,<span class="string">"convolution.dat"</span> u <span class="number">1</span>:<span class="number">4</span> w p pt <span class="number">1</span> ps <span class="number">0.1</span></span><br></pre></td></tr></table></figure><br>具体的操作如下所示:<br><img src="https://img-blog.csdnimg.cn/20190929201444175.gif#pic_center" alt="在这里插入图片描述"></p>
<h1 id="3-c语言图像与matlab图像的比对"><a href="#3-c语言图像与matlab图像的比对" class="headerlink" title="3. c语言图像与matlab图像的比对"></a>3. c语言图像与matlab图像的比对</h1><p>$\qquad$另外，此时我们还需要将C语言画出来的卷积图像和matlab绘制出来的图像进行比对。下图中图1为c语言绘制的，图2为matlab绘制的。<br><img src="https://img-blog.csdnimg.cn/2019092920172674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_50#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190929202045488.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_50#pic_center" alt="在这里插入图片描述"></p>
<h2 id="3-1-总结-amp-体会"><a href="#3-1-总结-amp-体会" class="headerlink" title="3.1 总结 &amp; 体会"></a>3.1 总结 &amp; 体会</h2><p>$\qquad$本次实践分别使用matlab和c语言，在不调用其它函数包的情况下，自主绘画了两个窗函数并且实现了两个函数的时域卷积练习。通过本次实践，更加深刻的理解了卷积的概念，对于信号与系统以及数字语音处理的学习提供了帮助。另外希望此次博客可以为自己以后的练习提供帮助吧。</p>
]]></content>
      <categories>
        <category>数字信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>数字信号处理matlab训练第【3】弹</title>
    <url>/2019/11/19/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86matlab%E8%AE%AD%E7%BB%83%E7%AC%AC%E3%80%903%E3%80%91%E5%BC%B9--%E6%B1%82%E5%8F%96%E7%A6%BB%E6%95%A3%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BE%93%E5%87%BA/</url>
    <content><![CDATA[<h1 id="1-LSI系统的转移函数"><a href="#1-LSI系统的转移函数" class="headerlink" title="1.LSI系统的转移函数"></a>1.LSI系统的转移函数</h1><p>对于一个线性时不变离散时间系统（如下图所示），我们在之前就已经接触到了4种不同的描述方法。</p>
<p><img src="https://img-blog.csdnimg.cn/20191006213039910.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="1-1-频率响应"><a href="#1-1-频率响应" class="headerlink" title="1.1 频率响应"></a>1.1 频率响应</h2><script type="math/tex; mode=display">
H(e^{j\omega})=\sum_{n=0}^{\infty}h(n)e^{-j\omega n}</script><h2 id="1-2-转移函数"><a href="#1-2-转移函数" class="headerlink" title="1.2 转移函数"></a>1.2 转移函数</h2><script type="math/tex; mode=display">
H(z)=\sum_{n=0}^{\infty}h(n)z^{-n}</script><h2 id="1-3-差分方程"><a href="#1-3-差分方程" class="headerlink" title="1.3 差分方程"></a>1.3 差分方程</h2><script type="math/tex; mode=display">
y(n)=-\sum_{k=1}^Na(k)y(n-k)+\sum_{r=0}^Mb(r)x(n-r)</script><h2 id="1-4-卷积关系"><a href="#1-4-卷积关系" class="headerlink" title="1.4 卷积关系"></a>1.4 卷积关系</h2><script type="math/tex; mode=display">
y(n)=x(n)*h(n)=\sum_{k=-\infty}^\infty x(k)h(n-k)</script><p>上边的4种方法从不同的角度描述了一个LSI系统的物理特性，他们之间有着密切的联系，其联系的纽带就是系统的单位冲激响应$h(n)$</p>
<h2 id="1-5-系统的转移函数-H-Z"><a href="#1-5-系统的转移函数-H-Z" class="headerlink" title="1.5 系统的转移函数$H(Z)$"></a>1.5 系统的转移函数$H(Z)$</h2><p>对上边的第三式两边取Z变换，得</p>
<script type="math/tex; mode=display">
Y(z)=-Y(z)\sum_{k=1}^Na(k)z^{-k}+X(z)\sum_{r=0}^Mb(r)z^{-r}\\ \quad \\Y(z)[1+\sum_{k=1}^Na(k)z^{-k}]=X(z)[b(0)+\sum_{r=1}^Mb(r)z^{-r}]</script><p>对上边的式子进行整理可得</p>
<script type="math/tex; mode=display">
H(z)=\frac{Y(z)}{X(z)}=\frac{\sum_{r=0}^Mb(r)z^{-r}}{1+\sum_{k=1}^Na(k)z^{-k}}</script><p>上式$H(z)$就被称为系统的转移函数。它即可以定义为系统单位抽样响应$h(n)$的z变换，也可以 定义为系统的输出、输入Z变换之比。</p>
<h1 id="2-matlab编程训练，求系统的阶跃响应"><a href="#2-matlab编程训练，求系统的阶跃响应" class="headerlink" title="2.matlab编程训练，求系统的阶跃响应"></a>2.matlab编程训练，求系统的阶跃响应</h1><p>我们之前学过的，如果已经知道系统的$h(n)$,由于$y(n)=x(n)*h(n)$,则我们可以轻松的使用conv函数将其求得，但是如果我们不知道$h(n)$,已知$Y(z)$、$X(z)$,需要求$y(n)$，则我们可以根据公式，</p>
<script type="math/tex; mode=display">
y(n)=-\sum_{k=1}^Na(k)y(n-k)+\sum_{r=0}^Mb(r)x(n-r)\\ \quad
\\=b(1)x(n)+b(2)x(n-1)+...+b(n_b+1)x(n-n_b)\\ \quad \\-a(2)y(n-1)-...-a(n_a+1)y(n-n_a)</script><p>求取我们的$y(n)$,使用matlab内的一个函数$y=filter(b,a,x)$其中$x、y、a和b$都是向量。</p>
<h2 id="2-1-编程实训"><a href="#2-1-编程实训" class="headerlink" title="2.1 编程实训"></a>2.1 编程实训</h2><p>已知一个系统的转移函数如下所示：</p>
<script type="math/tex; mode=display">
H(z)=\frac{0.001836+0.007344z^{-1}+0.011016z^{-2}+0.007374z^{-3}+0.001836z^{-4}}{1-3.0544z^{-1}+3.8291z^{-2}-2.2925z^{-3}+0.55075z^{-4}}</script><p>求该系统的阶跃响应。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%%转移函数</span><br><span class="line">clc;</span><br><span class="line"><span class="built_in">clear</span>;</span><br><span class="line">x=ones(<span class="number">100</span>,<span class="number">1</span>);</span><br><span class="line">%定义阶跃输入</span><br><span class="line">t=<span class="number">1</span>:<span class="number">100</span>;</span><br><span class="line">b=[<span class="number">0.001836</span>,<span class="number">0.007344</span>,<span class="number">0.011016</span>,<span class="number">0.007374</span>,<span class="number">0.001836</span>];</span><br><span class="line">%定义向量b</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">-3.0544</span>,<span class="number">3.8291</span>,<span class="number">-2.2925</span>,<span class="number">0.55075</span>];</span><br><span class="line">%定义向量a</span><br><span class="line">y=filter(b,a,x);</span><br><span class="line">%得到y(n)</span><br><span class="line">hold on</span><br><span class="line">h1=plot(t,x,<span class="string">'b'</span>);</span><br><span class="line">h2=plot(t,y,<span class="string">'r'</span>);</span><br><span class="line">hold off</span><br><span class="line">%画图结束</span><br><span class="line">legend([h1,h2],'阶跃输入','阶跃响应');</span><br><span class="line">%添加标注</span><br></pre></td></tr></table></figure><br>其运行结果为：<br><img src="https://img-blog.csdnimg.cn/2019100621033464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2-2-求取系统的单位抽样响应h-n"><a href="#2-2-求取系统的单位抽样响应h-n" class="headerlink" title="2.2 求取系统的单位抽样响应h(n)"></a>2.2 求取系统的单位抽样响应h(n)</h2><p>在我们得到上边的情况下，如果我们想要得到该系统的单位抽样响应，编辑mtalab代码如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">[h,t]=impz(b,a,<span class="number">40</span>);</span><br><span class="line">%令h(n)的长度为N=<span class="number">40</span></span><br><span class="line">stem(t,h,<span class="string">'.'</span>);</span><br><span class="line">%绘制离散的h(n)</span><br><span class="line">grid on;</span><br></pre></td></tr></table></figure><br>其显示结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20191006211418743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2-3-求上述系统的频率响应"><a href="#2-3-求上述系统的频率响应" class="headerlink" title="2.3 求上述系统的频率响应"></a>2.3 求上述系统的频率响应</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%%得到系统的频率响应</span><br><span class="line">[H,w]=freqz(b,a,256,'whole',1);</span><br><span class="line">%whole 指定计算的频率范围是<span class="number">0</span>-Fs,此处我们设置Fs=<span class="number">1</span></span><br><span class="line">Hr=<span class="built_in">abs</span>(H);</span><br><span class="line">%得到绝对值，也就是幅度值</span><br><span class="line">plot(w,Hr,'r','linewidth',2);</span><br><span class="line">%绘制图形，并且设置颜色和线宽</span><br><span class="line">grid on;</span><br><span class="line">%显示方格</span><br><span class="line">xlabel('\omega /2\pi');</span><br><span class="line">ylabel('|H(e^&#123;j\omega&#125;)|');</span><br><span class="line">title('幅频响应')</span><br><span class="line">%坐标轴设置</span><br></pre></td></tr></table></figure>
<p>输出图像如下所示：<br><img src="https://img-blog.csdnimg.cn/20191006212615264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="3-参考文章"><a href="#3-参考文章" class="headerlink" title="3.参考文章"></a>3.参考文章</h1><blockquote>
<p>数字信号处理理论、算法与实现（第三版）</p>
</blockquote>
]]></content>
      <categories>
        <category>数字信号处理</category>
      </categories>
  </entry>
  <entry>
    <title>如何查看账户密码</title>
    <url>/2019/11/19/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h1 id="1-情况描述：比如以下这种情况，我们想要得到看到登陆密码。"><a href="#1-情况描述：比如以下这种情况，我们想要得到看到登陆密码。" class="headerlink" title="1.情况描述：比如以下这种情况，我们想要得到看到登陆密码。"></a>1.情况描述：比如以下这种情况，我们想要得到看到登陆密码。</h1><p><img src="https://img-blog.csdnimg.cn/20191018200914209.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="2-解决方案"><a href="#2-解决方案" class="headerlink" title="2.解决方案"></a>2.解决方案</h1><p>当然这可以使用浏览器的密码管理功能可以看到，但是今天我将会提出来一个更加简便的方法。</p>
<blockquote>
<p>1.在浏览器按下F12（这是chrome浏览器），进入开发者模式<br>2.按下图分别点击步骤1、2<br><img src="https://img-blog.csdnimg.cn/20191018201422182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>3.找到定位地点，将标识部分的password改为text<br>4.回车即可看到我们需要的密码。</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th><img src="https://img-blog.csdnimg.cn/20191018201538605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></th>
<th><img src="https://img-blog.csdnimg.cn/20191018201753113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>好了，满足要求，大家掌握了吗？</p>
]]></content>
      <categories>
        <category>工具类</category>
      </categories>
  </entry>
  <entry>
    <title>深入理解快速傅里叶变换FFT</title>
    <url>/2019/11/19/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2FFT/</url>
    <content><![CDATA[<hr>
<p>title: 深入理解快速傅里叶变换<br>categories: 数字信号处理</p>
<p>mathjax: true</p>
<hr>
<h1 id="1-FFT介绍"><a href="#1-FFT介绍" class="headerlink" title="1.FFT介绍"></a>1.FFT介绍</h1><p>$\qquad$离散傅里叶变换（DFT）和卷积是信号处理中两个最基本也是最常用的运算，对于N点序列$x(n)$,其DFT变换对定义为：</p>
<script type="math/tex; mode=display">
\quad\quad\quad \quad X(k)=\sum_{n=0}^{N-1}x(n)W_N^{nk} \quad\quad k=0,1,2,...,N-1,W_N=e^{-j\frac{2\pi}{N}}\\ \quad \\
x(n)=\frac1N\sum_{k=0}^{N-1}X(k)W_N^{-nk} \quad\quad n=0,1,...,N-1</script><p>首先解释一下，这里的$W_N=e^{-j\frac{2\pi}{N}}$是一个复数运算，其取得过程如下所示：<br><img src="https://img-blog.csdnimg.cn/20191012214106777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在上图中我们可以知道，这里的$W_N$是经过截短了的。<br>$\qquad$另外在上边的公式中，我们可以看出，由于$W_N$是个复数，又因为k的取值范围在0到N-1，共有N个不同的选择，而对于每一个选定$k$值的式子，其$n$的取值范围又从0到N-1，由此可以算出，这$N$个点$X(k)$需要$N^2$次复数运算和$N(N-1)$次复数加法。再由欧拉公式：</p>
<script type="math/tex; mode=display">
e^{jw}=cosw+jsinw\\ \quad \\
e^{-jw}=cosw-jsinw</script><p>将欧拉公式带入$W_N$则有：</p>
<script type="math/tex; mode=display">W_N=e^{-j\frac{\pi}{2}}=cos(\frac{\pi}{2})-jsin(\frac{\pi}{2})=-j</script><p>由以上公式则也可以分别求得$W_N^{nk}$,当N等于4时，其表格如下所示：<br>$W_N^{nk}$ 取N=4    | Value<br>———— | ——-<br>$W_N^0$  | $1$<br>$W_N^1$  | $-j$<br>$W_N^2$ | $-1$<br>$W_N^3$  | $j$<br>$W_N^4$ | $1$<br>$W_N^6$  | $-1$<br>$W_N^9$  | $-j$<br>在上边的运算中我们可以看到，虽然要运行的运算次数有很多，但是结果却是有一定规律的：</p>
<script type="math/tex; mode=display">
W_N^0=W_N^4=1\\ \quad \\
W_N^1=W_N^9=-j \\ \quad \\
W_N^2=W_N^6=-1\\ \quad \\
W_N^3=j</script><p>$\qquad$到了这里，我们或许就看出来了一些规律，此处我们取的N=4,我们发现其结果也是以4为周期的。那么我们现在给出其一般性规律，也就是我们后边的进行快速FFT的基础。</p>
<script type="math/tex; mode=display">
W_N^0=1\\ \quad \\
W_N^{N/2}=-1\\ \quad \\
W_N^{N+r}=W_N^r\\ \quad \\
W_N^{(N/2)+r}=-W_N^r</script><p>$\qquad$有了上边的规律，我们接下来就以4点DFT来测试一下，根据$X(k)$的计算公式直接计算的话，我们则需要进行$4^2=16$次的复数运算，所以我们根据以上得到的规律写成以下矩阵形式：</p>
<script type="math/tex; mode=display">
\left[\begin{matrix} X(0)\\ X(1)\\X(2)\\X(3)\end{matrix}\right]=
\left[ \begin{matrix} 1 & 1 & 1 & 1 \\ 1 & -j & -1 & j \\ 1 & -1& 1 & -1  \\ 1 & j & -1 & -j  \end{matrix} \right]
\left[\begin{matrix} x(0)\\ x(1)\\x(2)\\x(3)\end{matrix}\right]</script><p>$\qquad$接下来我们就要对上边的矩阵进行一下初等变换，使得其结果仍然等于等式左侧（这里的对右边两个矩阵进行初等变换的目的是为了更加直观的显示出蝶形运算）。<br>为方便表示，我接下来分别将等式右边的矩阵定义为矩阵A和矩阵B,其形式如下：</p>
<script type="math/tex; mode=display">
A=\left[ \begin{matrix} 1 & 1 & 1 & 1 \\ 1 & -j & -1 & j \\ 1 & -1& 1 & -1  \\ 1 & j & -1 & -j  \end{matrix} \right] \qquad\qquad
B=\left[\begin{matrix} x(0)\\ x(1)\\x(2)\\x(3)\end{matrix}\right]</script><p>因为矩阵$AB=AEB$,则上边的$X(k)$的矩阵即可表示成：</p>
<script type="math/tex; mode=display">
\left[\begin{matrix} X(0)\\ X(1)\\X(2)\\X(3)\end{matrix}\right]=A\left[ \begin{matrix} 1 & 0& 0 & 0 \\ 0 & 1 & 0 & 0 \\ 0 & 0& 1 & 0  \\ 0 & 0 & 0 & 1  \end{matrix} \right]B
\\ \quad \\\quad\quad\quad\quad\quad\quad\quad\quad\quad\quad\quad
=A\left[ \begin{matrix} 1 & 0& 0 & 0 \\ 0 & 0 & 1 & 0 \\ 0 & 1& 0 & 0  \\ 0 & 0 & 0 & 1  \end{matrix} \right]\left[ \begin{matrix} 1 & 0& 0 & 0 \\ 0 & 0 & 1 & 0 \\ 0 & 1& 0 & 0  \\ 0 & 0 & 0 & 1  \end{matrix} \right]B
\\ \quad \\\quad\quad\quad\quad\quad\quad\quad\quad
=\left[ \begin{matrix} 1 & 1 & 1 & 1 \\ 1 & -1 & -j & j \\ 1 & 1& -1 & -1  \\ 1 & -1 & j & -j  \end{matrix} \right]
\left[\begin{matrix} x(0)\\ x(2)\\x(1)\\x(3)\end{matrix}\right]</script><p>$\qquad$在上式中，我们对于矩阵A的第二列和第三列互换，将矩阵B的第二行和第三行互换，其结果不变。根据此结果，我们就可以的得出，如下等式：</p>
<script type="math/tex; mode=display">
X(0)=[x(0)+x(2)]+[x(1)+x(3)] \\ \quad \\
X(1)=[x(0)-x(2)]-[x(1)-x(3)]j\\ \quad \\
X(2)=[x(0)+x(2)]-[x(1)+x(3)]\\ \quad \\
X(3)=[x(0)-x(2)]+[x(1)-x(3)]j</script><p>$\qquad$这样，四点DFT实际上只需要进行一次复数乘法，也就是只需要进行计算$[x(1)-x(3)]j$即可，其实该问题的关键就是如何巧妙的利用W因子的周期性以及对称性，导出一个高效的快速算法。<br>$\qquad$在上边的推导中，我们也可以看到在应用了快速傅里叶变换算法（FFT）后，使得N点的DFT算法的乘法计算量由$N^2$次运算降为$\frac{N}{2}log_2N$次，大大加快了计算速度。</p>
<h1 id="2-时间抽取（DIT）基2-FFT算法"><a href="#2-时间抽取（DIT）基2-FFT算法" class="headerlink" title="2.时间抽取（DIT）基2  FFT算法"></a>2.时间抽取（DIT）基2  FFT算法</h1><p>在介绍这个之前，我先介绍一下FFT的核心思想：<br><img src="https://img-blog.csdnimg.cn/20191013193006106.png#pic_center" alt="在这里插入图片描述"><br>对于N点的DFT算法，我们习惯上使用$N=2^M$来进行计算，根据DFT正变换的公式:</p>
<script type="math/tex; mode=display">
X(k)=\sum_{n=0}^{N-1}x(n)W_N^{nk} \quad\quad k=0,1,2,...,N-1,W_N=e^{-j\frac{2\pi}{N}}</script><p>中我们将$x(n)$分为奇、偶两部分，也就是令$n=2r 、n=2r+1 \qquad r=0.1,…, \frac{N}{2}-1$于是上式也就可以改写为：</p>
<script type="math/tex; mode=display">
X(k)=\sum_{r=0}^{N/2-1}x(2r)W_N^{2rk}+ \sum_{r=0}^{N/2-1}x(2r+1)W_N^{(2r+1)k}\\ \quad \\\quad\quad\quad
=\sum_{r=0}^{N/2-1}x(2r)W_{N/2}^{2rk}+ \sum_{r=0}^{N/2-1}x(2r+1)W_{N/2}^{(2r+1)k}</script><p>式中$W_{N/2}=e^{-j\frac{2\pi}{N/2}}=e^{-j\pi}$<br>现在令$A(k)、B(k)$：分别代表$X(k)$的偶数项和奇数项：</p>
<script type="math/tex; mode=display">
A(k)=\sum_{r=0}^{N/2-1}x(2r)W_{N/2}^{2rk} \qquad k=0,1,...,\frac N2-1 \\ \quad \\\quad\quad\quad
B(k)=\sum_{r=0}^{N/2-1}x(2r+1)W_{N/2}^{(2r+1)k}\qquad k=0,1,...,\frac N2-1 \\ \quad \\</script><p>那么，$X(k)$则可以表示为：</p>
<script type="math/tex; mode=display">
X(k)=A(k)+W_N^kB(k),\qquad k=0,1,...,\frac N2-1</script><p>$\qquad$但是此时我们仅可以根据该式子，算出来一半的$X(k)$,也就是$X(0)、X(1)$,而其余两项该式是无法求出的。具体的想要求出其余两项则需要公式：</p>
<script type="math/tex; mode=display">
X(k+\frac N2)=A(k+\frac N2)+W_N^{k+\frac N2}B(k+\frac N2)\\ \quad \\\quad\quad\quad\quad
=A(k+\frac N2)-W_N^{k}B(k+\frac N2)\\ \quad \\\quad\quad\quad\quad\quad\quad\quad\quad
= A(k)-W_N^{k}B(k)\quad  ,k=0,1,...,\frac N2-1</script><p>$\qquad$此处的$A(k+\frac N2)$可以理解为偶数项的下一个周期，所以此处可以直接看为$A(k)$。<br>所以用$A(k)、B(k)$可以完整的表示$X(k)$,当N=4时，$A(k)、B(k)$以及$X(k)$的关系如下所示：<br><img src="https://img-blog.csdnimg.cn/20191013184409530.png#pic_center" alt="在这里插入图片描述"><br>$\qquad$这里我只展示了当N=4的时候，当N=8的时候，则我们需要继续将$A(k)$分为偶数项$C(k)$与奇数项$D(k)$之和，将$B(k)$分为偶数项$E(k)$与奇数项$F(k)$之和,其$k$值取值范围为$k=0,1,…,\frac N4-1$。<br>$\qquad$若N=16，或者更高的幂，可以按照这样的方法继续分下去，直到分到两点的DFT为止。<br>介绍到这里，相信大家都已经很明白了，该算法是将时间$n$按照奇、偶分开，所以被称为<strong>时间抽取算法</strong>。</p>
<h1 id="3-FFT算法的一般规律"><a href="#3-FFT算法的一般规律" class="headerlink" title="3.FFT算法的一般规律"></a>3.FFT算法的一般规律</h1><p>$\qquad$我们知道，对于进行FFT快速傅里叶变换，找到W因子的周期性以及对称性是非常关键的。比如当N=4的时候，$x(0)、x(1)、x(2)、x(3)$的排列顺序为$x(0)、x(2)、x(1)、x(3)$。如果这个顺序让我们自己取记忆的话，如果当N值小的时候或许还可以记住，但是如果当N大的时候，这样单纯记忆就显得不切实际。为此，我们能否找到它的排列规律显得尤为重要，以下我将分别以N=4和N=8来介绍这一方法：<br>当N=4时其表格如下：<br>$n$     | $x(n)$|$X(k)$|$k$<br>———— | ——-|————|———-<br>0| 00|000|0<br>2| 10|001|1<br>1 | 01|010|2<br>3| 11|011|3<br>当N=8时其表格如下：<br>$n$     | $x(n)$|$X(k)$|$k$<br>———— | ——-|————|———-<br>0| 000|000|0<br>4| 100|001|1<br>2 | 010|010|2<br>6| 110|011|3<br>1| 001|100|4<br>5 | 101|101|5<br>3| 011|110|6<br>7| 111|111|7</p>
<p>仔细观看的话，我们或许会<strong>发现$x(n)$的取值顺序也是按照二进制加法，但是这个加法是在左侧加</strong>,而$X(k)$则是在右侧加。也就是说是$X(k)$的对称。有了这个规律，那么不管$N=2^M$的值取多大，我们都可以快速的排列出其顺序，这对于加快运算速度是有很大帮助的。</p>
<p>因为$M=log_2N$所以将N点DFT可以分成M级，当N等于8时，M=3,从左到右可以分为$m=0,m=1,m=2$三级。接下来我将展示8点DFT时间抽取算法的信号流图：<br><img src="https://img-blog.csdnimg.cn/20191015110834328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这里我们或许就会看到如下现象：</p>
<blockquote>
<p>在每一个向上连接的线的下边都要乘一个$W^r$因子，<br>每一个向下连接的线的搭档都需要乘-1。</p>
</blockquote>
<p>下面我将会来介绍一下$W^r$因子的分布情况:<br>$m$ 值（第几级）     | 对应的$W^r$因子分布<br>———— | ——-<br>$m=0$ 级  | $W_2^r,r=0$<br>$m=1$ 级 | $W_4^r,r=0,1$<br>$m=2$ 级  | $W_8^r,r=0,1,2,3$<br>….  | …<br>$m=M-1$ 级  | $W_N^r,r=0,1,…,\frac N2-1$</p>
<p>如果你仔细看我的流图的话或许会发现，我在m=1的时候，使用了因子$W_8^0，W_8^2$,在这里我使用这个因子只是为了方便和后边的比较，其实这个还是有一个代换公式的：</p>
<script type="math/tex; mode=display">
W_8^0=W_4^0，W_8^2=W_4^1</script><h1 id="4-后续"><a href="#4-后续" class="headerlink" title="4.后续"></a>4.后续</h1><p>该部分留作后边对于FFT的更加深入的理解。</p>
]]></content>
  </entry>
  <entry>
    <title>MFCC算法讲解及实现</title>
    <url>/2019/11/19/MFCC%E7%AE%97%E6%B3%95%E8%AE%B2%E8%A7%A3%E5%8F%8A%E5%AE%9E%E7%8E%B0%EF%BC%88matlab%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1-matlab安装voicebox语音包"><a href="#1-matlab安装voicebox语音包" class="headerlink" title="1.matlab安装voicebox语音包"></a>1.matlab安装voicebox语音包</h1><p>这里该包的安装我直接附上我们师姐写过的一篇文章，里边的介绍很详细：<br><a href="https://blog.csdn.net/qq_39516859/article/details/80264381" target="_blank" rel="noopener">戳这里！！！跳转到文章链接地址</a></p>
<h1 id="2-MFCC原理讲解"><a href="#2-MFCC原理讲解" class="headerlink" title="2.MFCC原理讲解"></a>2.MFCC原理讲解</h1><p>整个MFCC过程大致可以分为以下几步：</p>
<blockquote>
<p>1.音频文件读取（最好是.wav文件）<br>2.预先加重<br>3.分帧<br>4.加窗<br>5.傅里叶变换（当是2的N次方时，可以使用FFT快速傅里叶变换）<br>6.梅尔滤波器组<br>7.离散余弦变换DCT<br><img src="https://img-blog.csdnimg.cn/20191023202550583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="3-MFCC算法设计实现（matlab）"><a href="#3-MFCC算法设计实现（matlab）" class="headerlink" title="3.MFCC算法设计实现（matlab）"></a>3.MFCC算法设计实现（matlab）</h1></blockquote>
<h2 id="3-1-wav格式语音文件提取【x-200000-1-】"><a href="#3-1-wav格式语音文件提取【x-200000-1-】" class="headerlink" title="3.1 .wav格式语音文件提取【x(200000*1)】"></a>3.1 .wav格式语音文件提取【x(200000*1)】</h2><p>$\qquad$在matlab中,使用函数audioread函数来读取本地wav文件，这里要注意的是，采样频率一般为8000Hz和16000Hz，采样频率需要大于真实信号最大频率的2倍，才不会导致频谱混叠。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">clc;</span><br><span class="line"><span class="built_in">clear</span>;</span><br><span class="line">[x,fs]=audioread('diguashao.wav');%读取wav文件</span><br></pre></td></tr></table></figure><br>这里我们用于测试的数据的采样频率 $f_s$ 44100,这个是由 audioread函数默认决定的。</p>
<h2 id="3-2-预加重【x-200000-1-】"><a href="#3-2-预加重【x-200000-1-】" class="headerlink" title="3.2 预加重【x(200000*1)】"></a>3.2 预加重【x(200000*1)】</h2><p>$\qquad$为了避免在后边的FFT操作中出现数值问题，我们需要加强一下高频信息，因为一般高频能量比低频小。其预加重函数如下所示：</p>
<script type="math/tex; mode=display">
y(n)=x(n)-\alpha \cdot x(n-1)</script><p>其中$\alpha$一般取值为$0.97、0.95$<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%预加重y=x(i)<span class="number">-0.97</span>*x(i<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">2</span>:<span class="number">200000</span></span><br><span class="line">    x(i)=x(i)<span class="number">-0.97</span>*x(i<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">y=y<span class="number">'</span>;%对y取转置</span><br></pre></td></tr></table></figure><br>然后我们再来对比一下原始文件和预加重后的数据差异<br><img src="https://img-blog.csdnimg.cn/20191023210005111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们可以看到整个的数据其幅度范围是有所减小的，但是可以看得出来，高频部分的缩小倍数是小于低频部分的缩小倍数的。</p>
<h2 id="3-3-分帧-S-301-1103"><a href="#3-3-分帧-S-301-1103" class="headerlink" title="3.3 分帧{S(301*1103)}"></a>3.3 分帧{S(301*1103)}</h2><p>$\qquad$我们要对语音数据做傅里叶变换，将信息从时域转化为频域。但是如果对整段语音做FFT，就会损失时序信息。因此，我们假设在很短的一段时间t内的频率信息不变，对长度为t的帧做傅里叶变换，就能得到对语音数据的频域和时域信息的适当表达。例如我们这里的采样点数为200000个点，如果真的这样做的话，就很麻烦了，于是我们在语音分析中引入分帧的概念，将原始语音信号分成大小固定的N段语音信号，这里每一段语音信号都被称为一帧。<br>$\qquad$但是，如果我们这样分帧的话，帧与帧之间的连贯性就会变差，于是我们每一帧的前N个采样点数据与前一帧的后N个采样点数据一样。其原理图大致如下所示：<br><img src="https://img-blog.csdnimg.cn/20191023210933359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>$\qquad$对于整个采样点数据可以分为多少帧以及帧与帧之间交叉的采样点个数N，不是随便分的，一般来说帧长设置为$25ms$,帧移设置为$10ms$,对于我这次的仿真，其帧数和帧长数值如下：</p>
<script type="math/tex; mode=display">
\quad 帧数=f_s \cdot 0.025=44100 \cdot0.025=1103(帧)\\ \quad \\ \quad
帧移=f_s \cdot 0.001=44100 \cdot 0.001=441(采样点)</script><p>$\qquad$在这里我们要调用matlab的enframe函数来进行分帧操作，要知道这个函数是包含在voicebox工具箱里边，首先确保其已经安装成功。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">S=enframe(x,<span class="number">1103</span>,<span class="number">662</span>);%分帧,对x进行分帧，</span><br><span class="line">%每帧长度为<span class="number">1103</span>个采样点，每帧之间非重叠部分为<span class="number">662</span>个采样点</span><br><span class="line">%<span class="number">1103</span>=<span class="number">44100</span>*<span class="number">0.025</span>,   <span class="number">441</span>=<span class="number">44100</span>*<span class="number">0.01</span>    <span class="number">662</span>=<span class="number">1103</span><span class="number">-441</span></span><br><span class="line">%根据计算，我们可以将<span class="number">108721</span>个数据根据公式<span class="number">662</span>*<span class="number">301</span>+<span class="number">1103</span>=<span class="number">200365</span></span><br><span class="line">%可以将其分为<span class="number">301</span>帧</span><br></pre></td></tr></table></figure></p>
<h2 id="3-4-加窗-C-301-1103"><a href="#3-4-加窗-C-301-1103" class="headerlink" title="3.4 加窗{C(301*1103)}"></a>3.4 加窗{C(301*1103)}</h2><p>$\qquad$将信号分帧后,我们将每一帧代入窗函数，窗外的值设定为0，其目的是消除各个帧两端可能会造成的信号不连续性（即谱泄露 spectral leakage）。常用的窗函数有方窗、汉明窗和汉宁窗等，根据窗函数的频域特性，常采用汉明窗（hamming window）。接下来我来讲解一下怎么加窗：我们需要做的就是为每一帧数据，也就是301帧数据都加入大小为1103的汉明窗。其汉明窗的表达公式如下所示：</p>
<script type="math/tex; mode=display">
W(n)=(1-a)-a \cdot cos(2\cdot \pi \cdot n/N) \qquad 1 \leq n \leq N</script><p>对于a的取值不同，将会产生不同的汉明窗，一般情况下，$a=0.46$<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%尝试一下汉明窗a=<span class="number">0.46</span>,得到汉明窗W=(<span class="number">1</span>-a)-a*<span class="built_in">cos</span>(<span class="number">2</span>*pi*n/N)</span><br><span class="line">n=<span class="number">1</span>:<span class="number">1103</span>;</span><br><span class="line">W=<span class="number">0.54</span><span class="number">-0.46</span>*<span class="built_in">cos</span>((<span class="number">2</span>*pi.*n)/<span class="number">1103</span>)</span><br><span class="line">plot(W);title('汉明窗');grid on;</span><br><span class="line">xlabel('取样点');ylabel('幅值')</span><br><span class="line">%创建汉明窗矩阵C</span><br><span class="line">C=zeros(<span class="number">301</span>,<span class="number">1103</span>);</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">    C(i,:)=W;</span><br><span class="line"><span class="built_in">end</span></span><br></pre></td></tr></table></figure><br>$\qquad$由上边的公式我们可以得到汉明窗矩阵C,其大小为{301<em>*1103}，由于汉明窗矩阵和分帧后的矩阵S具有相同大小，所以在matlab中使这两个矩阵的对应位置相乘，即可得到加窗后的矩阵SC，其大小为{301</em>1103}。接下来我将随便选取一帧数据来展示一下汉明窗、原始数据、加窗后的数据。其matlab代码如下所示：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">SC=S.*C;</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>);plot(C(<span class="number">7</span>,:),<span class="string">'r'</span>);</span><br><span class="line">title('汉明窗图像');grid on;%画出第7帧的汉明窗图像</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>);plot(S(<span class="number">7</span>,:),<span class="string">'g'</span>);</span><br><span class="line">title('原始信号图像');grid on;%画出第7帧的原始信号图像</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>);plot(SC(<span class="number">7</span>,:),<span class="string">'m'</span>);</span><br><span class="line">title('加了汉明窗的信号图像');grid on;%画出第7帧加了汉明窗的信号图像</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20191023215739555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$在上边的图示中我们就可以看到，在每一帧的低频部分和高频部分都被汉明窗相乘后起了较大抑制作用，使其结果接近于0。</p>
<h2 id="3-5-傅里叶变换"><a href="#3-5-傅里叶变换" class="headerlink" title="3.5 傅里叶变换"></a>3.5 傅里叶变换</h2><p>$\qquad$对于加窗后的矩阵SC,它是一个301<em>1103的矩阵，也就是说，它有301帧数据，且每一帧数据都有1103个采样点，那么我们接下来就要对这301帧的每一帧都要进行N=4096的FFT快速傅里叶变换,得到一个大小为301*</em>4096大小的矩阵D,其帧数还是301帧，对每一帧的4096个数据点分别取模再取平方，然后除以4096；便得到能量谱密度E,其大小为301x4096,然后再对每一帧得到的能量进行相加，即得到一个301x1的矩阵F,其中的每个元素代表每一帧能量的总和。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%对SC的每一帧都进行N=<span class="number">4096</span>的快速傅里叶变换,得到一个<span class="number">301</span>*<span class="number">4096</span>的矩阵</span><br><span class="line">F=<span class="number">0</span>;N=<span class="number">4096</span>;</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">    %对SC作N=<span class="number">4096</span>的FFT变换</span><br><span class="line">    D(i,:)=fft(SC(i,:),N);</span><br><span class="line">    %以下循环实现求取能量谱密度E</span><br><span class="line">    <span class="keyword">for</span> j=<span class="number">1</span>:N</span><br><span class="line">        t=<span class="built_in">abs</span>(D(i,j));</span><br><span class="line">        E(i,j)=(t^<span class="number">2</span>)/N;</span><br><span class="line">    <span class="built_in">end</span></span><br><span class="line">    %获取每一帧的能量总和F(i)</span><br><span class="line">    F(i)=sum(D(i,:));</span><br><span class="line"><span class="built_in">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-6-梅尔滤波器"><a href="#3-6-梅尔滤波器" class="headerlink" title="3.6 梅尔滤波器"></a>3.6 梅尔滤波器</h2><p>$\qquad$首先我要讲一下什么是梅尔值，这是一个新的量度，相比于正常的频率机制，梅尔值更加接近于人耳的听觉机制，其在低频范围内增长速度很快，但在高频范围内，梅尔值的增长速度很慢。每一个频率值都对应着一个梅尔值，其对应关系如下</p>
<script type="math/tex; mode=display">
m=2595 \cdot log_{10}(1+\frac{f}{700})</script><p>在matlab上画出其对应图像如下所示：<br><img src="https://img-blog.csdnimg.cn/2019102323241024.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>对于该函数图像的显示的matlab代码如下所示:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">%梅尔频率转化函数图像</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">200000</span></span><br><span class="line">    mel(i)=<span class="number">2595</span>*<span class="built_in">log10</span>(<span class="number">1</span>+i/<span class="number">700</span>);</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">set(gcf,'position',[180,160,960,550]);%设置画图的大小</span><br><span class="line">plot(mel,'linewidth',1.5);grid on;</span><br><span class="line">title('梅尔频率转换');xlabel('频率');ylabel('梅尔频率');</span><br></pre></td></tr></table></figure><br>但是如果我们要将梅尔频率m转换为频率f呢，我们对上式整理即可得到：</p>
<script type="math/tex; mode=display">
f=700 \cdot (10^{m/2595}-1)</script><p>$\qquad$好了介绍到这里，对于如何得到梅尔滤波器组我们还是无从下手，于是，我在这里描述了一下获得梅尔滤波器的几个简单步骤。然后接下来的操作我们也就将会按照这个步骤来实现。</p>
<p><img src="https://img-blog.csdnimg.cn/20191024013055206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>其中过程1、2、3、4的实现代码如下所示：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">fl=<span class="number">0</span>;fh=fs/<span class="number">2</span>;%定义频率范围，低频和高频</span><br><span class="line">bl=<span class="number">2595</span>*<span class="built_in">log10</span>(<span class="number">1</span>+fl/<span class="number">700</span>);%得到梅尔刻度的最小值</span><br><span class="line">bh=<span class="number">2595</span>*<span class="built_in">log10</span>(<span class="number">1</span>+fh/<span class="number">700</span>);%得到梅尔刻度的最大值</span><br><span class="line">%梅尔坐标范围</span><br><span class="line">p=<span class="number">26</span>;%滤波器个数</span><br><span class="line">B=bh-bl;%梅尔刻度长度</span><br><span class="line">mm=linspace(<span class="number">0</span>,B,p+<span class="number">2</span>);%规划<span class="number">28</span>个不同的梅尔刻度</span><br><span class="line">fm=<span class="number">700</span>*(<span class="number">10.</span>^(mm/<span class="number">2595</span>)<span class="number">-1</span>);%将Mel频率转换为频率</span><br></pre></td></tr></table></figure><br>上边几步都比较好理解，但是对于接下来谱线索引号k的定义，或许就需要一些理解了，其定义公式如下所示：</p>
<script type="math/tex; mode=display">
k=\frac{(1+N)\cdot f_m}{f_s}</script><p>$\qquad$其中$N$为FFT点数，$f_s$为抽样频率，$f_m$为之前那28个梅尔刻度转化为频率后的值，最后我们得到的$k$值为一个1*28的矩阵。且k值范围为$0-N/2$。这个式子是把频率对应到频谱中2048个频率分量的某个。<br>以下则是k值得求解过程：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">k=((N+<span class="number">1</span>)*fm)/fs%计算<span class="number">28</span>个不同的k值</span><br><span class="line">hm=zeros(<span class="number">26</span>,N);%创建hm矩阵</span><br><span class="line">df=fs/N;</span><br><span class="line">freq=(<span class="number">0</span>:N<span class="number">-1</span>)*df;%采样频率值</span><br></pre></td></tr></table></figure><br>好了，现在我们只剩下最后一步了，创建Hm矩阵，这个矩阵得定义如下所示：</p>
<script type="math/tex; mode=display">
H_m(k)=\begin{cases}
0& \text{k}<f(m-1)\\
\frac{2(k-f(m-1))}{(f(m+1)-f(m-1))(f(m)-f(m-1))}& f(m-1)\le k \le f(m)\\
\frac{2(f(m+1)-k)}{(f(m+1)-f(m-1))(f(m)-f(m-1))}& f(m)\le k \le f(m+1)\\
0& k\ge f(m+1)
\end{cases}</script><p>$\qquad$上式中的m代表第几个滤波器，k为横坐标0-2048。26个滤波器就是算2049个频率分量分别属于26个频率带的概率.根据上式计算26个滤波器的二维数组，也就是26*4096二维数组Hm.<br>以下贴出步骤6  Hm矩阵的求解<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">2</span>:<span class="number">27</span></span><br><span class="line">    %取整，这里取得是<span class="number">28</span>个k中的第<span class="number">2</span><span class="number">-27</span>个，舍弃<span class="number">0</span>和<span class="number">28</span></span><br><span class="line">    n0=<span class="built_in">floor</span>(k(i<span class="number">-1</span>));</span><br><span class="line">    n1=<span class="built_in">floor</span>(k(i));</span><br><span class="line">    n2=<span class="built_in">floor</span>(k(i+<span class="number">1</span>));</span><br><span class="line">    %要知道k(i)分别代表的是每个梅尔值在新的范围内的映射，其取值范围为：<span class="number">0</span>-N/<span class="number">2</span></span><br><span class="line">    %以下实现公式--，求取三角滤波器的频率响应。</span><br><span class="line">   <span class="keyword">for</span> j=<span class="number">1</span>:N</span><br><span class="line">       <span class="keyword">if</span> n0&lt;=j &amp; j&lt;=n1</span><br><span class="line">           hm(i<span class="number">-1</span>,j)=<span class="number">2</span>*(j-n0)/((n2-n0)*(n1-n0));</span><br><span class="line">       elseif n1&lt;=j &amp; j&lt;=n2</span><br><span class="line">           hm(i<span class="number">-1</span>,j)=<span class="number">2</span>*(n2-j)/((n2-n0)*(n1-n0));</span><br><span class="line">       <span class="built_in">end</span></span><br><span class="line">   <span class="built_in">end</span></span><br><span class="line">   %此处求取H1(k)结束。</span><br><span class="line"><span class="built_in">end</span></span><br></pre></td></tr></table></figure><br>接下来将要进行最后一步，输出Hm矩阵，并且将梅尔滤波器组画出来。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%绘图,且每条颜色显示不一样</span><br><span class="line">c=colormap(lines(<span class="number">26</span>));%定义<span class="number">26</span>条不同颜色的线条</span><br><span class="line">set(gcf,'position',[180,160,1020,550]);%设置画图的大小</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">26</span></span><br><span class="line">    plot(freq,hm(i,:),'--','color',c(i,:),'linewidth',2.5);%开始循环绘制每个梅尔滤波器</span><br><span class="line">    hold on</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line"> grid on;%显示方格</span><br><span class="line"> axis([<span class="number">0</span> <span class="number">1500</span> <span class="number">0</span> <span class="number">0.2</span>]);%设置显示范围</span><br></pre></td></tr></table></figure><br>$\qquad$画出来之后，我们就会发现该梅尔滤波器，在频率很小的时候，滤波器宽度很窄，随着其频率的增大，滤波器的宽度也会逐渐增大，但其幅值也会逐渐减小。<br><img src="https://img-blog.csdnimg.cn/20191023222025495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="3-7-离散余弦变换"><a href="#3-7-离散余弦变换" class="headerlink" title="3.7 离散余弦变换"></a>3.7 离散余弦变换</h2><p>$\qquad$在进行离散余弦变换之前，我们还需要做的就是把第3.5节得到的二维矩阵能量谱E(301<em>4096)，乘以第3.6节得到的二维数组梅尔滤波器Hm(26</em>4096)的转置，矩阵的转置可得到301*26的矩阵，然后满足矩阵乘法定律，得到参数H,其定义如下：</p>
<script type="math/tex; mode=display">
H=E \cdot H_m^T</script><p>此处的H其实是301x26的二维矩阵。<br>$\qquad$由于滤波器组得到的系数是相关性很高的，因此我们用离散余弦变换（Discrete Cosine Transform）来去相关并且降维。一般来说，在自动语音识别（Automatic Speech Recognition）领域，因为大部分信号数据一般集中在变换后的低频区，所以对每一帧只取前13个数据就好了。<br>好了接下来我们就要进行离散余弦变换了，但是在开始之前我感觉还是先讲解一下其具体的步骤流程吧。<br><img src="https://img-blog.csdnimg.cn/20191024111800887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据mfcc的定义，我们需要对能量的对数作离散余弦变换，即可得到MFCC参数：</p>
<script type="math/tex; mode=display">
mfcc(i,n)=\sum_{m=1}^{M}log[H(i,m)] \cdot cos[\frac{\pi \cdot n \cdot(2m-1)}{2M}]</script><p>$\qquad$其中H为我们上边得到的矩阵H,M代表梅尔滤波器个数，i代表第几帧数据（取值为1-301），n代表第i帧的第n列(n取值范围为1-26)。那么根据上述公式我们可以写出求取mfcc的代码如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%对H作自然对数运算</span><br><span class="line"> %因为人耳听到的声音与信号本身的大小是幂次方关系，所以要求个对数</span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">     <span class="keyword">for</span> j=<span class="number">1</span>:<span class="number">26</span></span><br><span class="line">         H(i,j)=<span class="built_in">log</span>(H(i,j));%取对数运算</span><br><span class="line">     <span class="built_in">end</span></span><br><span class="line"> <span class="built_in">end</span></span><br><span class="line"> %作离散余弦变换   </span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">     <span class="keyword">for</span> j=<span class="number">1</span>:<span class="number">26</span></span><br><span class="line">         %先求取每一帧的能量总和</span><br><span class="line">         sum=<span class="number">0</span>;</span><br><span class="line">         %作离散余弦变换</span><br><span class="line">         <span class="keyword">for</span> p=<span class="number">1</span>:<span class="number">26</span></span><br><span class="line">             sum=sum+H(i,p)*<span class="built_in">cos</span>((pi*j)*(<span class="number">2</span>*p<span class="number">-1</span>)/(<span class="number">2</span>*<span class="number">26</span>));</span><br><span class="line">         <span class="built_in">end</span></span><br><span class="line">         mfcc(i,j)=((<span class="number">2</span>/<span class="number">26</span>)^<span class="number">0.5</span>)*sum;  </span><br><span class="line">         %完成离散余弦变换</span><br><span class="line">     <span class="built_in">end</span>    </span><br><span class="line"> <span class="built_in">end</span></span><br></pre></td></tr></table></figure><br>$\qquad$接下来我们就要根据公式进行升倒谱的计算了，前边我们已经讲到了，因为大部分的信号数据一般集中在变换后的低频区，所以对每一帧只取前13个数据就好了。其公式表达如下：</p>
<script type="math/tex; mode=display">
K(i)=1+(\frac{L}{2})\cdot sin(\frac{\pi \cdot i}{L}) \qquad i=1,2,3...,13</script><p>$\qquad$其中L为升倒谱系数，一般取值为22，我们将其带入即可求得矩阵K,这是一个1x13大小的矩阵，这一部分的升倒谱的其实现代码如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">J=mfcc(:,(<span class="number">1</span>:<span class="number">13</span>));</span><br><span class="line">%默认升到普系数为<span class="number">22</span></span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">13</span></span><br><span class="line">     K(i)=<span class="number">1</span>+(<span class="number">22</span>/<span class="number">2</span>)*<span class="built_in">sin</span>(pi*i/<span class="number">22</span>);</span><br><span class="line"> <span class="built_in">end</span></span><br></pre></td></tr></table></figure><br>接下来我们就要求取MFCC的三个参数了，首先我们先获取mfcc的第一组数据，根据公式：</p>
<script type="math/tex; mode=display">
feat(i,j)=J(i,j) \cdot K(j)\\ \quad \\ \quad i=1,2,3,...,301; \quad j=1,2,...,13</script><p>根据公式我们可以实现如下代码：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%得到二维数组feat,这是mfcc的第一组数据，默认为三组</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">    <span class="keyword">for</span> j=<span class="number">1</span>:<span class="number">13</span></span><br><span class="line">        L(i,j)=J(i,j)*K(j);</span><br><span class="line">    <span class="built_in">end</span></span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">feat=L;%将其值赋值到feat矩阵</span><br></pre></td></tr></table></figure><br>$\qquad$接下来就是求取MFCC的第二组，第三组参数了。第二组参数其实就是在已有的基础参数下作一阶微分操作，第三组参数在第二组参数下作一阶微分操作。那么表达公式事什么样的呢，别急，等我慢慢道来：</p>
<script type="math/tex; mode=display">
dtfeat[i][j]=feat[i+1][j]-feat[i-1][j]+2\cdot feat[i+2][j]-2 \cdot feat[i-2][j] \\ \quad \\
i=1，2，3，...,301 \quad; \quad j=1,2,3...,13</script><p>按照上边的公式，我们可以使用代码实现一阶求导和二阶求导的计算<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%接下来求取第二组（一阶差分系数）<span class="number">301</span>x13 ，这也是mfcc参数的第二组参数</span><br><span class="line"> dtfeat=<span class="number">0</span>;</span><br><span class="line"> dtfeat=zeros(<span class="built_in">size</span>(L));%默认初始化</span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">3</span>:<span class="number">299</span></span><br><span class="line">     dtfeat(i,:)=<span class="number">-2</span>*feat(i<span class="number">-2</span>,:)-feat(i<span class="number">-1</span>,:)+feat(i+<span class="number">1</span>,:)+<span class="number">2</span>*feat(i+<span class="number">2</span>,:); </span><br><span class="line"> <span class="built_in">end</span></span><br><span class="line"> dtfeat=dtfeat/<span class="number">10</span>;</span><br><span class="line">%求取二阶差分系数,mfcc参数的第三组参数</span><br><span class="line">%二阶差分系数就是对前面产生的一阶差分系数dtfeat再次进行操作。</span><br><span class="line"> dttfeat=<span class="number">0</span>;</span><br><span class="line"> dttfeat=zeros(<span class="built_in">size</span>(dtfeat));%默认初始化</span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">3</span>:<span class="number">299</span></span><br><span class="line">     dttfeat(i,:)=<span class="number">-2</span>*dtfeat(i<span class="number">-2</span>,:)-dtfeat(i<span class="number">-1</span>,:)+dtfeat(i+<span class="number">1</span>,:)+<span class="number">2</span>*dtfeat(i+<span class="number">2</span>,:); </span><br><span class="line"> <span class="built_in">end</span></span><br><span class="line"> dttfeat=dttfeat/<span class="number">10</span>;</span><br><span class="line"> %这里的<span class="number">10</span>是根据数据确定的</span><br></pre></td></tr></table></figure><br>$\qquad$好了到这里我们就完成了，MFCC三组参数的求解，我们现在就只需要将这三组数据拼接到一起形成一个301x39的矩阵即可。其实现代码如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%将得到的mfcc的三个参数feat、dtfeat、dttfeat拼接到一起</span><br><span class="line"> %得到最后的mfcc系数<span class="number">301</span>x39</span><br><span class="line"> mfcc_final=<span class="number">0</span>;</span><br><span class="line"> mfcc_final=[feat,dtfeat,dttfeat];%拼接完成</span><br></pre></td></tr></table></figure><br>$\qquad$前面导图中，我们也有讲到过，由于一阶求导和二阶求导的前两帧和后两帧数据都为0，于是我们就要对在mfcc_final中去除这四帧数据。而后我们再选取每一帧的mfcc系数的第一个数得到$MFCC_0$,这是一个297x1的数据，对$MFCC_0$来进行绘图，并与原始信号进行比对。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">mfcc24=mfcc_final((<span class="number">3</span>:<span class="number">299</span>),:);</span><br><span class="line"> %以下画图对比一下原始信号和提取出来的mfcc0</span><br><span class="line"> set(gcf,'position',[180,160,960,550]);%设置画图的大小</span><br><span class="line"> subplot(<span class="number">211</span>)</span><br><span class="line"> plot(x,<span class="string">'m'</span>);grid on;</span><br><span class="line"> title('原始信号');</span><br><span class="line"> axis([<span class="number">0</span> <span class="number">200000</span> <span class="number">-1</span> <span class="number">1</span>]);%对数据，进行绘图</span><br><span class="line"> mfcc0=mfcc24(:,<span class="number">1</span>)%选取mfcc系数的第一个数，组成新的特征参数mfcc0</span><br><span class="line"> subplot(<span class="number">212</span>)</span><br><span class="line"> mfcc00=(mfcc0<span class="number">-80</span>)/<span class="number">2</span></span><br><span class="line"> plot(mfcc00,'r','linewidth',2);</span><br><span class="line"> title('MFCC_0');</span><br><span class="line"> axis([<span class="number">0</span> <span class="number">300</span> <span class="number">-30</span> <span class="number">5</span>]);grid  on</span><br></pre></td></tr></table></figure><br>比对结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20191024122025344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>$\qquad$好了，到了这里我们就可以看到了，原始信号之前是20000个采样点的数据，而现在的$MFCC_0$参数图形大致与原始信号一致，并且其点数只有297个点，这也就说明通过此方法$MFCC_0$，我们可以提取出语音信号的特点以及走向趋势，也就是说在某个程度上我们可以用这297个点来代替$2 \cdot 10^5$点的数据。</p>
<h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h1><p>本次训练是在参考了很多资料的前提下完成的，为了防止自己忘记，所以特此写了本篇文章。</p>
<h1 id="5-参考文献-资料"><a href="#5-参考文献-资料" class="headerlink" title="5.参考文献,资料"></a>5.参考文献,资料</h1><blockquote>
<p>1.<a href="http://d.old.wanfangdata.com.cn/Periodical/bjyddx201902014" target="_blank" rel="noopener">基于谱熵梅尔积的语音端点检测方法</a><br>2.<a href="https://blog.csdn.net/manmanxiaowugun/article/details/84780706" target="_blank" rel="noopener">语音识别MFCC</a><br>3.<a href="https://blog.csdn.net/jojozhangju/article/details/18678861" target="_blank" rel="noopener">语音特征参数MFCC提取过程详解</a><br>4.<a href="https://blog.csdn.net/qq_39516859/article/details/80815369" target="_blank" rel="noopener">Mel滤波器组的设计与实现（基于MATLAB和Python）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>语音识别</category>
      </categories>
  </entry>
  <entry>
    <title>摆脱限制四步走</title>
    <url>/2019/11/18/%E6%91%86%E8%84%B1%E9%99%90%E5%88%B6%E5%9B%9B%E6%AD%A5%E8%B5%B0/</url>
    <content><![CDATA[<h1 id="1-摆脱某雷，从此工作人员站起来了"><a href="#1-摆脱某雷，从此工作人员站起来了" class="headerlink" title="1.摆脱某雷，从此工作人员站起来了"></a>1.摆脱某雷，从此工作人员站起来了</h1><p>使用chrome插件IDM <a href="http://www.internetdownloadmanager.com/download.html" target="_blank" rel="noopener">点击此处进入下载</a>，然后再点击下载即可。<br><img src="https://img-blog.csdnimg.cn/20191007212030413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>下载之后，直接点击安装即可，这个软件最好还是直接按照它的提示安装到C盘,否则则会在运行的时候报错。<br>之后关闭浏览器，再次打开浏览器即可添加成功。之后在每打开一个视频的时候，都会自动出现这个下载图标。如下所示：<img src="https://img-blog.csdnimg.cn/20191007214414368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击图标，就会出现让你选择要下载的视频分辨率：<br><img src="https://img-blog.csdnimg.cn/20191007214618724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可以看到速度还是很快的：<br><img src="https://img-blog.csdnimg.cn/20191007221515885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="2-摆脱某盘，从此开发人员富起来了"><a href="#2-摆脱某盘，从此开发人员富起来了" class="headerlink" title="2.摆脱某盘，从此开发人员富起来了"></a>2.摆脱某盘，从此开发人员富起来了</h1><p>接下来要介绍的一个就是大名鼎鼎的<strong>pandownload</strong>了，<a href="http://pandownload.com/" target="_blank" rel="noopener">其下载链接</a>，这个版本已经包括了手机、电脑各个版本，已经非常顺手了。<br>该软件实现了多账号登陆以及无限速，甚至内部还集成了16路的内部加速器。总之体验感超棒。<br>接下来就要介绍一下其使用流程了：在使用过程中如果下载的文件为现在以登录账号的，则就需要注意：<br><strong>先把文件分享出来，再使用分享链接下载即可</strong>，<br><strong>先把文件分享出来，再使用分享链接下载即可</strong>，<br><strong>先把文件分享出来，再使用分享链接下载即可</strong>。<br>重要的事情说三遍。<br>然后你就可以尽情享受了。<br><img src="https://img-blog.csdnimg.cn/20191007215625509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>以下附上演示：<br><img src="https://img-blog.csdnimg.cn/20191007215901630.gif#pic_center" alt="在这里插入图片描述"></p>
<h1 id="3-从此开发人员strong起来了"><a href="#3-从此开发人员strong起来了" class="headerlink" title="3.从此开发人员strong起来了"></a>3.从此开发人员strong起来了</h1><p>些许内容不便透露，有需要的可以私信我。看到必回。(希望理解)。</p>
<h1 id="4-云盘精灵（网盘文件搜索）—飞起来了"><a href="#4-云盘精灵（网盘文件搜索）—飞起来了" class="headerlink" title="4.云盘精灵（网盘文件搜索）—飞起来了"></a>4.云盘精灵（网盘文件搜索）—飞起来了</h1><p>其官方网址：<a href="https://www.yunpanjingling.com/" target="_blank" rel="noopener">点击链入</a><br>操作很简单，注册个账号，然后在里边输入需要的文件即可。<br><img src="https://img-blog.csdnimg.cn/20191007220705173.gif#pic_center" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>工具类</category>
      </categories>
  </entry>
  <entry>
    <title>IDM的安装</title>
    <url>/2019/11/18/IDM%E7%9A%84%E5%AE%89%E8%A3%85%20(1)/</url>
    <content><![CDATA[<h1 id="1-下载IDM并且安装"><a href="#1-下载IDM并且安装" class="headerlink" title="1.下载IDM并且安装"></a>1.下载IDM并且安装</h1><p><a href="https://pan.baidu.com/s/137pe08DLglCUqnZ0e0TTzA" target="_blank" rel="noopener">网盘链接：</a><br>链接：<a href="https://pan.baidu.com/s/137pe08DLglCUqnZ0e0TTzA" target="_blank" rel="noopener">https://pan.baidu.com/s/137pe08DLglCUqnZ0e0TTzA</a><br>提取码：zwm8<br>1.运行该文件，并且进行安装<br><img src="https://img-blog.csdnimg.cn/20191028194014891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.安装完成之后，进入标中的文件夹<br>运行该文件<br><img src="https://img-blog.csdnimg.cn/20191028194141729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>运行注册机<br><img src="https://img-blog.csdnimg.cn/20191028194226862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择是<br><img src="https://img-blog.csdnimg.cn/20191028194257996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后找到刚刚idm安装的那个路径，我的是安装在 下<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">C:\Program Files (x86)\Internet Download Manager</span><br></pre></td></tr></table></figure><br>然后选择IDMan.exe,之后会提示你输入一个first name 和Last name ，那里随便输入几个字母就可以了。之后即可完成激活<br><img src="https://img-blog.csdnimg.cn/20191028194358483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="2-chrome浏览器安装IDM-Integration-Module"><a href="#2-chrome浏览器安装IDM-Integration-Module" class="headerlink" title="2.chrome浏览器安装IDM Integration Module"></a>2.chrome浏览器安装IDM Integration Module</h1><p>其链接地址<br><a href="https://pan.baidu.com/s/17pLGOBHcUoPrzvVuv0Xb-g" target="_blank" rel="noopener">地址：</a><br>链接：<a href="https://pan.baidu.com/s/17pLGOBHcUoPrzvVuv0Xb-g" target="_blank" rel="noopener">https://pan.baidu.com/s/17pLGOBHcUoPrzvVuv0Xb-g</a><br>提取码：g4gh<br>之后将其拖入Chrome的扩展程序中即可。<br>好了，到了这里IDM以及部署完毕辣。尽情享受吧。</p>
]]></content>
      <categories>
        <category>工具类</category>
      </categories>
  </entry>
  <entry>
    <title>Hello</title>
    <url>/2019/11/18/Hello/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/18/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>腾讯云申请+MobaXterm连接服务器+配置Anaconda环境</title>
    <url>/2019/10/24/%E8%85%BE%E8%AE%AF%E4%BA%91%E7%94%B3%E8%AF%B7+MobaXterm%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8+%E9%85%8D%E7%BD%AEAnaconda%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h2 id="1-腾讯云申请、选择系统、更换系统"><a href="#1-腾讯云申请、选择系统、更换系统" class="headerlink" title="1.腾讯云申请、选择系统、更换系统"></a>1.腾讯云申请、选择系统、更换系统</h2><h3 id="1-1-腾讯云服务器申请"><a href="#1-1-腾讯云服务器申请" class="headerlink" title="1.1 腾讯云服务器申请"></a>1.1 腾讯云服务器申请</h3><p>申请网址：<a href="https://cloud.tencent.com/product/cvm" target="_blank" rel="noopener">链接</a><br>之后点击立即选购即可。<br><img src="https://img-blog.csdnimg.cn/20191016212128855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="1-2-选择系统以及配置"><a href="#1-2-选择系统以及配置" class="headerlink" title="1.2 选择系统以及配置"></a>1.2 选择系统以及配置</h3><p><img src="https://img-blog.csdnimg.cn/20191016212330934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$根据上图我们就可以选择出我们需要的配置。此处我选择了1核1G带宽。对我我现在的要求来说已经足够了。请大家根据自己需求来进行配置。</p>
<h3 id="1-3-更换系统为Ubuntu-16-04-64位"><a href="#1-3-更换系统为Ubuntu-16-04-64位" class="headerlink" title="1.3 更换系统为Ubuntu 16.04 64位"></a>1.3 更换系统为Ubuntu 16.04 64位</h3><p>其操作如下所示：<br>其操作网址如下，需要微信登陆。连接地址：<a href="https://console.cloud.tencent.com/cvm" target="_blank" rel="noopener">网址链接</a></p>
<p><img src="https://img-blog.csdnimg.cn/20191016191241809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>选择要重装的配置即可。<br><img src="https://img-blog.csdnimg.cn/20191016191521398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>之后即可完成系统重装。速度很快很方便。</p>
<h2 id="2-安装MobaXterm并连接远程服务器"><a href="#2-安装MobaXterm并连接远程服务器" class="headerlink" title="2.安装MobaXterm并连接远程服务器"></a>2.安装MobaXterm并连接远程服务器</h2><p>MobaXterm下载地址：<a href="https://mobaxterm.mobatek.net/download-home-edition.html" target="_blank" rel="noopener">官网下载地址</a><br>如果无法下载则使用网盘链接下载：<a href="https://pan.baidu.com/s/1Buj-WuaoLzQdogX8gMqDMA" target="_blank" rel="noopener">链接</a>    提取码：zese<br><img src="https://img-blog.csdnimg.cn/20191016184120905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$这里我需要说明的一下就是，由于我的服务器使用的用户名为ubuntu,我也是在后来才发现的，在连接中我将我自己的用户名已经改正，但是在上图中没有做出更正。点击ok之后，则会提示你让你输入密码，但是这里的密码是不显示的，只需要敲对了回车即可。然后即可看到首次的SSH认证许可，首次认证通过以后，以后则不再出现这个认证界面：<br><img src="https://img-blog.csdnimg.cn/20191016190545701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">    |  <img src="https://img-blog.csdnimg.cn/20191016185825243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>———— | ————————</p>
<p>好了到此已经连接成功了</p>
<h2 id="3-测试连接，输出”hello-word-”"><a href="#3-测试连接，输出”hello-word-”" class="headerlink" title="3.测试连接，输出”hello word!”"></a>3.测试连接，输出”hello word!”</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ touch test</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ vi test</span><br></pre></td></tr></table></figure>
<p>在使用之前先使用touch命令创建一个文件，并且使用vim对其进行编辑：<br><img src="https://img-blog.csdnimg.cn/20191016192703835.png#pic_center" alt="在这里插入图片描述"><br>退出编辑器之后运行刚刚创建的test文件<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ ./test</span><br><span class="line">bash: ./test: Permission denied</span><br></pre></td></tr></table></figure><br>则会出现错误，提示是权限不够，于是我们使用命令<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ ls</span><br><span class="line">test</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ ls -l</span><br><span class="line">total <span class="number">4</span></span><br><span class="line">-rw-rw-r-- <span class="number">1</span> ubuntu ubuntu <span class="number">20</span> Oct <span class="number">16</span> <span class="number">19</span>:<span class="number">21</span> test</span><br></pre></td></tr></table></figure><br>我们看到文件没有执行权限，接下来我们要对该文件开放权限，使用chmod命令，其中777代表的是“可读 可写 可执行”。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ chmod <span class="number">777</span> test</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ ls -l</span><br><span class="line">total <span class="number">4</span></span><br><span class="line">-rwxrwxrwx <span class="number">1</span> ubuntu ubuntu <span class="number">20</span> Oct <span class="number">16</span> <span class="number">19</span>:<span class="number">21</span> test</span><br></pre></td></tr></table></figure><br>更改完权限之后，我们再次执行：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ ./test</span><br><span class="line">hello world!</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$</span><br></pre></td></tr></table></figure><br>可以看到已经执行成功。</p>
<h2 id="4-配置anaconda环境"><a href="#4-配置anaconda环境" class="headerlink" title="4.配置anaconda环境"></a>4.配置anaconda环境</h2><h3 id="方式1-使用MobaXterm上传到服务器"><a href="#方式1-使用MobaXterm上传到服务器" class="headerlink" title="方式1  使用MobaXterm上传到服务器"></a>方式1  使用MobaXterm上传到服务器</h3><p>在清华大学镜像下载linux版的anaconda安装包:<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/?C=M&amp;O=A" target="_blank" rel="noopener">下载地址</a><br>下载完成之后直接将文件拖入MobaXterm左侧即可完成上传到服务器<br><img src="https://img-blog.csdnimg.cn/2019101619562981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="方式2-使用wget在线下载安装包"><a href="#方式2-使用wget在线下载安装包" class="headerlink" title="方式2 使用wget在线下载安装包"></a>方式2 使用wget在线下载安装包</h3><p>使用wget命令下载anaconda安装包<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">wget https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.1.0-Linux-x86_64.sh</span></span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20191016200118407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>完成下载之后，再次执行命令进行安装;<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">bash Anaconda3<span class="number">-5.1</span><span class="number">.0</span>-Linux-x86.sh</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20191016200523721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在之后的界面一直输入回车或者yes即可完成安装。<br><img src="https://img-blog.csdnimg.cn/2019101620145586.png#pic_center" alt="在这里插入图片描述"><br>在这里记得输入yes，将其加入path环境变量。<br><img src="https://img-blog.csdnimg.cn/20191016201552178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$在安装完之后，会提示你是否要安装VSCode，这里我们不需要，所以直接输入no。<br>在这之后，我们直接运行conda命令，发现环境变量未配置好。<img src="https://img-blog.csdnimg.cn/20191016201837927.png#pic_center" alt="在这里插入图片描述"><br>$\qquad$虽然我们刚刚将anaconda的路径添加进环境变量$PATH，但是我们还没有重启环境变量，所以会出现这个错误，现在只需要在命令行中输入如下命令激活即可：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ source ~/.bashrc</span><br></pre></td></tr></table></figure></p>
<p>之后再界面分别conda版本和查看预装python版本。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ python -V</span><br><span class="line">Python <span class="number">3.6</span><span class="number">.4</span> :: Anaconda, Inc.</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ conda -V</span><br><span class="line">conda <span class="number">4.4</span><span class="number">.10</span></span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$</span><br></pre></td></tr></table></figure></p>
<p>$\qquad$我们可以看到这里的python版本是2.7版本，虽然这是一个经典版本，但是现在常用的是3.X版本，于是我们需要使用conda撞见一个3.X的虚拟环境</p>
<h2 id="5-conda创建python3-6虚拟环境"><a href="#5-conda创建python3-6虚拟环境" class="headerlink" title="5.conda创建python3.6虚拟环境"></a>5.conda创建python3.6虚拟环境</h2><p>创建虚拟环境<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">conda create -n py36 python=<span class="number">3.6</span></span><br></pre></td></tr></table></figure><br>其结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20191016204837821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>激活刚刚创建的虚拟环境<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">source activate py36</span><br></pre></td></tr></table></figure><br>执行完毕之后其结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20191016205523832.png#pic_center" alt="在这里插入图片描述"><br>我们便可以见到已经进到这个虚拟环境之中了，现在我们来查看其python版本：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(py36) ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ python -V</span><br><span class="line">Python <span class="number">3.6</span><span class="number">.9</span> :: Anaconda, Inc.</span><br></pre></td></tr></table></figure><br>我们可以看到此处的python版本已经是3.6系列了。<br>如果我们需要关闭该虚拟环境的话，可以执行命令：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">source deactivate</span><br></pre></td></tr></table></figure><br>执行完毕之后则会看到已经退出虚拟环境py36<br><img src="https://img-blog.csdnimg.cn/20191016205947573.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="6-创建python文件，使其输出”Hello-World-”"><a href="#6-创建python文件，使其输出”Hello-World-”" class="headerlink" title="6.创建python文件，使其输出”Hello World!”"></a>6.创建python文件，使其输出”Hello World!”</h2><p>在这里我们使用python3.6环境进行输出，首先进入虚拟环境py36，并且创建一个test.py文件。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ source activate py36</span><br><span class="line">(py36) ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ ls</span><br><span class="line">anaconda3  Anaconda3<span class="number">-5.1</span><span class="number">.0</span>-Linux-x86_64.sh  test</span><br><span class="line">(py36) ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ touch test.py</span><br><span class="line">(py36) ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ vi test.py</span><br></pre></td></tr></table></figure><br>之后在文件内输入<br><img src="https://img-blog.csdnimg.cn/20191016211336773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在编辑完毕之后退出，运行该python程序：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(py36) ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ python test.py</span><br><span class="line">Hello World!</span><br><span class="line">(py36) ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$</span><br></pre></td></tr></table></figure><br>$\qquad$看到该结果还是比较满意的。好了这篇文章就分享到这里了，接下来我将会分享如何在服务器上部署IDEA 发布的Web项目。</p>
]]></content>
      <categories>
        <category>服务器相关</category>
      </categories>
  </entry>
  <entry>
    <title>最详细的MFCC算法实现(matlab)</title>
    <url>/2019/10/24/%E6%9C%80%E8%AF%A6%E7%BB%86%E7%9A%84MFCC%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%EF%BC%88matlab%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1-matlab安装voicebox语音包"><a href="#1-matlab安装voicebox语音包" class="headerlink" title="1.matlab安装voicebox语音包"></a>1.matlab安装voicebox语音包</h1><p>这里该包的安装我直接附上我们师姐写过的一篇文章，里边的介绍很详细：<br><a href="https://blog.csdn.net/qq_39516859/article/details/80264381" target="_blank" rel="noopener">戳这里！！！跳转到文章链接地址</a></p>
<h1 id="2-MFCC原理讲解"><a href="#2-MFCC原理讲解" class="headerlink" title="2.MFCC原理讲解"></a>2.MFCC原理讲解</h1><p>整个MFCC过程大致可以分为以下几步：</p>
<blockquote>
<p>1.音频文件读取（最好是.wav文件）<br>2.预先加重<br>3.分帧<br>4.加窗<br>5.傅里叶变换（当是2的N次方时，可以使用FFT快速傅里叶变换）<br>6.梅尔滤波器组<br>7.离散余弦变换DCT<br><img src="https://img-blog.csdnimg.cn/20191023202550583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="3-MFCC算法设计实现（matlab）"><a href="#3-MFCC算法设计实现（matlab）" class="headerlink" title="3.MFCC算法设计实现（matlab）"></a>3.MFCC算法设计实现（matlab）</h1></blockquote>
<h2 id="3-1-wav格式语音文件提取【x-200000-1-】"><a href="#3-1-wav格式语音文件提取【x-200000-1-】" class="headerlink" title="3.1 .wav格式语音文件提取【x(200000*1)】"></a>3.1 .wav格式语音文件提取【x(200000*1)】</h2><p>$\qquad$在matlab中,使用函数audioread函数来读取本地wav文件，这里要注意的是，采样频率一般为8000Hz和16000Hz，采样频率需要大于真实信号最大频率的2倍，才不会导致频谱混叠。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">clc;</span><br><span class="line"><span class="built_in">clear</span>;</span><br><span class="line">[x,fs]=audioread('diguashao.wav');%读取wav文件</span><br></pre></td></tr></table></figure><br>这里我们用于测试的数据的采样频率 $f_s$ 44100,这个是由 audioread函数默认决定的。</p>
<h2 id="3-2-预加重【x-200000-1-】"><a href="#3-2-预加重【x-200000-1-】" class="headerlink" title="3.2 预加重【x(200000*1)】"></a>3.2 预加重【x(200000*1)】</h2><p>$\qquad$为了避免在后边的FFT操作中出现数值问题，我们需要加强一下高频信息，因为一般高频能量比低频小。其预加重函数如下所示：</p>
<script type="math/tex; mode=display">
y(n)=x(n)-\alpha \cdot x(n-1)</script><p>其中$\alpha$一般取值为$0.97、0.95$<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%预加重y=x(i)<span class="number">-0.97</span>*x(i<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">2</span>:<span class="number">200000</span></span><br><span class="line">    x(i)=x(i)<span class="number">-0.97</span>*x(i<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">y=y<span class="number">'</span>;%对y取转置</span><br></pre></td></tr></table></figure><br>然后我们再来对比一下原始文件和预加重后的数据差异<br><img src="https://img-blog.csdnimg.cn/20191023210005111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们可以看到整个的数据其幅度范围是有所减小的，但是可以看得出来，高频部分的缩小倍数是小于低频部分的缩小倍数的。</p>
<h2 id="3-3-分帧-S-301-1103"><a href="#3-3-分帧-S-301-1103" class="headerlink" title="3.3 分帧{S(301*1103)}"></a>3.3 分帧{S(301*1103)}</h2><p>$\qquad$我们要对语音数据做傅里叶变换，将信息从时域转化为频域。但是如果对整段语音做FFT，就会损失时序信息。因此，我们假设在很短的一段时间t内的频率信息不变，对长度为t的帧做傅里叶变换，就能得到对语音数据的频域和时域信息的适当表达。例如我们这里的采样点数为200000个点，如果真的这样做的话，就很麻烦了，于是我们在语音分析中引入分帧的概念，将原始语音信号分成大小固定的N段语音信号，这里每一段语音信号都被称为一帧。<br>$\qquad$但是，如果我们这样分帧的话，帧与帧之间的连贯性就会变差，于是我们每一帧的前N个采样点数据与前一帧的后N个采样点数据一样。其原理图大致如下所示：<br><img src="https://img-blog.csdnimg.cn/20191023210933359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>$\qquad$对于整个采样点数据可以分为多少帧以及帧与帧之间交叉的采样点个数N，不是随便分的，一般来说帧长设置为$25ms$,帧移设置为$10ms$,对于我这次的仿真，其帧数和帧长数值如下：</p>
<script type="math/tex; mode=display">
\quad 帧数=f_s \cdot 0.025=44100 \cdot0.025=1103(帧)\\ \quad \\ \quad
帧移=f_s \cdot 0.001=44100 \cdot 0.001=441(采样点)</script><p>$\qquad$在这里我们要调用matlab的enframe函数来进行分帧操作，要知道这个函数是包含在voicebox工具箱里边，首先确保其已经安装成功。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">S=enframe(x,<span class="number">1103</span>,<span class="number">662</span>);%分帧,对x进行分帧，</span><br><span class="line">%每帧长度为<span class="number">1103</span>个采样点，每帧之间非重叠部分为<span class="number">662</span>个采样点</span><br><span class="line">%<span class="number">1103</span>=<span class="number">44100</span>*<span class="number">0.025</span>,   <span class="number">441</span>=<span class="number">44100</span>*<span class="number">0.01</span>    <span class="number">662</span>=<span class="number">1103</span><span class="number">-441</span></span><br><span class="line">%根据计算，我们可以将<span class="number">108721</span>个数据根据公式<span class="number">662</span>*<span class="number">301</span>+<span class="number">1103</span>=<span class="number">200365</span></span><br><span class="line">%可以将其分为<span class="number">301</span>帧</span><br></pre></td></tr></table></figure></p>
<h2 id="3-4-加窗-C-301-1103"><a href="#3-4-加窗-C-301-1103" class="headerlink" title="3.4 加窗{C(301*1103)}"></a>3.4 加窗{C(301*1103)}</h2><p>$\qquad$将信号分帧后,我们将每一帧代入窗函数，窗外的值设定为0，其目的是消除各个帧两端可能会造成的信号不连续性（即谱泄露 spectral leakage）。常用的窗函数有方窗、汉明窗和汉宁窗等，根据窗函数的频域特性，常采用汉明窗（hamming window）。接下来我来讲解一下怎么加窗：我们需要做的就是为每一帧数据，也就是301帧数据都加入大小为1103的汉明窗。其汉明窗的表达公式如下所示：</p>
<script type="math/tex; mode=display">
W(n)=(1-a)-a \cdot cos(2\cdot \pi \cdot n/N) \qquad 1 \leq n \leq N</script><p>对于a的取值不同，将会产生不同的汉明窗，一般情况下，$a=0.46$<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%尝试一下汉明窗a=<span class="number">0.46</span>,得到汉明窗W=(<span class="number">1</span>-a)-a*<span class="built_in">cos</span>(<span class="number">2</span>*pi*n/N)</span><br><span class="line">n=<span class="number">1</span>:<span class="number">1103</span>;</span><br><span class="line">W=<span class="number">0.54</span><span class="number">-0.46</span>*<span class="built_in">cos</span>((<span class="number">2</span>*pi.*n)/<span class="number">1103</span>)</span><br><span class="line">plot(W);title('汉明窗');grid on;</span><br><span class="line">xlabel('取样点');ylabel('幅值')</span><br><span class="line">%创建汉明窗矩阵C</span><br><span class="line">C=zeros(<span class="number">301</span>,<span class="number">1103</span>);</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">    C(i,:)=W;</span><br><span class="line"><span class="built_in">end</span></span><br></pre></td></tr></table></figure><br>$\qquad$由上边的公式我们可以得到汉明窗矩阵C,其大小为{301<em>*1103}，由于汉明窗矩阵和分帧后的矩阵S具有相同大小，所以在matlab中使这两个矩阵的对应位置相乘，即可得到加窗后的矩阵SC，其大小为{301</em>1103}。接下来我将随便选取一帧数据来展示一下汉明窗、原始数据、加窗后的数据。其matlab代码如下所示：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">SC=S.*C;</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>);plot(C(<span class="number">7</span>,:),<span class="string">'r'</span>);</span><br><span class="line">title('汉明窗图像');grid on;%画出第7帧的汉明窗图像</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>);plot(S(<span class="number">7</span>,:),<span class="string">'g'</span>);</span><br><span class="line">title('原始信号图像');grid on;%画出第7帧的原始信号图像</span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>);plot(SC(<span class="number">7</span>,:),<span class="string">'m'</span>);</span><br><span class="line">title('加了汉明窗的信号图像');grid on;%画出第7帧加了汉明窗的信号图像</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20191023215739555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>$\qquad$在上边的图示中我们就可以看到，在每一帧的低频部分和高频部分都被汉明窗相乘后起了较大抑制作用，使其结果接近于0。</p>
<h2 id="3-5-傅里叶变换"><a href="#3-5-傅里叶变换" class="headerlink" title="3.5 傅里叶变换"></a>3.5 傅里叶变换</h2><p>$\qquad$对于加窗后的矩阵SC,它是一个301<em>1103的矩阵，也就是说，它有301帧数据，且每一帧数据都有1103个采样点，那么我们接下来就要对这301帧的每一帧都要进行N=4096的FFT快速傅里叶变换,得到一个大小为301*</em>4096大小的矩阵D,其帧数还是301帧，对每一帧的4096个数据点分别取模再取平方，然后除以4096；便得到能量谱密度E,其大小为301x4096,然后再对每一帧得到的能量进行相加，即得到一个301x1的矩阵F,其中的每个元素代表每一帧能量的总和。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%对SC的每一帧都进行N=<span class="number">4096</span>的快速傅里叶变换,得到一个<span class="number">301</span>*<span class="number">4096</span>的矩阵</span><br><span class="line">F=<span class="number">0</span>;N=<span class="number">4096</span>;</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">    %对SC作N=<span class="number">4096</span>的FFT变换</span><br><span class="line">    D(i,:)=fft(SC(i,:),N);</span><br><span class="line">    %以下循环实现求取能量谱密度E</span><br><span class="line">    <span class="keyword">for</span> j=<span class="number">1</span>:N</span><br><span class="line">        t=<span class="built_in">abs</span>(D(i,j));</span><br><span class="line">        E(i,j)=(t^<span class="number">2</span>)/N;</span><br><span class="line">    <span class="built_in">end</span></span><br><span class="line">    %获取每一帧的能量总和F(i)</span><br><span class="line">    F(i)=sum(D(i,:));</span><br><span class="line"><span class="built_in">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-6-梅尔滤波器"><a href="#3-6-梅尔滤波器" class="headerlink" title="3.6 梅尔滤波器"></a>3.6 梅尔滤波器</h2><p>$\qquad$首先我要讲一下什么是梅尔值，这是一个新的量度，相比于正常的频率机制，梅尔值更加接近于人耳的听觉机制，其在低频范围内增长速度很快，但在高频范围内，梅尔值的增长速度很慢。每一个频率值都对应着一个梅尔值，其对应关系如下</p>
<script type="math/tex; mode=display">
m=2595 \cdot log_{10}(1+\frac{f}{700})</script><p>在matlab上画出其对应图像如下所示：<br><img src="https://img-blog.csdnimg.cn/2019102323241024.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>对于该函数图像的显示的matlab代码如下所示:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">%梅尔频率转化函数图像</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">200000</span></span><br><span class="line">    mel(i)=<span class="number">2595</span>*<span class="built_in">log10</span>(<span class="number">1</span>+i/<span class="number">700</span>);</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">set(gcf,'position',[180,160,960,550]);%设置画图的大小</span><br><span class="line">plot(mel,'linewidth',1.5);grid on;</span><br><span class="line">title('梅尔频率转换');xlabel('频率');ylabel('梅尔频率');</span><br></pre></td></tr></table></figure><br>但是如果我们要将梅尔频率m转换为频率f呢，我们对上式整理即可得到：</p>
<script type="math/tex; mode=display">
f=700 \cdot (10^{m/2595}-1)</script><p>$\qquad$好了介绍到这里，对于如何得到梅尔滤波器组我们还是无从下手，于是，我在这里描述了一下获得梅尔滤波器的几个简单步骤。然后接下来的操作我们也就将会按照这个步骤来实现。</p>
<p><img src="https://img-blog.csdnimg.cn/20191024013055206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>其中过程1、2、3、4的实现代码如下所示：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">fl=<span class="number">0</span>;fh=fs/<span class="number">2</span>;%定义频率范围，低频和高频</span><br><span class="line">bl=<span class="number">2595</span>*<span class="built_in">log10</span>(<span class="number">1</span>+fl/<span class="number">700</span>);%得到梅尔刻度的最小值</span><br><span class="line">bh=<span class="number">2595</span>*<span class="built_in">log10</span>(<span class="number">1</span>+fh/<span class="number">700</span>);%得到梅尔刻度的最大值</span><br><span class="line">%梅尔坐标范围</span><br><span class="line">p=<span class="number">26</span>;%滤波器个数</span><br><span class="line">B=bh-bl;%梅尔刻度长度</span><br><span class="line">mm=linspace(<span class="number">0</span>,B,p+<span class="number">2</span>);%规划<span class="number">28</span>个不同的梅尔刻度</span><br><span class="line">fm=<span class="number">700</span>*(<span class="number">10.</span>^(mm/<span class="number">2595</span>)<span class="number">-1</span>);%将Mel频率转换为频率</span><br></pre></td></tr></table></figure><br>上边几步都比较好理解，但是对于接下来谱线索引号k的定义，或许就需要一些理解了，其定义公式如下所示：</p>
<script type="math/tex; mode=display">
k=\frac{(1+N)\cdot f_m}{f_s}</script><p>$\qquad$其中$N$为FFT点数，$f_s$为抽样频率，$f_m$为之前那28个梅尔刻度转化为频率后的值，最后我们得到的$k$值为一个1*28的矩阵。且k值范围为$0-N/2$。这个式子是把频率对应到频谱中2048个频率分量的某个。<br>以下则是k值得求解过程：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">k=((N+<span class="number">1</span>)*fm)/fs%计算<span class="number">28</span>个不同的k值</span><br><span class="line">hm=zeros(<span class="number">26</span>,N);%创建hm矩阵</span><br><span class="line">df=fs/N;</span><br><span class="line">freq=(<span class="number">0</span>:N<span class="number">-1</span>)*df;%采样频率值</span><br></pre></td></tr></table></figure><br>好了，现在我们只剩下最后一步了，创建Hm矩阵，这个矩阵得定义如下所示：</p>
<script type="math/tex; mode=display">
H_m(k)=\begin{cases}
0& \text{k}<f(m-1)\\
\frac{2(k-f(m-1))}{(f(m+1)-f(m-1))(f(m)-f(m-1))}& f(m-1)\le k \le f(m)\\
\frac{2(f(m+1)-k)}{(f(m+1)-f(m-1))(f(m)-f(m-1))}& f(m)\le k \le f(m+1)\\
0& k\ge f(m+1)
\end{cases}</script><p>$\qquad$上式中的m代表第几个滤波器，k为横坐标0-2048。26个滤波器就是算2049个频率分量分别属于26个频率带的概率.根据上式计算26个滤波器的二维数组，也就是26*4096二维数组Hm.<br>以下贴出步骤6  Hm矩阵的求解<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">2</span>:<span class="number">27</span></span><br><span class="line">    %取整，这里取得是<span class="number">28</span>个k中的第<span class="number">2</span><span class="number">-27</span>个，舍弃<span class="number">0</span>和<span class="number">28</span></span><br><span class="line">    n0=<span class="built_in">floor</span>(k(i<span class="number">-1</span>));</span><br><span class="line">    n1=<span class="built_in">floor</span>(k(i));</span><br><span class="line">    n2=<span class="built_in">floor</span>(k(i+<span class="number">1</span>));</span><br><span class="line">    %要知道k(i)分别代表的是每个梅尔值在新的范围内的映射，其取值范围为：<span class="number">0</span>-N/<span class="number">2</span></span><br><span class="line">    %以下实现公式--，求取三角滤波器的频率响应。</span><br><span class="line">   <span class="keyword">for</span> j=<span class="number">1</span>:N</span><br><span class="line">       <span class="keyword">if</span> n0&lt;=j &amp; j&lt;=n1</span><br><span class="line">           hm(i<span class="number">-1</span>,j)=<span class="number">2</span>*(j-n0)/((n2-n0)*(n1-n0));</span><br><span class="line">       elseif n1&lt;=j &amp; j&lt;=n2</span><br><span class="line">           hm(i<span class="number">-1</span>,j)=<span class="number">2</span>*(n2-j)/((n2-n0)*(n1-n0));</span><br><span class="line">       <span class="built_in">end</span></span><br><span class="line">   <span class="built_in">end</span></span><br><span class="line">   %此处求取H1(k)结束。</span><br><span class="line"><span class="built_in">end</span></span><br></pre></td></tr></table></figure><br>接下来将要进行最后一步，输出Hm矩阵，并且将梅尔滤波器组画出来。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%绘图,且每条颜色显示不一样</span><br><span class="line">c=colormap(lines(<span class="number">26</span>));%定义<span class="number">26</span>条不同颜色的线条</span><br><span class="line">set(gcf,'position',[180,160,1020,550]);%设置画图的大小</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">26</span></span><br><span class="line">    plot(freq,hm(i,:),'--','color',c(i,:),'linewidth',2.5);%开始循环绘制每个梅尔滤波器</span><br><span class="line">    hold on</span><br><span class="line"><span class="built_in">end</span></span><br><span class="line"> grid on;%显示方格</span><br><span class="line"> axis([<span class="number">0</span> <span class="number">1500</span> <span class="number">0</span> <span class="number">0.2</span>]);%设置显示范围</span><br></pre></td></tr></table></figure><br>$\qquad$画出来之后，我们就会发现该梅尔滤波器，在频率很小的时候，滤波器宽度很窄，随着其频率的增大，滤波器的宽度也会逐渐增大，但其幅值也会逐渐减小。<br><img src="https://img-blog.csdnimg.cn/20191023222025495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="3-7-离散余弦变换"><a href="#3-7-离散余弦变换" class="headerlink" title="3.7 离散余弦变换"></a>3.7 离散余弦变换</h2><p>$\qquad$在进行离散余弦变换之前，我们还需要做的就是把第3.5节得到的二维矩阵能量谱E(301<em>4096)，乘以第3.6节得到的二维数组梅尔滤波器Hm(26</em>4096)的转置，矩阵的转置可得到301*26的矩阵，然后满足矩阵乘法定律，得到参数H,其定义如下：</p>
<script type="math/tex; mode=display">
H=E \cdot H_m^T</script><p>此处的H其实是301x26的二维矩阵。<br>$\qquad$由于滤波器组得到的系数是相关性很高的，因此我们用离散余弦变换（Discrete Cosine Transform）来去相关并且降维。一般来说，在自动语音识别（Automatic Speech Recognition）领域，因为大部分信号数据一般集中在变换后的低频区，所以对每一帧只取前13个数据就好了。<br>好了接下来我们就要进行离散余弦变换了，但是在开始之前我感觉还是先讲解一下其具体的步骤流程吧。<br><img src="https://img-blog.csdnimg.cn/20191024111800887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据mfcc的定义，我们需要对能量的对数作离散余弦变换，即可得到MFCC参数：</p>
<script type="math/tex; mode=display">
mfcc(i,n)=\sum_{m=1}^{M}log[H(i,m)] \cdot cos[\frac{\pi \cdot n \cdot(2m-1)}{2M}]</script><p>$\qquad$其中H为我们上边得到的矩阵H,M代表梅尔滤波器个数，i代表第几帧数据（取值为1-301），n代表第i帧的第n列(n取值范围为1-26)。那么根据上述公式我们可以写出求取mfcc的代码如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%对H作自然对数运算</span><br><span class="line"> %因为人耳听到的声音与信号本身的大小是幂次方关系，所以要求个对数</span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">     <span class="keyword">for</span> j=<span class="number">1</span>:<span class="number">26</span></span><br><span class="line">         H(i,j)=<span class="built_in">log</span>(H(i,j));%取对数运算</span><br><span class="line">     <span class="built_in">end</span></span><br><span class="line"> <span class="built_in">end</span></span><br><span class="line"> %作离散余弦变换   </span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">     <span class="keyword">for</span> j=<span class="number">1</span>:<span class="number">26</span></span><br><span class="line">         %先求取每一帧的能量总和</span><br><span class="line">         sum=<span class="number">0</span>;</span><br><span class="line">         %作离散余弦变换</span><br><span class="line">         <span class="keyword">for</span> p=<span class="number">1</span>:<span class="number">26</span></span><br><span class="line">             sum=sum+H(i,p)*<span class="built_in">cos</span>((pi*j)*(<span class="number">2</span>*p<span class="number">-1</span>)/(<span class="number">2</span>*<span class="number">26</span>));</span><br><span class="line">         <span class="built_in">end</span></span><br><span class="line">         mfcc(i,j)=((<span class="number">2</span>/<span class="number">26</span>)^<span class="number">0.5</span>)*sum;  </span><br><span class="line">         %完成离散余弦变换</span><br><span class="line">     <span class="built_in">end</span>    </span><br><span class="line"> <span class="built_in">end</span></span><br></pre></td></tr></table></figure><br>$\qquad$接下来我们就要根据公式进行升倒谱的计算了，前边我们已经讲到了，因为大部分的信号数据一般集中在变换后的低频区，所以对每一帧只取前13个数据就好了。其公式表达如下：</p>
<script type="math/tex; mode=display">
K(i)=1+(\frac{L}{2})\cdot sin(\frac{\pi \cdot i}{L}) \qquad i=1,2,3...,13</script><p>$\qquad$其中L为升倒谱系数，一般取值为22，我们将其带入即可求得矩阵K,这是一个1x13大小的矩阵，这一部分的升倒谱的其实现代码如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">J=mfcc(:,(<span class="number">1</span>:<span class="number">13</span>));</span><br><span class="line">%默认升到普系数为<span class="number">22</span></span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">13</span></span><br><span class="line">     K(i)=<span class="number">1</span>+(<span class="number">22</span>/<span class="number">2</span>)*<span class="built_in">sin</span>(pi*i/<span class="number">22</span>);</span><br><span class="line"> <span class="built_in">end</span></span><br></pre></td></tr></table></figure><br>接下来我们就要求取MFCC的三个参数了，首先我们先获取mfcc的第一组数据，根据公式：</p>
<script type="math/tex; mode=display">
feat(i,j)=J(i,j) \cdot K(j)\\ \quad \\ \quad i=1,2,3,...,301; \quad j=1,2,...,13</script><p>根据公式我们可以实现如下代码：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%得到二维数组feat,这是mfcc的第一组数据，默认为三组</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">301</span></span><br><span class="line">    <span class="keyword">for</span> j=<span class="number">1</span>:<span class="number">13</span></span><br><span class="line">        L(i,j)=J(i,j)*K(j);</span><br><span class="line">    <span class="built_in">end</span></span><br><span class="line"><span class="built_in">end</span></span><br><span class="line">feat=L;%将其值赋值到feat矩阵</span><br></pre></td></tr></table></figure><br>$\qquad$接下来就是求取MFCC的第二组，第三组参数了。第二组参数其实就是在已有的基础参数下作一阶微分操作，第三组参数在第二组参数下作一阶微分操作。那么表达公式事什么样的呢，别急，等我慢慢道来：</p>
<script type="math/tex; mode=display">
dtfeat[i][j]=feat[i+1][j]-feat[i-1][j]+2\cdot feat[i+2][j]-2 \cdot feat[i-2][j] \\ \quad \\
i=1，2，3，...,301 \quad; \quad j=1,2,3...,13</script><p>按照上边的公式，我们可以使用代码实现一阶求导和二阶求导的计算<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%接下来求取第二组（一阶差分系数）<span class="number">301</span>x13 ，这也是mfcc参数的第二组参数</span><br><span class="line"> dtfeat=<span class="number">0</span>;</span><br><span class="line"> dtfeat=zeros(<span class="built_in">size</span>(L));%默认初始化</span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">3</span>:<span class="number">299</span></span><br><span class="line">     dtfeat(i,:)=<span class="number">-2</span>*feat(i<span class="number">-2</span>,:)-feat(i<span class="number">-1</span>,:)+feat(i+<span class="number">1</span>,:)+<span class="number">2</span>*feat(i+<span class="number">2</span>,:); </span><br><span class="line"> <span class="built_in">end</span></span><br><span class="line"> dtfeat=dtfeat/<span class="number">10</span>;</span><br><span class="line">%求取二阶差分系数,mfcc参数的第三组参数</span><br><span class="line">%二阶差分系数就是对前面产生的一阶差分系数dtfeat再次进行操作。</span><br><span class="line"> dttfeat=<span class="number">0</span>;</span><br><span class="line"> dttfeat=zeros(<span class="built_in">size</span>(dtfeat));%默认初始化</span><br><span class="line"> <span class="keyword">for</span> i=<span class="number">3</span>:<span class="number">299</span></span><br><span class="line">     dttfeat(i,:)=<span class="number">-2</span>*dtfeat(i<span class="number">-2</span>,:)-dtfeat(i<span class="number">-1</span>,:)+dtfeat(i+<span class="number">1</span>,:)+<span class="number">2</span>*dtfeat(i+<span class="number">2</span>,:); </span><br><span class="line"> <span class="built_in">end</span></span><br><span class="line"> dttfeat=dttfeat/<span class="number">10</span>;</span><br><span class="line"> %这里的<span class="number">10</span>是根据数据确定的</span><br></pre></td></tr></table></figure><br>$\qquad$好了到这里我们就完成了，MFCC三组参数的求解，我们现在就只需要将这三组数据拼接到一起形成一个301x39的矩阵即可。其实现代码如下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%将得到的mfcc的三个参数feat、dtfeat、dttfeat拼接到一起</span><br><span class="line"> %得到最后的mfcc系数<span class="number">301</span>x39</span><br><span class="line"> mfcc_final=<span class="number">0</span>;</span><br><span class="line"> mfcc_final=[feat,dtfeat,dttfeat];%拼接完成</span><br></pre></td></tr></table></figure><br>$\qquad$前面导图中，我们也有讲到过，由于一阶求导和二阶求导的前两帧和后两帧数据都为0，于是我们就要对在mfcc_final中去除这四帧数据。而后我们再选取每一帧的mfcc系数的第一个数得到$MFCC_0$,这是一个297x1的数据，对$MFCC_0$来进行绘图，并与原始信号进行比对。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">mfcc24=mfcc_final((<span class="number">3</span>:<span class="number">299</span>),:);</span><br><span class="line"> %以下画图对比一下原始信号和提取出来的mfcc0</span><br><span class="line"> set(gcf,'position',[180,160,960,550]);%设置画图的大小</span><br><span class="line"> subplot(<span class="number">211</span>)</span><br><span class="line"> plot(x,<span class="string">'m'</span>);grid on;</span><br><span class="line"> title('原始信号');</span><br><span class="line"> axis([<span class="number">0</span> <span class="number">200000</span> <span class="number">-1</span> <span class="number">1</span>]);%对数据，进行绘图</span><br><span class="line"> mfcc0=mfcc24(:,<span class="number">1</span>)%选取mfcc系数的第一个数，组成新的特征参数mfcc0</span><br><span class="line"> subplot(<span class="number">212</span>)</span><br><span class="line"> mfcc00=(mfcc0<span class="number">-80</span>)/<span class="number">2</span></span><br><span class="line"> plot(mfcc00,'r','linewidth',2);</span><br><span class="line"> title('MFCC_0');</span><br><span class="line"> axis([<span class="number">0</span> <span class="number">300</span> <span class="number">-30</span> <span class="number">5</span>]);grid  on</span><br></pre></td></tr></table></figure><br>比对结果如下所示：<br><img src="https://img-blog.csdnimg.cn/20191024122025344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>$\qquad$好了，到了这里我们就可以看到了，原始信号之前是20000个采样点的数据，而现在的$MFCC_0$参数图形大致与原始信号一致，并且其点数只有297个点，这也就说明通过此方法$MFCC_0$，我们可以提取出语音信号的特点以及走向趋势，也就是说在某个程度上我们可以用这297个点来代替$2 \cdot 10^5$点的数据。</p>
<h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h1><p>本次训练是在参考了很多资料的前提下完成的，为了防止自己忘记，所以特此写了本篇文章。</p>
<h1 id="5-参考文献-资料"><a href="#5-参考文献-资料" class="headerlink" title="5.参考文献,资料"></a>5.参考文献,资料</h1><blockquote>
<p>1.<a href="http://d.old.wanfangdata.com.cn/Periodical/bjyddx201902014" target="_blank" rel="noopener">基于谱熵梅尔积的语音端点检测方法</a><br>2.<a href="https://blog.csdn.net/manmanxiaowugun/article/details/84780706" target="_blank" rel="noopener">语音识别MFCC</a><br>3.<a href="https://blog.csdn.net/jojozhangju/article/details/18678861" target="_blank" rel="noopener">语音特征参数MFCC提取过程详解</a><br>4.<a href="https://blog.csdn.net/qq_39516859/article/details/80815369" target="_blank" rel="noopener">Mel滤波器组的设计与实现（基于MATLAB和Python）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>语音识别</category>
      </categories>
  </entry>
  <entry>
    <title>如何将IDEA开发的java web项目移植到腾讯云服务器</title>
    <url>/2019/10/23/%E5%A6%82%E4%BD%95%E5%B0%86IDEA%E5%BC%80%E5%8F%91%E7%9A%84java%20web%E9%A1%B9%E7%9B%AE%E7%A7%BB%E6%A4%8D%E5%88%B0%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="1-服务器添加国内新源"><a href="#1-服务器添加国内新源" class="headerlink" title="1.服务器添加国内新源"></a>1.服务器添加国内新源</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.<span class="built_in">list</span> /etc/apt/sources_init.<span class="built_in">list</span></span><br><span class="line">sudo gedit /etc/apt/sources.<span class="built_in">list</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> update</span><br></pre></td></tr></table></figure>
<p>操作内容具体可以参看这篇博客<a href="https://blog.csdn.net/qq_35451572/article/details/79516563#_70" target="_blank" rel="noopener">博客链接</a></p>
<h2 id="2-服务器安装java-jdk"><a href="#2-服务器安装java-jdk" class="headerlink" title="2.服务器安装java jdk"></a>2.服务器安装java jdk</h2><p>使用命令：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install openjdk<span class="number">-8</span>-jdk</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20191017101952719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>安装完成之后查看java版本<br><img src="https://img-blog.csdnimg.cn/20191017103006728.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="3-下载tomcat-8-5-31-（与自己电脑的tomcat版本对应）"><a href="#3-下载tomcat-8-5-31-（与自己电脑的tomcat版本对应）" class="headerlink" title="3.下载tomcat 8.5.31 （与自己电脑的tomcat版本对应）"></a>3.下载tomcat 8.5.31 （与自己电脑的tomcat版本对应）</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">wget https:<span class="comment">//archive.apache.org/dist/tomcat/tomcat-8/v8.5.31/bin/apache-tomcat-8.5.31.tar.gz</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191017105426286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo tar -xvzf apache-tomcat<span class="number">-8.5</span><span class="number">.31</span>.tar.gz</span><br></pre></td></tr></table></figure><br>解压</p>
<p>文件转移至usr/tomcat<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ cd /usr</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr$ ls</span><br><span class="line">bin  games  include  lib  local  sbin  share  src</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr$ sudo <span class="built_in">mkdir</span> tomcat</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr$ ls</span><br><span class="line">bin  games  include  lib  local  sbin  share  src  tomcat</span><br></pre></td></tr></table></figure><br>创建tomcat文件夹之后，将之前解压的文件复制一份到/usr/tomcat<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr$ cd tomcat/</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr/tomcat$ sudo cp -r /<span class="built_in">home</span>/ubuntu/apache-tomcat<span class="number">-8.5</span><span class="number">.31</span> /usr/tomcat/</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr/tomcat$ ls</span><br><span class="line">apache-tomcat<span class="number">-8.5</span><span class="number">.31</span></span><br></pre></td></tr></table></figure><br>执行tomcat文件<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr/tomcat/apache-tomcat<span class="number">-8.5</span><span class="number">.31</span>$ cd bin/</span><br><span class="line">bash: cd: bin/: Permission denied</span><br></pre></td></tr></table></figure><br>我们在进入该文件下的bin目录时，我们发现，无法直接进入，提示权限不够，所以，我们直接切换到root用户<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr/tomcat/apache-tomcat<span class="number">-8.5</span><span class="number">.31</span>$ sudo su</span><br><span class="line">root@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:/usr/tomcat/apache-tomcat<span class="number">-8.5</span><span class="number">.31</span><span class="meta"># cd bin/</span></span><br></pre></td></tr></table></figure><br>可以看到此时是可以的，接下里查看一下bin目录下的文件<br><img src="https://img-blog.csdnimg.cn/20191017120825558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>执行如下命令，开启服务，<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><br>我们则会看到提示：<br><img src="https://img-blog.csdnimg.cn/20191017121243258.png#pic_center" alt="在这里插入图片描述"><br>提示已经启动成功。这时我们只需要在浏览器页面输入网址<br>，即可看到tomcat默认的网页，如下所示：<br><img src="https://img-blog.csdnimg.cn/20191017121614125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>最后，如果想要关闭服务器的话，直接在服务器终端运行：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">./<span class="built_in">shutdown</span>.sh</span><br></pre></td></tr></table></figure></p>
<h2 id="4-安装mysql数据库（版本最好和之前的web项目一样）"><a href="#4-安装mysql数据库（版本最好和之前的web项目一样）" class="headerlink" title="4.安装mysql数据库（版本最好和之前的web项目一样）"></a>4.安装mysql数据库（版本最好和之前的web项目一样）</h2><p>在这之前我们可以先退出root用户,切换到ubuntu用户，使用命令：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">su ubuntu</span><br></pre></td></tr></table></figure><br>可以看到已经切换完毕，<br><img src="https://img-blog.csdnimg.cn/2019101712261064.png#pic_center" alt="在这里插入图片描述"><br>接下来我们直接回到主目录，使用命令<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">cd ~</span><br></pre></td></tr></table></figure><br>我们看到已经切换完毕。<br><img src="https://img-blog.csdnimg.cn/20191017122856669.png#pic_center" alt="在这里插入图片描述"></p>
<p>在ubuntu上安装数据库话还是比较简单的，只需要下面三条命令：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install mysql-server</span><br><span class="line">sudo apt-<span class="built_in">get</span> install mysql-client</span><br><span class="line">sudo apt-<span class="built_in">get</span> install libmysqlclient-dev</span><br></pre></td></tr></table></figure><br>在安装过程中，只需要按照提示设置好密码即可。<br>在执行完成上边的三步之后，检验一下，是否真正安装成功，使用如下命令：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo netstat -tap |grep mysql</span><br></pre></td></tr></table></figure><br>如果出现下图所示，即表示已经安装成功：<br><img src="https://img-blog.csdnimg.cn/20191017123723759.png#pic_center" alt="在这里插入图片描述"><br>接下来让我们来打开我们的数据库，使用如下命令：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><br>之后在输入密码以后即可成功访问数据库：<br><img src="https://img-blog.csdnimg.cn/20191017123905970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>接下来进行一下数据库的常规操作，查看拥有的数据库名称。<br><img src="https://img-blog.csdnimg.cn/20191017124104794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="5-将java-Web项目打包成war包"><a href="#5-将java-Web项目打包成war包" class="headerlink" title="5.将java Web项目打包成war包"></a>5.将java Web项目打包成war包</h2><p>由于我的项目是使用IDEA搞得，所以我在这里就直接用IDEA进行导包了，首先打开IDEA界面如下：<br><img src="https://img-blog.csdnimg.cn/20191017213143708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>先创建一个explod</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><img src="https://img-blog.csdnimg.cn/20191017213445505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></th>
<th><img src="https://img-blog.csdnimg.cn/20191017214528671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>其实在完成之前的四步操作的话，是不用进行任何操作的，只需要点击两次<strong>OK</strong>即可。此刻，我们的explode已经创建完成。我们要做的就是记住这个explode的名字，就是上方红色标注的地方。<br>再创建一个archive</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><img src="https://img-blog.csdnimg.cn/20191017214757163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></th>
<th><img src="https://img-blog.csdnimg.cn/20191017215056674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_60" alt="在这里插入图片描述"></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>完成之后点击OK即可完成创建，接下来我们就要对其进行Build</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><img src="https://img-blog.csdnimg.cn/20191017215414973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_50" alt="在这里插入图片描述"></th>
<th><img src="https://img-blog.csdnimg.cn/20191017215503324.png" alt="在这里插入图片描述"></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>点击之后即可看见项目正在打包，而后我们便可以在对应的目录找到打包后的文件<br><img src="https://img-blog.csdnimg.cn/20191017215744478.png" alt="在这里插入图片描述"><br>此处我的文件位置为（每个人的位置都不一样，这个上边创建Archive的时候有设置输出路径）：<br><img src="https://img-blog.csdnimg.cn/20191017215938650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>好了到此，项目打包完成。</p>
<h2 id="6-将本地数据库导入服务器数据库"><a href="#6-将本地数据库导入服务器数据库" class="headerlink" title="6.将本地数据库导入服务器数据库"></a>6.将本地数据库导入服务器数据库</h2><h3 id="6-1-将本地的数据库表格导出为sql"><a href="#6-1-将本地的数据库表格导出为sql" class="headerlink" title="6.1 将本地的数据库表格导出为sql"></a>6.1 将本地的数据库表格导出为sql</h3><p>对于数据库表格的导出，由于我的电脑之前安装过mysql workbench（windows上的一个图形化管理工具）,所以在这里我就使用其将本地的数据表格导出为sql文件。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><img src="https://img-blog.csdnimg.cn/20191017204604227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></th>
<th><img src="https://img-blog.csdnimg.cn/20191017205033326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_60" alt="在这里插入图片描述"></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>如上操作完毕之后则可以将数据库表格导出为sql文件，我们只需到指定文件夹下去寻找即可。</p>
<h3 id="6-2-将sql文件导入到服务器的mysql数据库"><a href="#6-2-将sql文件导入到服务器的mysql数据库" class="headerlink" title="6.2 将sql文件导入到服务器的mysql数据库"></a>6.2 将sql文件导入到服务器的mysql数据库</h3><p>本节使用之前搭建好的MobaXterm工具，只需将文件拖入即可在服务器端接收到。这里我们将这些sql文件都放在一个文件夹下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ mv words_cet.sql sql_documents/</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ mv words_chinese_word.sql sql_documents/</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ mv words_engchdic.sql sql_documents/</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~$ cd sql_documents/</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~/sql_documents$ ls</span><br><span class="line">words_cet.sql  words_chinese_word.sql  words_engchdic.sql</span><br><span class="line">ubuntu@VM<span class="number">-0</span><span class="number">-12</span>-ubuntu:~/sql_documents$</span><br></pre></td></tr></table></figure></p>
<p>打开mysql服务<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><br>此过程需要输入密码，完成之后如下所示：<br><img src="https://img-blog.csdnimg.cn/20191017205933962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后分别执行如下命令<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">create database words;</span><br><span class="line">use words;</span><br></pre></td></tr></table></figure><br>创建一个数据库并且进入该数据库,然后再使用source 命令导入sql文件<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">mysql&gt; source /<span class="built_in">home</span>/ubuntu/sql_documents/words_cet.sql;</span><br><span class="line">mysql&gt; source /<span class="built_in">home</span>/ubuntu/sql_documents/words_chinese_word.sql;</span><br><span class="line">mysql&gt; source /<span class="built_in">home</span>/ubuntu/sql_documents/words_engchdic.sql;</span><br></pre></td></tr></table></figure><br>执行之后可以看到如下结果：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><img src="https://img-blog.csdnimg.cn/201910172109406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></th>
<th><img src="https://img-blog.csdnimg.cn/20191017211012815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>我们可以看到文件已经导入成功，那么，我们来检验一下：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">show tables;</span><br><span class="line">select * from cet;</span><br></pre></td></tr></table></figure><br>其执行结果如下：<br><img src="https://img-blog.csdnimg.cn/20191017211508174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2ODA3Nw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在上图中我们可以看到，我们的sql文件已经导入成功。</p>
<h2 id="7-tomcat加载之前打包的war文件，完成webapp的移植"><a href="#7-tomcat加载之前打包的war文件，完成webapp的移植" class="headerlink" title="7.tomcat加载之前打包的war文件，完成webapp的移植"></a>7.tomcat加载之前打包的war文件，完成webapp的移植</h2><h3 id="7-1-将之前打包好的war文件上传到服务器"><a href="#7-1-将之前打包好的war文件上传到服务器" class="headerlink" title="7.1 将之前打包好的war文件上传到服务器"></a>7.1 将之前打包好的war文件上传到服务器</h3><p>在这里我使用的工具为MobaXterm工具，直接将文件上传到tomcat安装目录下的webapps文件夹下即可。<br>先后执行如下命令：<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo su</span><br><span class="line">cd /usr/tomcat/apache-tomcat<span class="number">-8.5</span><span class="number">.31</span>/bin</span><br><span class="line">./<span class="built_in">shutdown</span>.sh</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><br>我们即可以看到在webapps下刚丢进来的war包，已被tomcat自动解压，如下所示：<br><img src="https://img-blog.csdnimg.cn/20191017221001662.png#pic_center" alt="在这里插入图片描述"><br>此刻我们打开我们的浏览器，输入我们的<strong>公网ip地址：8080/项目路径</strong><br>以下附上整个服务器的运行动图：</p>
<p><img src="https://img-blog.csdnimg.cn/20191017221655380.gif#pic_center" alt="在这里插入图片描述"><br>好了，打完收工。</p>
<h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8.总结"></a>8.总结</h2><p><strong>太累了！！！</strong></p>
]]></content>
      <categories>
        <category>服务器相关</category>
      </categories>
  </entry>
</search>
